.TH "_KDB" 3 "Sat Jun 9 2012" "Version 0.8.1" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
_KDB \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <kdbprivate.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "\fBTrie\fP * \fBtrie\fP"
.br
.ti -1c
.RI "\fBSplit\fP * \fBsplit\fP"
.br
.ti -1c
.RI "\fBKeySet\fP * \fBmodules\fP"
.br
.ti -1c
.RI "\fBBackend\fP * \fBdefaultBackend\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The access point to the key database.
.PP
The structure which holds all information about loaded backends.
.PP
Its internal private attributes should not be accessed directly.
.PP
See kdb mount tool to mount new backends.
.PP
KDB object is defined as: 
.PP
.nf
typedef struct _KDB KDB;

.fi
.PP
.PP
\fBSee also:\fP
.RS 4
\fBkdbOpen()\fP and \fBkdbClose()\fP for external use 
.RE
.PP

.SH "Field Documentation"
.PP 
.SS "\fBBackend\fP* \fB_KDB::defaultBackend\fP"The default backend as fallback when nothing else is found. 
.SS "\fBKeySet\fP* \fB_KDB::modules\fP"A list of all modules loaded at the moment. 
.SS "\fBSplit\fP* \fB_KDB::split\fP"A list of all mountpoints. It basically has the same information than in the trie, but it is not trivial to convert from one to the other. 
.SS "\fBTrie\fP* \fB_KDB::trie\fP"The pointer to the trie holding backends. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code.
