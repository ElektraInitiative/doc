.TH "md_src_plugins_yaypeg_README" 3elektra "Tue Aug 6 2019" "Version 0.9.0" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_yaypeg_READMEPlugin: yaypeg 
 \- 
.IP "\(bu" 2
infos = Information about the yaypeg plugin is in keys below
.IP "\(bu" 2
infos/author = René Schwaiger sanssecours@me.com
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/needs = directoryvalue yamlsmith
.IP "\(bu" 2
infos/provides = storage/yaml
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = getstorage
.IP "\(bu" 2
infos/status = maintained unittest preview experimental unfinished nodoc concept discouraged
.IP "\(bu" 2
infos/metadata =
.IP "\(bu" 2
infos/description = This storage plugin uses a PEG based parser to read YAML files
.PP
.SH "YAy PEG"
.PP
The YAy PEG plugin use a parser based on \fCPEGTL\fP to convert YAML data to Elektra’s \fCKeySet\fP type\&.
.PP
.SS "Dependencies"
.PP
This plugin requires \fCPEGTL\fP \fC2\&.7\&.1\fP or later\&. It does not support PEGTL \fC3\fP, which requires C++ 17\&.
.PP
.SS "Examples"
.PP
.SS "Mappings"
.PP
``` 
.SH "Mount plugin"
.PP
.PP
sudo kdb mount config\&.yaml user/tests/yaypeg yaypeg
.PP
.SH "Add some values"
.PP
.PP
kdb set user/tests/yaypeg/movements/deadly 'Dull' kdb set user/tests/yaypeg/movements/deep 'Red'
.PP
.SH "Manually add a key"
.PP
.PP
printf 'Rosalía: El::Mal::Querer' >> \fCkdb file user/tests/yaypeg\fP
.PP
.SH "List keys"
.PP
.PP
kdb ls user/tests/yaypeg #> user/tests/yaypeg/Rosalía #> user/tests/yaypeg/movements/deadly #> user/tests/yaypeg/movements/deep
.PP
.SH "Retrieve a value"
.PP
.PP
kdb get user/tests/yaypeg/Rosalía #> El::Mal::Querer
.PP
.SH "Undo modifications"
.PP
.PP
kdb rm -r user/tests/yaypeg sudo kdb umount user/tests/yaypeg 
.PP
.nf
### Arrays

.fi
.PP
 
.SH "Mount plugin"
.PP
.PP
sudo kdb mount config\&.yaml user/tests/yaypeg yaypeg
.PP
.SH "Manually add some values"
.PP
.PP
printf 'ponies:
.br
' > \fCkdb file user/tests/yaypeg\fP printf ' - Fluttershy # Yay!
.br
' >> \fCkdb file user/tests/yaypeg\fP printf ' - Pinkie Pie
.br
' >> \fCkdb file user/tests/yaypeg\fP printf ' - Maud Pie' >> \fCkdb file user/tests/yaypeg\fP
.PP
.SH "List array keys"
.PP
.PP
kdb ls user/tests/yaypeg #> user/tests/yaypeg/ponies #> user/tests/yaypeg/ponies/#0 #> user/tests/yaypeg/ponies/#1 #> user/tests/yaypeg/ponies/#2
.PP
.SH "Retrieve last array entry"
.PP
.PP
kdb get user/tests/yaypeg/ponies/$(kdb getmeta user/tests/yaypeg/ponies array) #> Maud Pie
.PP
.SH "Undo modifications"
.PP
.PP
kdb rm -r user/tests/yaypeg sudo kdb umount user/tests/yaypeg 
.PP
.nf
### Boolean Values

.fi
.PP
 
.SH "Mount plugin"
.PP
.PP
sudo kdb mount config\&.yaml user/tests/yaypeg yaypeg
.PP
.SH "Manually add a boolean value to the database"
.PP
.PP
printf 'one: true' > \fCkdb file user/tests/yaypeg\fP
.PP
.SH "Elektra stores boolean values as \fC0\fP and \fC1\fP"
.PP
.PP
kdb get user/tests/yaypeg/one #> 1
.PP
.SH "Undo modifications to the key database"
.PP
.PP
kdb rm -r user/tests/yaypeg sudo kdb umount user/tests/yaypeg 
.PP
.nf
### Error Messages

.fi
.PP
 
.SH "Mount plugin"
.PP
.PP
sudo kdb mount config\&.yaml user/tests/yaypeg yaypeg
.PP
.SH "Manually add syntactically incorrect data"
.PP
.PP
printf 'Fluttershy:
.br
' > \fCkdb file user/tests/yaypeg\fP printf 'I’d like to be a tree
.br
' >> \fCkdb file user/tests/yaypeg\fP # Incorrect indentation
.PP
kdb ls user/tests/yaypeg 
.SH "RET: 5"
.PP
.PP
.SH "STDERR: \&.*config\&.yaml:2:0: Incomplete document, expected “end of file”\&.*"
.PP
.PP
.SH "Let us look at the error message more closely\&."
.PP
.PP
.SH "Since the location of \fCconfig\&.yaml\fP depends on the current user and OS,"
.PP
.PP
.SH "we store the text before \fCconfig\&.yaml\fP as \fCuser/tests/error/prefix\fP\&."
.PP
.PP
kdb set user/tests/error '$(2>&1 kdb ls user/tests/yaypeg)' kdb set user/tests/error/prefix '$(kdb get user/tests/error | grep 'config\&.yaml' | head -1 | sed -E 's/(\&.*)config\&.yaml\&.*/\\1/')' 
.SH "We also store the length of the prefix, so we can remove it from every"
.PP
.PP
.SH "line of the error message\&."
.PP
.PP
kdb set user/tests/error/prefix/length '$(kdb get user/tests/error/prefix | wc -c | sed 's/[ ]*//g')'
.PP
.SH "Since we only want to look at the “reason” of the error, we"
.PP
.PP
.SH "remove the other part of the error message with \fChead\fP and \fCtail\fP\&."
.PP
.PP
kdb get user/tests/error | tail -n3 | cut -c'$(kdb get user/tests/error/prefix/length)'- #> config\&.yaml:2:0: Incomplete document, expected “end of file” #> I’d like to be a tree #> ^
.PP
.SH "Fix syntax error"
.PP
.PP
printf 'Fluttershy:
.br
' > \fCkdb file user/tests/yaypeg\fP printf ' I’d like to be a tree
.br
' >> \fCkdb file user/tests/yaypeg\fP
.PP
kdb get user/tests/yaypeg/Fluttershy #> I’d like to be a tree
.PP
.SH "Add double quoted scalar with missing closing quote character"
.PP
.PP
printf '"nothing,nowhere\&.' > \fCkdb file user/tests/yaypeg\fP kdb ls user/tests/yaypeg 
.SH "RET: 5"
.PP
.PP
.SH "STDERR: \&.*config\&.yaml:1:17: Missing closing double quote or incorrect value inside flow scalar\&.*"
.PP
.PP
.SH "Check error messages for other syntax errors"
.PP
.PP
printf ''\\ö'' > \fCkdb file user/tests/yaypeg\fP kdb ls user/tests/yaypeg 
.SH "RET: 5"
.PP
.PP
.SH "STDERR: \&.*config\&.yaml:1:2: Unexpected escape character\&.*"
.PP
.PP
printf '\\'\\07"" > \fCkdb file user/tests/yaypeg\fP kdb ls user/tests/yaypeg 
.SH "RET: 5"
.PP
.PP
.SH "STDERR: \&.*config\&.yaml:1:1: Missing closing double quote or incorrect value inside flow scalar\&.*"
.PP
.PP
printf ''Single' > \fCkdb file user/tests/yaypeg\fP kdb ls user/tests/yaypeg 
.SH "RET: 5"
.PP
.PP
.SH "STDERR: \&.*config\&.yaml:1:7: Missing closing single quote or incorrect value inside flow scalar\&.*"
.PP
.PP
printf ''\\07'' > \fCkdb file user/tests/yaypeg\fP kdb ls user/tests/yaypeg 
.SH "RET: 5"
.PP
.PP
.SH "STDERR: \&.*config\&.yaml:1:1: Missing closing single quote or incorrect value inside flow scalar\&.*"
.PP
.PP
.SH "Store syntactically correct data"
.PP
.PP
printf 'dummy' > \fCkdb file user/tests/yaypeg\fP
.PP
.SH "Undo modifications"
.PP
.PP
kdb rm -r user/tests/error kdb rm -r user/tests/yaypeg sudo kdb umount user/tests/yaypeg ```
.PP
.SS "Limitations"
.PP
.IP "\(bu" 2
The plugin does \fBnot support\fP
.IP "  \(bu" 4
\fBblock scalars\fP,
.IP "  \(bu" 4
\fBflow collections\fP,
.IP "  \(bu" 4
\fBtags\fP,
.IP "  \(bu" 4
\fBanchors & aliases\fP, and
.IP "  \(bu" 4
\fBmultiple documents\fP
.PP
.PP
.SS "Comments"

.PP
.PP
While the parser does read comments, the \fClistener\fP does currently not add metakeys for them\&. This means that comments will be lost, if you modify a key set\&.
.PP
.SS "Error Messages"
.PP
Visualized error messages (containing \fC^\fP markers) might not point to the correct error location, if the input contains tabs or unicode characters with a length other than \fC1\fP\&. 
