.TH "md_src_plugins_gitresolver_README" 3elektra "Thu Mar 16 2023" "Version 0.9.14" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_gitresolver_README \- Plugin: gitresolver 

.IP "\(bu" 2
infos = Information about the gitresolver plugin is in keys below
.IP "\(bu" 2
infos/author = Thomas Waser thomas.waser@libelektra.org
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/needs =
.IP "\(bu" 2
infos/provides = resolver
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = rollback getresolver setresolver commit
.IP "\(bu" 2
infos/status = recommended productive reviewed conformant compatible coverage specific shelltest tested libc configurable final preview nodoc
.IP "\(bu" 2
infos/metadata =
.IP "\(bu" 2
infos/description = resolver for Git repositories
.PP
.SH "Description"
.PP
gitresolver is a resolver that fetches from a local Git repository during the get-phase and commits them back at the end of the set-phase\&. It operates on a temporary copy of the latest version of your file fetched from the repository\&. If the temporary copy modified, a new commit with the modified version will be created\&. Local files won't be touched\&.
.SH "Installation"
.PP
See \fBinstallation\fP\&. The package is called \fClibelektra5-gitresolver\fP\&.
.SH "Options"
.PP
\fCbranch\fP defines the branch to work on\&. Default: master \fCtracking\fP can be either \fCobject\fP or \fChead\fP (default)\&. if set to \fCobject\fP a conflict will only occur if the file in the Git repository has been updated while you were working on it\&. \fChead\fP will cause a conflict if the \fCHEAD\fP commit has been updated\&. \fCpull\fP when present: tells the plugin to fast-forward pull the repository, fails if FF isn't possible\&. \fCcheckout\fP when present: tells the plugin to checkout the file\&.
.SH "Limitations"
.PP
Currently it only works inside existing Git repositories\&.
.SH "Examples"
.PP
.PP
.nf
sudo kdb mount -R gitresolver /path/to/my/gitrepo/file\&.ini system:/gittest ini shell \
    execute/set='cd /path/to/my/gitrepo/ && git commit --amend'
.fi
.PP
 
