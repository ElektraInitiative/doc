.TH "doc_news_2021-10-04_0_9_8_md" 3elektra "Tue Mar 14 2023" "Version 0.9.13" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_news_2021-10-04_0_9_8_md \- 0\&.9\&.8 Release 

.IP "\(bu" 2
guid: 0CB8C139-730C-4CCD-9FB4-0C7C4AA4DBF2
.IP "\(bu" 2
author: Mihael Pranjić
.IP "\(bu" 2
pubDate: Mon, 04 Oct 2021 00:02:45 +0200
.IP "\(bu" 2
shortDesc: Redshift Elektrified, HL API & Java Binding Improvements
.PP
.PP
We are proud to release Elektra 0\&.9\&.8\&.
.SH "What is Elektra?"
.PP
Elektra serves as a universal and secure framework to access configuration settings in a global, hierarchical key database\&. For more information, visit \fChttps://libelektra\&.org\fP\&.
.PP
You can also read the news \fCon our website\fP\&.
.PP
You can try out the latest Elektra release using our docker image \fCelektra/elektra\fP\&. This is the quickest way to get started with Elektra without compiling and other obstacles, simply run:
.PP
.PP
.nf
docker pull elektra/elektra
docker run -it elektra/elektra
.fi
.PP
.SH "Highlights"
.PP
.IP "\(bu" 2
\fCkdb\fP now prohibits write operations on cascading keys that miss a corresponding existing key\&. See the details in the \fCTools\fP section below and the new subsection on cascading writes in the \fBtutorial\fP on cascading keys for further information\&. _(Alexander Firbas)_
.IP "\(bu" 2
Redshift is now elektrified\&. _(Tobias Schubert @qwepoizt)_
.PP
.SS "Redshift and Elektra"
We have created a version of \fCRedshift\fP that uses Elektra for configuration management!
.PP
We removed and refactored Redshift's code for loading configuration files, parsing CLI options and validating configuration to use Elektra\&. Redshift with Elektra has about 700 fewer lines of code (-16%) and is a great example of what Elektra is all about: More applications with less code for configuration management!
.PP
To test it, take a look at our PR \fCRefactor to use Elektra\fP and follow the instructions provided in \fCCONTRIBUTING\&.md\fP\&.
.SS "Benefits of Redshift using Elektra"
Refactoring Redshift to use Elektra brings the following benefits:
.PP
.IP "\(bu" 2
Fewer lines of code: reduction of ~700 LOC or 16% (measured across all \fC*\&.c\fP and \fC*\&.h\fP files exclusive of files automatically generated by Elektra)\&.
.IP "\(bu" 2
Adding new configuration settings is easier and takes less time: Validation and parsing of setting values (from configuration file and CLI options) is handled by Elektra - no custom code required!
.IP "\(bu" 2
Clean separation of application code and the specification of supported configuration settings (including defaults and validation rules)\&.
.IP "\(bu" 2
Automatic generation of CLI help text\&.
.PP
.SS "HL API improvements"
Redshift with Elektra uses the \fChigh-level API\fP\&.
.PP
We have made a large number of improvements to the \fChigh-level API\fP in the course of refactoring Redshift\&. The highlights are:
.PP
.IP "\(bu" 2
Improved detection of differences in specification between an application's compilation and runtime\&.
.IP "\(bu" 2
Improved validation of CLI options\&.
.IP "\(bu" 2
Early detection of errors in specification files\&.
.IP "\(bu" 2
Updated and improved documentation and tutorials\&.
.IP "\(bu" 2
Various other bugfixes\&.
.PP
.PP
More improvements and details are explained in later sections of these release notes\&.
.PP
Thanks to \fIKlemens Böswirth\fP, \fIMarkus Raab\fP and \fITobias Schubert\fP!
.SS "Windows releases"
We are now shipping experimental releases for Windows 32- and 64-bit! They can be downloaded \fChere\fP\&.
.PP
A big success is that Redshift already works with Elektra under Windows\&.
.SH "Plugins"
.PP
The following section lists news about the \fCplugins\fP we updated in this release\&.
.SS "gopts"
.IP "\(bu" 2
The \fCgopts\fP plugin now includes deeply nested options and arguments in the generated help message\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Errors from \fCgopts\fP are now correctly reported\&. _(Klemens Böswirth)_
.IP "\(bu" 2
Fix wrong variable names in \fCgopts_win32\&.h\fP\&. _(Tobias Schubert @qwepoizt)_
.PP
.SS "range"
.IP "\(bu" 2
The \fCrange\fP plugin now uses metakey \fCtype\fP as fallback, if \fCcheck/type\fP is not specified\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
The \fCrange\fP now treats all validation problems as warnings during \fBkdbGet()\fP\&. _(Tobias Schubert @qwepoizt)_
.PP
.SS "spec"
.IP "\(bu" 2
The \fCspec\fP plugin now runs before other \fCpostgetstorage\fP plugins, so that validation can happen during \fCkdbGet\fP as well\&. This is especially relevant in combination with \fCgopts\fP\&. _(Klemens Böswirth)_
.IP "\(bu" 2
Make spec plugin (with no support for # and _ in key names) work in mingw-w64 builds\&. _(Tobias Schubert @qwepoizt)_
.PP
.SS "sync"
.IP "\(bu" 2
Add support for mingw-w64 builds using fflush\&. _(Tobias Schubert @qwepoizt)_
.PP
.SS "wresolver"
.IP "\(bu" 2
Add missing \fCELEKTRA_PLUGIN_COMMIT\fP export\&. _(Tobias Schubert @qwepoizt)_
.PP
.SS "TOML"
.IP "\(bu" 2
Improvements to the parser, comment handling and especially quoting of strings\&. _(Klemens Böswirth)_
.IP "\(bu" 2
The \fCtoml\fP plugin now supports all four kinds of strings via the \fCtomltype\fP metadata\&. The plugin also remembers which kind was used and handles escape sequences properly, instead of always converting to basic strings\&. For details take a look at the updated \fBREADME\fP _(Klemens Böswirth)_
.IP "\(bu" 2
The \fCcomment/#/space\fP metakey is now used correctly to store the actual whitespace characters from the file, instead of a number\&. _(Klemens Böswirth)_
.PP
.SH "Libraries"
.PP
The text below summarizes updates to the \fCC (and C++)-based libraries\fP of Elektra\&.
.SS "Compatibility"
.IP "\(bu" 2
Introduced public C API function \fCksSearch\fP
.IP "\(bu" 2
Previously public function \fCksSearchInternal\fP is now static\&. Use \fCksSearch\fP instead\&.
.PP
.PP
_(Michael Tucek)_
.SS "Core"
.IP "\(bu" 2
Remove obsolete \fCksNeedSync\fP function\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Replace various occurences of \fCsprintf\fP by \fCsnprintf\fP and fix out of bounds array access in markdownlinkconverter\&. _(Mihael Pranjić)_
.PP
.SS "High-level API"
.IP "\(bu" 2
Modified High-level API to treat all warnings as errors\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Implemented support for warnings in High-level API error handling\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Fix a small bug for warnings in High-level API\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Fix resource management in High-level API error handling\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Implement a check to detect whether an application's specification was properly \fCmount\fPed and \fCspec-mount\fPed\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Implement a check to detect whether an application's specification was changed after installation\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Add sanity-checks to resource management\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Refactor and modularize code\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Update and improve inline documentation\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Remove 'minimal validation' in favor of the new checks (see above)\&. _(Tobias Schubert @qwepoizt)_
.PP
.SS "Ease"
.IP "\(bu" 2
Implement calculation of a specification token (=sha-256 hash)\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Add \fCasmonier's sha-2\fP for sha-256 hash calculation\&. _(Tobias Schubert @qwepoizt)_
.PP
.SH "Bindings"
.PP
Bindings allow you to utilize Elektra using \fCvarious programming languages\fP\&. This section keeps you up-to-date with the multi-language support provided by Elektra\&.
.SS "Java binding"
.IP "\(bu" 2
Upgraded Java binding gradle wrapper to 7\&.2\&.
.IP "\(bu" 2
Java source files are formatted using the \fCGoogle Java format\fP
.IP "\(bu" 2
Renamed zero argument static factory method \fCKey::createNameless\fP to \fCKey::create\fP\&. To migrate to this change, just update calling code to use the new method name\&.
.IP "\(bu" 2
Updated method documentation previously publishing the error key based error handling approach to the Java binding consumer\&. Such arguments are now explicitly only used for returning warning information in case no error occurred\&. In case of an exceptional state, appropriate exceptions are thrown\&. Such exceptions provide access to the underlying key containing warning and error information as metadata\&. Please review API usage to consider the more elaborated explanation of how Elektra uses this argument's value\&. Affected signatures:
.IP "  \(bu" 4
Updated javadoc for \fCKDB::open(Key)\fP
.IP "  \(bu" 4
Updated javadoc for \fCKDB::open(KeySet, Key)\fP
.IP "  \(bu" 4
Updated javadoc for \fCKDB::close(Key)\fP
.IP "  \(bu" 4
Updated javadoc for \fCKDB::get(Key)\fP
.IP "  \(bu" 4
Updated javadoc for \fCKDB::get(KeySet, Key)\fP
.IP "  \(bu" 4
Updated javadoc for \fCKDB::set(KeySet, Key)\fP, better explaining the relevance of the second argument \fCparentKey\fP
.PP

.IP "\(bu" 2
Introduced \fCKeySet::remove(Key)\fP and \fCKeySet::remove(String)\fP
.IP "\(bu" 2
Removed \fCKeySet::lookup(Key, int)\fP and \fCKeySet::lookup(String, int)\fP as well as accompanying flag definitions \fCKeySet::KDB_O_NONE\fP, \fCKeySet::KDB_O_DEL\fP and \fCKeySet::KDB_O_POP\fP\&. Please use \fCKeySet::lookup(Key)\fP and \fCKeySet::lookup(String)\fP instead\&. Instead of \fCKeySet::KDB_O_DEL\fP, please consider using \fCKey::release\fP\&. The proper replacement for \fCKeySet::KDB_O_POP\fP is \fCKeySet::remove(Key)\fP or \fCKeySet::remove(String)\fP\&.
.IP "\(bu" 2
Native library proxy interface \fCElektra\fP is now package private (previously was public)\&.
.IP "\(bu" 2
Added example Java plugin \fCwhitelist\fP (see \fBhere\fP)
.IP "\(bu" 2
Changed \fCKey nextMeta()\fP to \fCOptional<Key> nextMeta ()\fP no longer throwing NoSuchElementException for non-exceptional behavior
.IP "\(bu" 2
Native library proxy interface \fCElektra\fP is now package private (previously was public)
.IP "\(bu" 2
Added example Java plugin \fCwhitelist\fP
.IP "\(bu" 2
Added support of binary valued keys:
.IP "  \(bu" 4
Introduced \fCKey::getBinary()\fP and \fCKey::setBinary(byte[])\fP
.IP "  \(bu" 4
Renamed \fCKeyBinaryTypeNotSupportedException\fP to \fCKeyStringValueException\fP
.IP "  \(bu" 4
Introduced \fCKeyBinaryValueException\fP
.IP "  \(bu" 4
Improved \fCKey\fP test coverage
.PP

.IP "\(bu" 2
Fixed example project in \fCexamples/external/java/read-keys-example\fP
.IP "  \(bu" 4
now works with a standard installation of Elektra
.IP "  \(bu" 4
updated code to work with current Java binding
.PP

.IP "\(bu" 2
\fCKeySetReleasedException\fP and \fCKeyReleasedException\fP have been replaced by the native \fCIllegalStateException\fP
.IP "\(bu" 2
Introduced abstraction \fCReadableKey\fP to better reflect the limitations of metadata keys via a type hierarchy\&. Metadata keys are now returned as \fCReadableKey\fPs:
.IP "  \(bu" 4
\fCKey\fP extends \fCReadableKey\fP
.IP "  \(bu" 4
\fCKey\fP class is now final
.IP "  \(bu" 4
Changed \fCKey Key::nextMeta()\fP to \fCOptional<ReadableKey> Key::nextMeta()\fP, no longer throwing NoSuchElementException for non-exceptional behavior
.IP "  \(bu" 4
Changed \fCKey Key::currentMeta()\fP to \fCReadableKey Key::currentMeta()\fP
.IP "  \(bu" 4
Changed \fCOptional<Key> Key::getMeta(String)\fP to \fCOptional<ReadableKey> Key::getMeta(String)\fP
.IP "  \(bu" 4
Metadata keys can no longer be manually released
.IP "  \(bu" 4
Removed \fCKey::incRef\fP, \fCKey::decRef\fP and \fCKey::getRef\fP
.IP "  \(bu" 4
\fCReadableKey\fP/\fCKey\fP now implements \fCComparable<ReadableKey>\fP
.IP "    \(bu" 6
\fCint Key::cmp(Key)\fP has been renamed to \fCint Key::compareTo(Key)\fP
.IP "    \(bu" 6
\fCReadableKey\fP now implements \fCequals\fP and \fChashCode\fP in line with the contract for \fCint Key::compareTo(Key)\fP
.PP

.IP "  \(bu" 4
\fCReadableKey\fP/\fCKey\fP no longer implements \fCIterable<String>\fP for iterating over the parts of a key's name - use \fCIterator<String> ReadableKey::keyNameIterator ()\fP instead
.IP "  \(bu" 4
\fCKey\fP now implements \fCIterable<Key>\fP to iterate over a key's metadata \fCReadableKey\fPs
.IP "  \(bu" 4
Fixed API method typo: Renamed \fCReadableKey::isDirectBelow\fP/\fCKey::isDirectBelow\fP to \fCisDirectlyBelow\fP
.PP

.IP "\(bu" 2
\fCKeyNameIterator\fP and \fCKeySetIterator\fP are now package private
.IP "\(bu" 2
\fCKeySetAppendException\fP has been renamed to \fCKeySetException\fP and now conveys general \fCKeySet\fP related exceptional states
.IP "\(bu" 2
\fCKeySet\fP now implements \fCSortedSet<Key>\fP (see \fCJava API\fP)\&. Previously \fCKeySet\fP was only implementing \fCIterator<Key>\fP\&. Now a native key set can be used via its \fCKeySet\fP representation wherever one of the following Java Collection Framework interfaces is supported:
.IP "  \(bu" 4
\fCIterable\fP
.IP "  \(bu" 4
\fCCollection\fP
.IP "  \(bu" 4
\fCSet\fP
.IP "  \(bu" 4
\fCSortedSet\fP
.PP

.PP
.PP
_(Michael Tucek)_
.SS "GLib"
.IP "\(bu" 2
Compile \fCglib\fP binding with \fC-Wno-pedantic\fP for compatibility\&. _(Mihael Pranjić)_
.PP
.SH "Tools"
.PP
.IP "\(bu" 2
Really add all tools when using \fC-DTOOLS=ALL\fP\&. _(Markus Raab)_
.IP "\(bu" 2
ZeroMQ Hub: fix compilation and man page\&. _(Markus Raab)_
.IP "\(bu" 2
Configure packaging for FUSE tool\&. _(Alexander Firbas)_
.IP "\(bu" 2
FUSE: fix bug preventing binary writes\&. _(Alexander Firbas)_
.IP "\(bu" 2
Ambiguous write operations are now disabled in kdb\&. _(Alexander Firbas)_
.IP "\(bu" 2
\fCwebd\fP: update npm dependencies\&. _(Mihael Pranjić)_
.PP
.SS "KDB"
.IP "\(bu" 2
\fCkdb set\fP, \fCkdb meta-set\fP: Only allow writes to the cascading namespace if the lookup succeeds\&. Otherwise, the operation is ambiguous and therefore aborted\&. No more guessing of namespaces in case a cascading key is given (\fCuser:, system\fP: for \fCkdb set\fP, \fCspec:\fP for \fCkdb meta-set\fP), _(Alexander Firbas)_
.IP "\(bu" 2
\fCkdb set\fP, \fCkdb meta-set\fP: Validation of keys can no longer be bypassed by using non-cascading keys (except with the new --force (-f) option)\&. _(Alexander Firbas)_
.IP "\(bu" 2
Disable \fC-N/--namespace\fP option in all kdb subcommands _(Alexander Firbas)_
.IP "\(bu" 2
Implement new name part getter commands \fCkdb namespace\fP, \fCkdb basename\fP and \fCkdb dirname\fP\&. _(Alexander Firbas)_
.IP "\(bu" 2
\fCkdb file\fP: Remove namespace guessing (in case a cascading key is given, it needs to resolve to an existing key)\&. _(Alexander Firbas)_
.IP "\(bu" 2
\fCkdb editor/import\fP: Disable the use of cascading names (and the 'validate' strategy operating on cascading keys) entirely\&. _(Alexander Firbas)_
.IP "\(bu" 2
Update numerous tests to comply with changes above\&. _(Alexander Firbas)_
.IP "\(bu" 2
Add a new subsection on cascading writes to the \fBtutorial\fP on cascading keys\&. _(Alexander Firbas)_
.IP "\(bu" 2
\fCkdb gen\fP: Generate specification token during code-generation and add it to generated contract\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
\fCkdb gen\fP: Improve naming of variables to make code easier to understand\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
\fCkdb spec-mount\fP: Improve usability by failing with helpful error messages, if the specification contains errors\&. _(Tobias Schubert @qwepoizt)_
.PP
.SH "Scripts"
.PP
.IP "\(bu" 2
Add script for mingw-w64 i686 build\&. _(Tobias Schubert @qwepoizt)_
.PP
.SH "Documentation"
.PP
.IP "\(bu" 2
Add link and small improvements to tutorial about \fBwriting specifications\fP and \fBlogger\fP\&. _(Markus Raab)_
.IP "\(bu" 2
doc: add pre/postconditions and invariants to module key _(@lawli3t)_
.IP "\(bu" 2
doc: add pre/postconditions and invariants to module keymeta _(@lawli3t)_
.IP "\(bu" 2
Fix broken links _(@lawli3t)_
.IP "\(bu" 2
Remove previous authors\&. _(Markus Raab)_
.IP "\(bu" 2
add pre/postconditions and invariants to module keytest _(@lawli3t)_
.IP "\(bu" 2
Updated the news template\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Update and improve tutorial and in-code comments for high-level API _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Improve documentation of opts library _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Update tutorial 'High-level API (with code-generation)' to reflect change of \fCloadConfiguration()\fP's signature in release 0\&.9\&.5 _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
add pre/postconditions and invariants to module keyvalue _(@lawli3t)_
.IP "\(bu" 2
Update and improve inline documentation of \fCkdb gen\fP\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Fix broken links\&. _(Robert Sowula)_
.PP
.SH "Tests"
.PP
.IP "\(bu" 2
Fix failing \fCtestshell_markdown_tutorial_crypto\fP on Mac OS and other OS with GnuPG version >= 2\&.3\&.1\&. _(Peter Nirschl @petermax2)_
.IP "\(bu" 2
Use clang-format 12 for Restyled and update Restyled version\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Update all Restyled formatters to current versions\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Add additional test cases for module \fCkeytest\fP _(@lawli3t)_
.IP "\(bu" 2
Update tests for high-level API to work with new specification token mechanism\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Add tests for libease's sha-256\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Add tests for sha-256 hash calculation of a KeySet\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Add additional test cases for module \fCkeymeta\fP _(@lawli3t)_
.PP
.SH "Packaging"
.PP
.IP "\(bu" 2
Add packages for openSuse Leap 15\&.3\&. _(Robert Sowula)_
.PP
.SH "Build"
.PP
.SS "CMake"
.IP "\(bu" 2
Add files generated by CMake to \&.gitignore\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Add support for i686 to mingw-w64 toolchains\&. _(Tobias Schubert @qwepoizt)_
.IP "\(bu" 2
Add plugins type, cache, spec, gopts, sync to mingw-w64 builds\&. _(Tobias Schubert @qwepoizt)_
.PP
.SS "Docker"
.IP "\(bu" 2
Add docker images for ABI tests\&. _(Robert Sowula)_
.IP "\(bu" 2
Enable BuildKit features to leverage tmpfs to speed up \fCdocker build\fP commands\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Bump Gradle to version 7\&.2\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Bump Debian Buster images to Bullseye and Stretch images to Buster\&. We still leave one Debian Stretch job due to upstream Debian LTS support until June 2022\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Add Dockerfiles for openSUSE Leap 15\&.3 and CentOS Stream 8\&. _(Robert Sowula)_
.IP "\(bu" 2
Add docker image for OpenWrt package building\&. _(Robert Sowula)_
.IP "\(bu" 2
Add files generated by docker when tutorial \fCrun-all-tests-with-docker\fP is followed to \&.gitignore\&. _(Tobias Schubert @qwepoizt)_
.PP
.SS "Restyled"
.IP "\(bu" 2
Upgrade to latest stable restylers\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Added Google Java formatter _(Michael Tucek)_
.PP
.SH "Infrastructure"
.PP
.SS "Jenkins"
.IP "\(bu" 2
Add ABI test stage for release pipeline\&. _(Robert Sowula)_
.IP "\(bu" 2
Move check stages that don't build the code to a dedicated stage, to avoid confusion when parallel builds are aborted\&. _(Robert Sowula)_
.IP "\(bu" 2
Add test stages for openSUSE and CentOS\&. _(Robert Sowula)_
.IP "\(bu" 2
Use \fCtmpfs\fP in Docker to speed up the test suite\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Add OpenWrt package building stage to release pipeline\&. _(Robert Sowula)_
.IP "\(bu" 2
Add debian-bullseye-mingw-w64-i686 build to Jenkinsfile\&. _(Tobias Schubert @qwepoizt)_
.PP
.SS "Cirrus"
.IP "\(bu" 2
Bump FreeBSD images to 12\&.2 and 13\&.0 using the LLVM 12 toolchain, drop FreeBSD 11\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Fix cirrus-file parsing errors\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Redistribute CPU and memory resources and enable greedy instances\&. _(Mihael Pranjić)_
.PP
.SS "GitHub Actions"
.IP "\(bu" 2
Migrate most macOS build jobs to GitHub actions to speed up builds\&. _(Mihael Pranjić)_
.IP "\(bu" 2
Upgrade macOS GCC build job to GCC 11\&. _(Mihael Pranjić)_
.PP
.SH "Website"
.PP
The website is generated from the repository, so all information about plugins, bindings and tools are always up-to-date\&. Furthermore, we changed:
.PP
.IP "\(bu" 2
Update npm dependencies\&. _(Mihael Pranjić)_
.PP
.SH "Outlook"
.PP
We are currently working on following topics:
.PP
.IP "\(bu" 2
1\&.0 API _(Stefan Hanreich)_ and _(Klemens Böswirth)_
.IP "\(bu" 2
KDB access using FUSE _(Alexander Firbas)_
.IP "\(bu" 2
Improve Java Development Experience _(Michael Tucek)_
.IP "\(bu" 2
Improve Plugin Framework _(Klemens Böswirth)_
.IP "\(bu" 2
Default TOML plugin _(Klemens Böswirth)_, _(Markus Raab)_ and _(Jakob Fischer)_
.IP "\(bu" 2
Elektrify KDE _(Dardan Haxhimustafa)_, _(Felix Resch)_ and _(Mihael Pranjić)_
.IP "\(bu" 2
Elektrify GNOME _(Mihael Pranjić)_
.IP "\(bu" 2
Continious Releases _(Robert Sowula)_
.IP "\(bu" 2
Improve 3-way merge _(Dominic Jäger)_
.IP "\(bu" 2
Shell completion _(Ulrike Schäfer)_
.IP "\(bu" 2
Ansible module _(Thomas Waser)_
.PP
.SH "Statistics"
.PP
We closed \fC59 issues\fP for this release\&.
.PP
About 17 authors changed 396 files with 13155 insertions(+) and 8331 deletions(-) in 597 commits\&.
.PP
Thanks to all authors for making this release possible!
.SH "Join the Initiative!"
.PP
We welcome new contributors! Read \fChere\fP about how to get started\&.
.PP
As first step, you could give us feedback about these release notes\&. Contact us via our \fCissue tracker\fP\&.
.SH "Get the Release!"
.PP
You can download the release from \fChere\fP or \fCGitHub\fP
.PP
The \fChashsums are:\fP
.PP
.IP "\(bu" 2
name: elektra-0\&.9\&.8\&.tar\&.gz
.IP "\(bu" 2
size: 7753097
.IP "\(bu" 2
md5sum: d978c17aae94d79f9d1f26b547bc46fe
.IP "\(bu" 2
sha1: 9725bfd6fca832ed472290e9de3711e01e9bfe54
.IP "\(bu" 2
sha256: b1e8908c138b84e788fdff25eab1c2b07e0b422a5fd1667814539ea02f151c58
.PP
.PP
The release tarball is also available signed using GnuPG from \fChere\fP or on \fCGitHub\fP
.PP
The following GPG Key was used to sign this release: 12CC44541E1B8AD9B66AFAD55262E7353324914A
.PP
Already built API documentation can be found \fChere\fP or on \fCGitHub\fP\&.
.SH "Stay tuned!"
.PP
Subscribe to the \fCRSS feed\fP to always get the release notifications\&.
.PP
If you also want to participate, or for any questions and comments please contact us via our issue tracker \fCon GitHub\fP\&.
.PP
\fCPermalink to this NEWS entry\fP
.PP
For more information, see \fChttps://libelektra\&.org\fP\&.
.PP
Best regards, \fCElektra Initiative\fP 
