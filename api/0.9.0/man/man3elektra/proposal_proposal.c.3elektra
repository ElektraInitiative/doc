.TH "proposal.c" 3elektra "Tue Aug 6 2019" "Version 0.9.0" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
proposal.c \- Implementation of proposed API enhancements\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <ctype\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <kdbassert\&.h>\fP
.br
\fC#include <kdblogger\&.h>\fP
.br
\fC#include <kdbprivate\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "ssize_t \fBkeySetStringF\fP (Key *key, const char *format,\&.\&.\&.)"
.br
.RI "Set a formatted string\&. "
.ti -1c
.RI "int \fBelektraKsToMemArray\fP (KeySet *ks, Key **buffer)"
.br
.RI "Builds an array of pointers to the keys in the supplied keyset\&. "
.ti -1c
.RI "KeySet * \fBksRenameKeys\fP (KeySet *config, const Key *name)"
.br
.RI "Takes the first key and cuts off this common part for all other keys, instead name will be prepended\&. "
.ti -1c
.RI "int \fBkeyLock\fP (Key *key, \fBoption_t\fP what)"
.br
.RI "Permanently locks a part of the key\&. "
.ti -1c
.RI "KeySet * \fBelektraKeyGetMetaKeySet\fP (const Key *key)"
.br
.RI "Return metadata as keyset\&. "
.ti -1c
.RI "Key * \fBksPrev\fP (KeySet *ks)"
.br
.RI "Returns the previous Key in a KeySet\&. "
.ti -1c
.RI "Key * \fBksPopAtCursor\fP (KeySet *ks, cursor_t pos)"
.br
.RI "Pop key at given cursor position\&. "
.ti -1c
.RI "Key * \fBkeyAsCascading\fP (const Key *key)"
.br
.RI "keyRel replacement "
.ti -1c
.RI "int \fBkeyRel2\fP (const Key *key, const Key *check, KeyRelType which)"
.br
.RI "Replacement proposal for keyRel\&. "
.in -1c
.SH "Detailed Description"
.PP 
Implementation of proposed API enhancements\&. 


.PP
\fBCopyright:\fP
.RS 4
BSD License (see LICENSE\&.md or https://www.libelektra.org) 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
