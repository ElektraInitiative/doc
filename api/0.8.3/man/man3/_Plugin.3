.TH "_Plugin" 3 "Mon Oct 1 2012" "Version 0.8.3" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
_Plugin \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <kdbprivate.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "\fBKeySet\fP * \fBconfig\fP"
.br
.ti -1c
.RI "kdbOpenPtr \fBkdbOpen\fP"
.br
.ti -1c
.RI "kdbClosePtr \fBkdbClose\fP"
.br
.ti -1c
.RI "kdbGetPtr \fBkdbGet\fP"
.br
.ti -1c
.RI "kdbSetPtr \fBkdbSet\fP"
.br
.ti -1c
.RI "kdbErrorPtr \fBkdbError\fP"
.br
.ti -1c
.RI "const char * \fBname\fP"
.br
.ti -1c
.RI "size_t \fBrefcounter\fP"
.br
.ti -1c
.RI "void * \fBdata\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Holds all information related to a plugin.
.PP
Since Elektra 0.8 a Backend consists of many plugins.
.PP
A plugin should be reusable and only implement a single concern. Plugins which are supplied with Elektra are located below src/plugins. It is no problem that plugins are developed external too. 
.SH "Field Documentation"
.PP 
.SS "\fBKeySet\fP* \fB_Plugin::config\fP"This keyset contains configuration for the plugin. Direct below system/ there is the configuration supplied for the backend. Direct below user/ there is the configuration supplied just for the plugin, which should be of course prefered to the backend configuration. The keys inside contain information like /path which path should be used to write configuration to or /host to which host packets should be send. 
.PP
\fBSee also:\fP
.RS 4
\fBelektraPluginGetConfig()\fP 
.RE
.PP

.SS "void* \fB_Plugin::data\fP"This handle can be used for a plugin to store any data its want to. 
.SS "kdbClosePtr \fB_Plugin::kdbClose\fP"The pointer to kdbClose_template() of the backend. 
.SS "kdbErrorPtr \fB_Plugin::kdbError\fP"The pointer to kdbError_template() of the backend. 
.SS "kdbGetPtr \fB_Plugin::kdbGet\fP"The pointer to kdbGet_template() of the backend. 
.SS "kdbOpenPtr \fB_Plugin::kdbOpen\fP"The pointer to kdbOpen_template() of the backend. 
.SS "kdbSetPtr \fB_Plugin::kdbSet\fP"The pointer to kdbSet_template() of the backend. 
.SS "const char* \fB_Plugin::name\fP"The name of the module responsible for that plugin. 
.SS "size_t \fB_Plugin::refcounter\fP"This refcounter shows how often the plugin is used. Not shared plugins have 1 in it 

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code.
