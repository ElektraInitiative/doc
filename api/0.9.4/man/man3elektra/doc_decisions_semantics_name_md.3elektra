.TH "doc_decisions_semantics_name_md" 3elektra "Mon Feb 1 2021" "Version 0.9.4" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_decisions_semantics_name_mdSemantics in Key Names 
 \- It can get quite cumbersome to find out about key interrelations like arrays\&.
.PP
The alternative would be to have semantics in key names, with following advantages:
.PP
.IP "\(bu" 2
maybe less metadata to save memory (only array?)
.PP
.PP
Do not encode any semantics into the key names\&. All semantic must be in metadata\&.
.PP
Nevertheless, there are guidelines (without any checks in \fCkeySetBaseName\fP):
.PP
.IP "\(bu" 2
\fC#\fP is used to indicate that array numbers follow\&.
.IP "\(bu" 2
\fC®\fP is used to indicate that some information was encoded in the key name\&. This is usually only needed internally in storage plugins\&.
.IP "\(bu" 2
The UTF-8 sequence \fC®elektra\fP (i\&.e\&. the 9-byte sequence \fCC2 AE 65 6C 65 6B 74 72 61\fP) is reserved, see key name docu\&.
.PP
.PP
There are, however, rules and conventions which syntax to use for specific semantics\&. The \fCspec\fP plugin guards these rules\&.
.PP
.IP "\(bu" 2
for consistency, whenever possible, metadata should be preferred
.IP "\(bu" 2
no escaping of key base names necessary
.IP "\(bu" 2
it is very unlikely that \fC®elektra\fP collides with a real key base name a user wanted to have
.IP "\(bu" 2
\fC®elektra\fP makes very clear that there is a special reserved meaning
.IP "\(bu" 2
\fC®elektra\fP UTF-8 encoding decodes to 'some character' + ® in many 8-bit encodings (including ISO 8859-1 aka Latin1 and Windows (Codepage) 1252, in the encoding \fCC\fP, however, you get `''$'\\302\\256''elektra'`)
.PP
.PP
.IP "\(bu" 2
\fBArrays\fP
.IP "\(bu" 2
\fBBase Names\fP
.PP

