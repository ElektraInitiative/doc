.TH "doc_vagrant_README_md" 3elektra "Tue Feb 27 2018" "Version 0.8.22" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_vagrant_README_mdTrying out Elektra with Vagrant 
 \- This Vagrantfile provisions a machine based on debian/jessie64 with all tools to build Elektra\&.
.PP
If \fCVagrant\fP is installed on your machine change to the directory containing the file you are currently reading and build a box for vagrant with 
.PP
.nf
$ vagrant up && vagrant package && vagrant box add buildelektra package\&.box && vagrant destroy -f

.fi
.PP
 This will take some time, but when its done you have a new vagrantbox as you can verify with \fCvagrant box list\fP\&. Amongst your boxes you should see the box \fCbuildelektra\fP\&.
.PP
You can now set up a new VM from this box easily: Enter a directory where you want to set up the VM 
.PP
.nf
# enter a directory where you want to set up the VM
$ mkdir ~/vagrant/buildelektra && cd $_
# now you create a Vagrantfile \&.\&.\&.
$ vagrant init buildelektra
# \&.\&.\&. and start the VM
$ vagrant up

.fi
.PP
.PP
When the machine is running, access it with 
.PP
.nf
$ vagrant ssh

.fi
.PP
 In this SSH session you can interact with the machine\&.
.PP
By default Vagrant synchronizes the folder on the host machine containing the vagrantfile with the folder \fC/vagrant\fP in the VM\&. Therefore we will build a \&.deb package of Elektra in this folder\&.
.PP
.PP
.nf
# in the VM change to the synched folder
$ cd /vagrant
# build the commit with the tag "0\&.8\&.19"
$ sudo buildelektra -b elektra 0\&.8\&.19
.fi
.PP
.PP
When you are done leave the VM with \fCCTRL-D\fP\&. The folder should now contain the created \&.deb file\&.
.PP
You can either shut the VM down with \fCvagrant halt\fP or delete it with \fCvagrant destroy\fP\&. 
