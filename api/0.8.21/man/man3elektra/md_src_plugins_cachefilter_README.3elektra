.TH "md_src_plugins_cachefilter_README" 3elektra "Fri Dec 22 2017" "Version 0.8.21" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_cachefilter_READMEPlugin: cachefilter 
 \- 
.IP "\(bu" 2
infos = Information about the cachefilter plugin is in keys below
.IP "\(bu" 2
infos/author = Marvin Mall namoshek@libelektra.org
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/needs =
.IP "\(bu" 2
infos/provides = filter
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = postgetstorage presetstorage
.IP "\(bu" 2
infos/status = maintained unittest libc nodep global experimental nodoc
.IP "\(bu" 2
infos/metadata =
.IP "\(bu" 2
infos/description = ensures result keyset only contains requested keys
.PP
.PP
A global plugin that steps in during \fC\fBkdbGet()\fP\fP process to filter the results in a way, so that no other keys than the requested one or descendants of it are returned\&. During \fC\fBkdbSet()\fP\fP the filtered keys are added back to the output, so that they don't get lost during the storage process\&. In other words, the plugin caches filtered keys to simplify the use of the API\&.
.PP
.SS "Usage"
.PP
There is not much to do to use the plugin\&. Just mount is as global plugin and you are done:
.PP
.PP
.nf
kdb global-mount cachefilter
.fi
.PP
.PP
To remove the plugin just use \fCkdb global-umount\fP:
.PP
.PP
.nf
kdb global-umount cachefilter
.fi
.PP
 
