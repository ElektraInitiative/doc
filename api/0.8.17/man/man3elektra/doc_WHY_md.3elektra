.TH "doc_WHY_md" 3elektra "Tue Jun 14 2016" "Version 0.8.17" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_WHY_md \- Why should I use Elektra? 
The three main points relevant for most people are:
.PP
.IP "1." 4
Even though Elektra provides a global keydatabase configuration files stay human read- and writable which allows us to integrate unmodified software\&.
.IP "2." 4
Flexible adoption on how the configuration is accessed via plugins: you can run arbitrary code, e\&.g\&. do a \fCgit commit\fP or log/notify when configuration files are changed\&.
.IP "3." 4
Elektra allows you to specify configuration values:
.IP "  \(bu" 4
use the value of other configuration values (symbolic links)
.IP "  \(bu" 4
calculate the values based on other configuration values
.IP "  \(bu" 4
validation configuration files
.IP "  \(bu" 4
\fBgenerate code based on it\fP
.IP "  \(bu" 4
\fBand much more\fP
.PP

.PP
.PP
.SS "Unique Features"
.PP
Features that rarely can be found elsewhere (at least in this combination):
.PP
.IP "\(bu" 2
Bootstrap code and proper abstraction is included:
.IP "  \(bu" 4
you do not need to worry about the file names of configuration files in the application
.IP "  \(bu" 4
cascading between \fC/etc\fP, \fC$HOME\fP, \fCcwd\fP and so on
.IP "  \(bu" 4
you can change which Elektra path is connected to which configuration file with \fBmounting\fP
.IP "  \(bu" 4
Portable across OS (Linux, BSD, w64, mac os x,\&.\&. ) and desktop systems (GNOME, KDE,\&.\&.\&.)
.PP

.IP "\(bu" 2
No daemon, so no single point of failure but still having guarantees of consistent, validated files with good performance\&.
.IP "\(bu" 2
Provides 3-way merging for configuration upgrades\&.
.PP
.PP
.SS "Further reasons"
.PP
.IP "\(bu" 2
Links and automatic calculation of values: unlike with other solutions you do not need to duplicate configuration values for different applications but you can comfortably link between them which makes many inconsistencies impossible\&.
.IP "\(bu" 2
Allows us to easily create GUIs and web-UIs for the whole configuration on the system\&.
.IP "\(bu" 2
Allows you to import/export all parts of the configuration\&.
.IP "\(bu" 2
Syntax independence: you can consistently use your favourite syntax\&.
.IP "\(bu" 2
Configuration Management (such as Puppet) can be used on top of it without having to fiddle with specifics of every configuration file\&.
.IP "\(bu" 2
CLI-tool available
.IP "\(bu" 2
\fCkdb editor\fP allows you to edit any path of Elektra with your favourite syntax (independent of the actual syntax of the configuration files that store values of this path)\&.
.IP "\(bu" 2
Allows us to also (integrate commandline arguments and environment)[/src/libs/getenv] into a consistent place for configuration\&.
.IP "\(bu" 2
Reduces huge amount of code: Nearly every application has very similar code:
.IP "  \(bu" 4
finding the correct configuration file (for different OS)
.IP "  \(bu" 4
parsing configuration files
.IP "  \(bu" 4
validating configuration files
.IP "  \(bu" 4
replace configuration files on changes
.PP

.IP "\(bu" 2
All advantages libraries have:
.IP "  \(bu" 4
Performance: Improvements in the library benefits all applications\&.
.IP "  \(bu" 4
The library only needs to be loaded once in the memory\&.
.IP "  \(bu" 4
On fixes not all binaries of all applications need to be replaced\&.
.PP

.IP "\(bu" 2
All advantages maintained code with a community has:
.IP "  \(bu" 4
If something does not work, open an issue\&.
.IP "  \(bu" 4
If you have a question, open an issue\&.
.IP "  \(bu" 4
Regular releases\&. 
.PP

.PP

