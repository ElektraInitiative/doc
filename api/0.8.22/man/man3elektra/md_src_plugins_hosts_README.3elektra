.TH "md_src_plugins_hosts_README" 3elektra "Tue Feb 27 2018" "Version 0.8.22" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_hosts_READMEPlugin: hosts 
 \- 
.IP "\(bu" 2
infos = Information about hosts plugin is in keys below
.IP "\(bu" 2
infos/author = Markus Raab elektra@libelektra.org
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/provides = storage/hosts
.IP "\(bu" 2
infos/needs =
.IP "\(bu" 2
infos/recommends = glob error network
.IP "\(bu" 2
infos/placements = getstorage setstorage
.IP "\(bu" 2
infos/status = maintained unittest nodep libc limited
.IP "\(bu" 2
infos/metadata = order comment/# comment/#/start comment/#/space
.IP "\(bu" 2
infos/description = This plugin reads and writes /etc/hosts files\&.
.PP
.PP
The \fC/etc/hosts\fP file is a simple text file that associates IP addresses with hostnames, one line per IP address\&. The format is described in \fChosts(5)\fP\&.
.PP
.SS "Special values"
.PP
.SS "Hostnames"
.PP
Canonical hostnames are stored as key names with their IP address as value\&.
.PP
.SS "Aliases"
.PP
Aliases are stored as sub keys with a read only duplicate of the associated IP address as value\&.
.PP
.SS "Comments"
.PP
Comments are stored according to the comment metadata specification (see \fC/doc/METADATA\&.ini\fP for more information)\&.
.PP
.SS "Ordering"
.PP
The ordering of the hosts is stored in metakeys of type \fCorder\fP\&. The value is an ascending number\&. Ordering of aliases is \fInot\fP preserved\&.
.PP
.SS "Examples"
.PP
Mount the plugin: 
.PP
.nf
$ sudo kdb mount --with-recommends /etc/hosts system/hosts hosts

.fi
.PP
.PP
Print out all known hosts and their aliases: 
.PP
.nf
$ kdb ls system/hosts

.fi
.PP
.PP
Get IP address of ipv4 host 'localhost': 
.PP
.nf
$ kdb get system/hosts/ipv4/localhost

.fi
.PP
.PP
Check if a comment is belonging to host 'localhost': 
.PP
.nf
$ kdb lsmeta system/hosts/ipv4/localhost

.fi
.PP
.PP
Try to change the host 'localhost', should fail because it is not an IPv4 address: 
.PP
.nf
$ sudo kdb set system/hosts/ipv4/localhost ::1

.fi
.PP
.PP
``` 
.SH "Backup-and-Restore:/examples/hosts"
.PP
.PP
sudo kdb mount --with-recommends hosts /examples/hosts hosts
.PP
.SH "Create hosts file for testing"
.PP
.PP
echo '127\&.0\&.0\&.1 localhost' > \fCkdb file /examples/hosts\fP echo '::1 localhost' >> \fCkdb file /examples/hosts\fP
.PP
.SH "Check the file"
.PP
.PP
cat \fCkdb file /examples/hosts\fP #> 127\&.0\&.0\&.1 localhost #> ::1 localhost
.PP
.SH "Check if the values are read correctly"
.PP
.PP
kdb get /examples/hosts/ipv4/localhost #> 127\&.0\&.0\&.1 kdb get /examples/hosts/ipv6/localhost #> ::1
.PP
.SH "Should both fail with error 51 and return 5"
.PP
.PP
kdb set /examples/hosts/ipv4/localhost ::1 
.SH "RET:5"
.PP
.PP
.SH "ERROR:51"
.PP
.PP
kdb set /examples/hosts/ipv6/localhost 127\&.0\&.0\&.1 
.SH "RET:5"
.PP
.PP
.SH "ERROR:51"
.PP
.PP
.SH "cleanup"
.PP
.PP
kdb rm -r /examples/hosts sudo kdb umount /examples/hosts ``` 
