.TH "md_src_plugins_ccode_README" 3elektra "Sun Jul 10 2022" "Version 0.9.10" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_ccode_README \- Plugin: ccode 

.IP "\(bu" 2
infos = Information about ccode plugin is in keys below
.IP "\(bu" 2
infos/author = Markus Raab elektra@libelektra.org
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/provides = code
.IP "\(bu" 2
infos/needs =
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = postgetstorage presetstorage
.IP "\(bu" 2
infos/status = unittest nodep libc configurable discouraged
.IP "\(bu" 2
infos/description = Decoding/Encoding engine which escapes unwanted characters\&.
.PP
.SH "CCode"
.PP
.SS "Introduction"
The \fCccode\fP plugin replaces (escapes) any special characters with two characters:
.PP
.IP "\(bu" 2
an escape character (default: \fC\\\fP) and
.IP "\(bu" 2
another character representing the escaped character (e\&.g \fCn\fP for newline)
.PP
.PP
before writing a \fCKeySet\fP\&. The plugin undoes this modification after reading a \fCKeySet\fP\&.
.PP
CCode provides a reasonable default configuration, using the usual escape sequences for C strings (e\&.g\&. \fC\\n\fP for newline, \fC\\t\fP for tab)\&. You can also configure the escape character (\fC/escape\fP) and the mapping for special characters (\fCchars\fP)\&.
.SS "Installation"
See \fBinstallation\fP\&. The package is called \fClibelektra5-extra\fP\&.
.SS "Restrictions"
This method of encoding characters is not as powerful as the hexcode plugin in terms of reduction\&. The hexcode plugin allows reduction of the character set to '0'-'9', 'a'-'f' and one escape character\&. So it can represent any key value with only 17 characters\&. On the other hand, ccode cannot reduce the set more than by half\&.
.PP
So when all control characters and non-ASCII characters need to vanish, it cannot be done with the ccode plugin\&. But it is perfectly suitable to reduce by some characters\&. The advantages are that the size only doubles in the worst case and that it is much easier to read\&.
.SS "C"
In the C language, the following escape characters are present\&.
.PP
.IP "\(bu" 2
\fCb\fP: backspace, hex: 08
.IP "\(bu" 2
\fCt\fP: horizontal tab, hex: 09
.IP "\(bu" 2
\fCn\fP: new line feed, hex: 0A
.IP "\(bu" 2
\fCv\fP: vertical tab, hex: 0B
.IP "\(bu" 2
\fCf\fP: form feed, hex: 0C
.IP "\(bu" 2
\fCr\fP: carriage return, hex: 0D
.IP "\(bu" 2
\fC\\\\\fP: back slash, hex: 5C
.IP "\(bu" 2
`'\fC: single quote, hex: 27 -\fP"\fC: double quote, hex: 22 -\fP0`: null, hex: 00
.PP
.PP
This is also the default mapping\&.
.SS "Contract"
Add \fCccode\fP to \fCinfos/needs\fP for any plugin that you want to be filtered by ccode\&. 
