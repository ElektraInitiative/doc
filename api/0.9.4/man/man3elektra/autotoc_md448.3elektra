.TH "autotoc_md448" 3elektra "Mon Feb 1 2021" "Version 0.9.4" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
autotoc_md448Plugin: multifile 
 \- 
.IP "\(bu" 2
infos = Information about the multifile plugin is in keys below
.IP "\(bu" 2
infos/author = Thomas thomas.waser@libelektra.org
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/needs =
.IP "\(bu" 2
infos/provides = resolver storage
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = getresolver setresolver commit rollback getstorage setstorage
.IP "\(bu" 2
infos/status = compatible specific shelltest nodep configurable
.IP "\(bu" 2
infos/metadata =
.IP "\(bu" 2
infos/description = mounts multiple files within a directory
.PP
.PP
For some applications it is beneficially to have multiple configuration files\&. One way to achieve this, is to mount different files for the application\&.
.PP
In some situations we are not able to specify every configuration file with separate mounts because new configuration files might be created any time\&. Instead we want to include every configuration file matching a given pattern\&.
.PP
The multifile-resolver does so by calling resolver and storage plugins for each file matching a given pattern\&.
.PP
.IP "\(bu" 2
\fCrecursive\fP: If present, fts (3) will be used to traverse the directory tree and fnmatch to match \fCpattern\fP to the filename\&. If not present, glob (3) with \fCpattern\fP will be used on the directory
.IP "\(bu" 2
\fCpattern\fP: The pattern to be used to match configuration files\&.
.IP "\(bu" 2
\fCstorage\fP: The storage plugin to use\&.
.IP "\(bu" 2
\fCresolver\fP: The resolver plugin to use\&.
.IP "\(bu" 2
'child/<configname>': configuration passed to the child backends, \fCchild/\fP part gets removed\&.
.PP
.PP
\fCkdb mount -R multifile -c storage='toml',pattern='*/*\&.toml',resolver='resolver' /path /mountpoint\fP
.PP
\fCkdb mount -R multifile -c storage='toml',pattern='*\&.toml',recursive=,resolver='resolver' /path /mountpoint\fP
.PP
.PP
.nf
rm -rf $(dirname $(kdb file user:/))/multitest || $(exit 0)
mkdir -p $(dirname $(kdb file user:/))/multitest || $(exit 0)

cat > $(dirname $(kdb file user:/))/multitest/lo\&.toml << EOF \
[lo]\
addr = "127\&.0\&.0\&.1"\
encap = "Loopback"\
EOF

cat > $(dirname $(kdb file user:/))/multitest/lan\&.toml << EOF \
[eth0]\
addr = "192\&.168\&.1\&.216"\
encap = "Ethernet"\
EOF

cat > $(dirname $(kdb file user:/))/multitest/wlan\&.toml << EOF \
[wlan0]\
addr = "192\&.168\&.1\&.125"\
encap = "Ethernet"\
EOF

sudo kdb mount -R multifile -c storage="toml",pattern="*\&.toml",resolver="resolver" multitest user:/tests/multifile

kdb ls user:/tests/multifile
#> user:/tests/multifile/lan\&.toml/eth0
#> user:/tests/multifile/lan\&.toml/eth0/addr
#> user:/tests/multifile/lan\&.toml/eth0/encap
#> user:/tests/multifile/lo\&.toml/lo
#> user:/tests/multifile/lo\&.toml/lo/addr
#> user:/tests/multifile/lo\&.toml/lo/encap
#> user:/tests/multifile/wlan\&.toml/wlan0
#> user:/tests/multifile/wlan\&.toml/wlan0/addr
#> user:/tests/multifile/wlan\&.toml/wlan0/encap

kdb set user:/tests/multifile/lan\&.toml/eth0/addr 10\&.0\&.0\&.2

kdb get user:/tests/multifile/lan\&.toml/eth0/addr
#> 10\&.0\&.0\&.2

kdb get user:/tests/multifile/lan\&.toml/eth0/encap
#> Ethernet

cat > $(dirname $(kdb file user:/))/multitest/test\&.toml << EOF \
[testsection]\
key = "val"\
EOF

kdb ls user:/tests/multifile/test\&.toml
#> user:/tests/multifile/test\&.toml/testsection
#> user:/tests/multifile/test\&.toml/testsection/key

kdb ls user:/tests/multifile
#> user:/tests/multifile/lan\&.toml/eth0
#> user:/tests/multifile/lan\&.toml/eth0/addr
#> user:/tests/multifile/lan\&.toml/eth0/encap
#> user:/tests/multifile/lo\&.toml/lo
#> user:/tests/multifile/lo\&.toml/lo/addr
#> user:/tests/multifile/lo\&.toml/lo/encap
#> user:/tests/multifile/test\&.toml/testsection
#> user:/tests/multifile/test\&.toml/testsection/key
#> user:/tests/multifile/wlan\&.toml/wlan0
#> user:/tests/multifile/wlan\&.toml/wlan0/addr
#> user:/tests/multifile/wlan\&.toml/wlan0/encap

kdb rm -r user:/tests/multifile/test\&.toml

stat $(dirname $(kdb file user:/))/multifile/test\&.toml
# RET:1

sudo kdb umount user:/tests/multifile
rm -rf $(dirname $(kdb file user:/))/multitest || $(exit 0)
.fi
.PP
.PP
.IP "\(bu" 2
You cannot get rid of the configuration file name\&.
.IP "\(bu" 2
You cannot create or delete configuration files\&.
.IP "\(bu" 2
The resolving will always be done with the default resolver plugin, despite the configuration option\&.
.IP "\(bu" 2
Not all file names are supported (see https://issues.libelektra.org/2124)
.IP "\(bu" 2
Cannot handle conflicts (see https://issues.libelektra.org/2527) 
.PP

