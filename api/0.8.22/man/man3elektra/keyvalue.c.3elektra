.TH "keyvalue.c" 3elektra "Tue Feb 27 2018" "Version 0.8.22" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
keyvalue.c \- Methods for Key value manipulation\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'kdbprivate\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "const void * \fBkeyValue\fP (const Key *key)"
.br
.RI "Return a pointer to the real internal \fCkey\fP value\&. "
.ti -1c
.RI "const char * \fBkeyString\fP (const Key *key)"
.br
.RI "Get the c-string representing the value\&. "
.ti -1c
.RI "ssize_t \fBkeyGetValueSize\fP (const Key *key)"
.br
.RI "Returns the number of bytes needed to store the key value, including the NULL terminator\&. "
.ti -1c
.RI "ssize_t \fBkeyGetString\fP (const Key *key, char *returnedString, size_t maxSize)"
.br
.RI "Get the value of a key as a string\&. "
.ti -1c
.RI "ssize_t \fBkeySetString\fP (Key *key, const char *newStringValue)"
.br
.RI "Set the value for \fCkey\fP as \fCnewStringValue\fP\&. "
.ti -1c
.RI "ssize_t \fBkeyGetBinary\fP (const Key *key, void *returnedBinary, size_t maxSize)"
.br
.RI "Get the value of a key as a binary\&. "
.ti -1c
.RI "ssize_t \fBkeySetBinary\fP (Key *key, const void *newBinary, size_t dataSize)"
.br
.RI "Set the value of a key as a binary\&. "
.in -1c
.SH "Detailed Description"
.PP 
Methods for Key value manipulation\&. 


.PP
\fBCopyright:\fP
.RS 4
BSD License (see LICENSE\&.md or https://www.libelektra.org) 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
