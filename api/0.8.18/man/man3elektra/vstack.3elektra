.TH "Vstack" 3elektra "Sat Sep 17 2016" "Version 0.8.18" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Vstack \- 
.PP
The requirements are described in doc/help/elektra-data-structures\&.md\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "Vstack * \fBelektraVstackInit\fP (size_t minSize)"
.br
.RI "\fIAllocates vstack with size specified by parameter minSize and sets the stack pointer\&. \fP"
.ti -1c
.RI "int \fBelektraVstackPush\fP (Vstack *stack, void *data)"
.br
.RI "\fIPushes an element in the Vstack and resizes the stack if needed\&. \fP"
.ti -1c
.RI "void * \fBelektraVstackPop\fP (Vstack *stack)"
.br
.RI "\fIPops an element from the Vstack and resizes the stack if needed\&. \fP"
.ti -1c
.RI "int \fBelektraVstackIsEmpty\fP (const Vstack *stack)"
.br
.RI "\fIChecks if the stack is empty\&. \fP"
.ti -1c
.RI "void \fBelektraVstackDel\fP (Vstack *stack)"
.br
.RI "\fIDeletes the stack, by freeing all memory\&. \fP"
.ti -1c
.RI "int \fBelektraVstackClear\fP (Vstack *stack)"
.br
.RI "\fIClears the stack in a fast fashion\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The requirements are described in doc/help/elektra-data-structures\&.md\&. 

The Vstack structure\&.
.PP
A stack implementation with dynamical memory allocation\&. The space gets doubled if full and reduced by half if used only a quarter of it, but not less than minSize\&. 
.SH "Function Documentation"
.PP 
.SS "int elektraVstackClear (Vstack *stack)"

.PP
Clears the stack in a fast fashion\&. Resets the stackpointer to the base and does not reallocate memory\&. The next reallocation happens at Pop\&.
.PP
\fBReturn values:\fP
.RS 4
\fI1\fP on success 
.br
\fI0\fP on error 
.RE
.PP

.SS "Vstack* elektraVstackInit (size_tminSize)"

.PP
Allocates vstack with size specified by parameter minSize and sets the stack pointer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIminSize\fP the minimum size of the stack 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIa\fP Vstack pointer 
.br
\fINULL\fP error 
.RE
.PP

.SS "int elektraVstackIsEmpty (const Vstack *stack)"

.PP
Checks if the stack is empty\&. 
.PP
\fBReturn values:\fP
.RS 4
\fI1\fP on empty 
.br
\fI0\fP on non empty 
.br
\fI-1\fP on error 
.RE
.PP

.SS "void* elektraVstackPop (Vstack *stack)"

.PP
Pops an element from the Vstack and resizes the stack if needed\&. 
.PP
\fBReturn values:\fP
.RS 4
\fIthe\fP element 
.br
\fINULL\fP on empty 
.RE
.PP

.SS "int elektraVstackPush (Vstack *stack, void *data)"

.PP
Pushes an element in the Vstack and resizes the stack if needed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the element 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI0\fP on error 
.br
\fI1\fP otherwise 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
