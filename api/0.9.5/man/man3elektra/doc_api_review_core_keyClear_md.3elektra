.TH "doc_api_review_core_keyClear_md" 3elektra "Mon Apr 12 2021" "Version 0.9.5" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_api_review_core_keyClear_mdkeyClear 
 \- 
.IP "\(bu" 2
start = 2021-02-21 22:40
.IP "\(bu" 2
end = 2021-02-21 23:05
.IP "\(bu" 2
reviewer = Stefan Hanreich stefanhani@gmail.com
.PP
.PP
\fCint \fBkeyClear(Key *key)\fP\fP
.PP
(bullet points are in order of appearance)
.PP
.IP "\(bu" 2
[ ] First line explains briefly what the function does - remove first line, second line could be improved a bit (what is meant with internal data, exactly? is the name included?)
.IP "\(bu" 2
[x] Simple example or snippet how to use the function
.IP "\(bu" 2
[ ] Longer description of function containing common use cases - be more explicit which data is actually included
.IP "\(bu" 2
[ ] Description of functions reads nicely
.IP "  \(bu" 4
[ ] very short sentences
.PP

.IP "\(bu" 2
[ ] \fC@pre\fP
.IP "  \(bu" 4
[ ] 
.PP
\fBPrecondition:\fP
.RS 4
key is a valid key
.RE
.PP

.PP

.IP "\(bu" 2
[ ] \fC@post\fP
.IP "  \(bu" 4
[ ] 
.PP
\fBPostcondition:\fP
.RS 4
key contains not internal data
.RE
.PP

.PP

.IP "\(bu" 2
[ ] \fC@invariant\fP
.IP "  \(bu" 4
[ ] 
.PP
\fBInvariant:\fP
.RS 4
key stays a valid key
.RE
.PP

.PP

.IP "\(bu" 2
[x] \fC@param\fP for every parameter
.IP "\(bu" 2
[ ] \fC@return\fP / \fC@retval\fP
.IP "  \(bu" 4
[ ] mark default case with \fC@return\fP
.PP

.IP "\(bu" 2
[ ] \fC@since\fP
.IP "  \(bu" 4
[ ] add
.PP

.IP "\(bu" 2
[x] `\fC\fP
.IP "\(bu" 2
\fC[ ]\fP
.PP
\fBSee also:\fP
.RS 4
\fC
.IP "  \(bu" 4
[ ] maybe\fBkeyDel()\fP`
.PP
\fP
.RE
.PP

.PP
.PP
\fC
.IP "\(bu" 2
Abbreviations used in function names must be defined in the \fBGlossary\fP
.IP "\(bu" 2
[x] Function names should neither be too long, nor too short
.IP "\(bu" 2
[x] Function name should be clear and unambiguous
.IP "\(bu" 2
Abbreviations used in parameter names must be defined in the \fBGlossary\fP
.IP "\(bu" 2
[x] Parameter names should neither be too long, nor too short
.IP "\(bu" 2
[x] Parameter names should be clear and unambiguous
.PP
\fP
.PP
\fC\fP
.PP
\fC (only in PRs)\fP
.PP
\fC
.IP "\(bu" 2
\fBSymbol versioning\fP is correct for breaking changes
.IP "\(bu" 2
ABI/API changes are forward-compatible (breaking backwards-compatibility to add additional symbols is fine)
.PP
\fP
.PP
\fC\fP
.PP
\fC
.IP "\(bu" 2
Function parameters should use enum types instead of boolean types wherever sensible
.IP "\(bu" 2
[x] Wherever possible, function parameters should be \fCconst\fP
.IP "\(bu" 2
[x] Wherever possible, return types should be \fCconst\fP
.IP "\(bu" 2
[x] Functions should have the least amount of parameters feasible
.PP
\fP
.PP
\fC\fP
.PP
\fC
.IP "\(bu" 2
[x] Functions should do exactly one thing
.IP "\(bu" 2
[x] Function name has the appropriate prefix
.IP "\(bu" 2
[ ] Order of signatures in kdb\&.h\&.in is the same as Doxygen
.IP "  \(bu" 4
[ ] swap with \fC\fBkeyDel()\fP\fP
.PP

.IP "\(bu" 2
[ ] No functions with similar purpose exist
.IP "  \(bu" 4
[ ] new keyCopy can also clear a key, maybe make \fCkeyClear\fP an alias?
.PP

.PP
\fP
.PP
\fC\fP
.PP
\fC
.IP "\(bu" 2
[x] Memory Management should be handled by the function wherever possible
.PP
\fP
.PP
\fC\fP
.PP
\fC
.IP "\(bu" 2
[ ] Function is easily extensible, e\&.g\&., with flags
.IP "  \(bu" 4
[ ] could add flags for clearing parts of the key like \fC\fBkeyCopy()\fP\fP
.PP

.IP "\(bu" 2
[x] Documentation does not impose limits, that would hinder further extensions
.PP
\fP
.PP
\fC\fP
.PP
\fC
.IP "\(bu" 2
[x] Function code is fully covered by tests
.IP "\(bu" 2
[x] All possible error states are covered by tests
.IP "\(bu" 2
All possible enum values are covered by tests
.IP "\(bu" 2
[x] No inconsistencies between tests and documentation
.PP
\fP
.PP
\fC\fP
.PP
\fC \fP
.PP
\fC\fP
