.TH "doc_help_elektra-faq_md" 3elektra "Fri Aug 4 2023" "Version 0.11.0" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_help_elektra-faq_md \- Frequently Asked Questions 
 
.SH "I Am Stuck\&. Where Can I Get Help?"
.PP
\fCPlease open an issue\fP\&. You can simply remove all template text and it is enough if the issue only contains your question\&. If you are unsure, \fClabel it as question\fP\&.
.PP
Please do not waste too much time to find something out yourself\&. Information where people get stuck is valuable to improve Elektra and its documentation\&. Even if you find out directly after you posted the question: the pointer can be helpful for other people having the same problem\&.
.SH "Isn't it Easier to Implement a new Parser Than to use Elektra?"
.PP
No, it is not\&. And the story does not end with implementing a configuration file parser\&. You also need:
.PP
.IP "\(bu" 2
operating-system-specific code to locate configuration files
.IP "\(bu" 2
tools to change the configuration files
.IP "\(bu" 2
validation to make such changes user-friendly
.PP
.PP
Every successful project has implemented many features Elektra has\&. But Elektra has the distinctive advantage that you can pick the features as you need them\&. Not used plugins do not cause any overhead or dependency\&. If you need new plugins or bindings, there is a community which can help you\&. Furthermore, Elektra has a defined API and you can swap implementations as needed\&.
.PP
So it pays off to use Elektra -- in the short and in the long term\&.
.SH "Why Do I Need Elektra If I Already Use Configuration Management Tools?"
.PP
Short answer: Try
.PP
.IP "\(bu" 2
\fCansible-libelektra\fP
.IP "\(bu" 2
\fCchef-libelektra\fP
.IP "\(bu" 2
\fCpuppet-libelektra\fP
.PP
.PP
to see how useful it can be\&.
.PP
Longer answer:
.PP
Elektra abstracts \fBconfiguration settings\fP, something desperately needed within configuration management\&. Instead of rewriting complete configuration files, which might create security problems due to ignoring distributions configuration files; Elektra operates precisely on the configuration setting you want to change: leaving others as chosen by the application or distribution\&. Furthermore, Elektra also allows us to \fIspecify\fP configuration settings, which again brings benefits for configuration management tools\&.
.PP
Elektra is a radical step needed towards better configuration management: Let us fix how applications access configuration settings, so that we can properly access them, for example, from configuration management tools\&.
.PP
See \fBour vision\fP for an example\&.
.SH "If Elektra Already Exists so Long, why isn't it more Widespread?"
.PP
There are two main reasons:
.PP
.IP "1." 4
Research: First we needed to \fBexplore the design space\fP\&. At that time, Elektra provided little benefit, except for niche applications\&. Then it was challenging to actually implement the \fBvision\fP\&.
.IP "2." 4
Bootstrapping: Developers would like to have everything smooth and shiny, like packages available as are part of their distributions\&. But Elektra only gets packaged if there are already application using Elektra\&. We solved this problem in \fBmany intermediate steps\fP, e\&.g\&., allow \fBmounting\fP legacy configuration files\&.
.PP
.SH "Do We Retain the Old Way of Configuring Things, i\&.e\&. Manually Editing an INI File in /etc?"
.PP
Absolutely, you can think of libelektra as a small library in C that reads a configuration file and returns a data structure if you do not use any of its advanced features\&.
.PP
In fact, from the view of system-calls, a properly written configuration parser within your application would do exactly the same as Elektra does:
.PP
.PP
.nf
stat("/etc/kdb/elektra\&.ecf", {st_mode=S_IFREG|0644, st_size=1996, \&.\&.\&.}) = 0
open("/etc/kdb/elektra\&.ecf", O_RDONLY)  = 3
read(3, "\&.\&.\&., 8191) = 1996
close(3)                                = 0
.fi
.PP
.PP
Writing configuration files is much more tricky, as Elektra avoids data loss in the case of concurrent writes, even if the other application does not use Elektra\&. Elektra uses optimistic writes and rolls backs when it detects that configuration files were modified\&.
.SH "Do We Retain the Way of Reloading/Restarting the System Service?"
.PP
Elektra does not interfere with restarting\&. It is a passive library\&. It provides some techniques for reloading but they are optional\&. We recommend, however, that you keep the in-memory and persistent configuration always in sync via immediate writes on changes and immediate reloading after notifications\&.
.SH "Is This an Actual Problem of Elektra or Is It Just Me?"
.PP
In case of doubt \fCplease open an issue\fP\&. If the question was already answered or is already in the documentation, we will simply point it out to you\&.
.PP
So do not worry too much, do not hesitate to ask any question\&. We welcome feedback, only then we can improve the documentation such as this FAQ!
.SH "What Should I Do If I Found a Bug?"
.PP
Please check the \fCissue tracker\fP if it has already been reported\&. If it has not, please \fCfill out the template\fP\&. If you are in doubt, please report it\&.
.SH "How Can I Contribute to Elektra?"
.PP
Due to the modular architecture we can accept many contributions as plugins\&. Please only make sure that the README\&.md clearly states the purpose and quality of the plugin\&.
.PP
Please start by reading \fBhere\fP\&.
.SH "What Is Elektraâ€™s License?"
.PP
\fBNew BSD license\fP which allows us to have plugins link against GPL and GPL-incompatible libraries\&. If you compile Elektra, e\&.g\&., with GPL plugins, the result is GPL\&. We are \fCreuse\fP compliant\&.
.SH "Which version should I use?"
.PP
If you already use 0\&.8, you might want to continue using it until 1\&.0 is released\&. As announced \fBhere\fP, the 0\&.9 series introduces incompatible changes as needed, in particular cleanup for the 1\&.0 release is done\&.
.PP
For details of versioning principles, see \fBhere\fP\&.
.SH "Who Are the Authors?"
.PP
\fBList of authors\fP\&.
.SH "How Can I Advertise Elektra?"
.PP
.IP "\(bu" 2
If questions about configuration come up, point users to https://www.libelektra.org
.IP "\(bu" 2
Display the SVG logos found at https://master.libelektra.org/doc/images/logo
.IP "\(bu" 2
And already rastered logos at https://github.com/ElektraInitiative/blobs/tree/master/images/logos
.IP "\(bu" 2
Distribute the flyer found at https://github.com/ElektraInitiative/blobs/raw/master/flyers/flyer.odt
.IP "\(bu" 2
And of course: talk about it! 
.PP

