.TH "kdbplugin.h" 3elektra "Tue Oct 31 2017" "Version 0.8.20" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kdbplugin.h \- Methods for plugin programing\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <kdb\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <kdbmacros\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBELEKTRA_PLUGIN_FUNCTION\fP(module,  function)   libelektra_##module##_LTX_elektraPlugin##function"
.br
.RI "Declare a plugin's function name suitable for compilation variants (see doc/tutorials)\&. "
.ti -1c
.RI "#define \fBELEKTRA_README\fP(module)   ELEKTRA_README2 (module)"
.br
.RI "The filename for inclusion of the readme for compilation variants (see doc/tutorials)\&. "
.ti -1c
.RI "#define \fBELEKTRA_PLUGIN_STATUS_ERROR\fP   \-1"
.br
.RI "An error occurred inside the plugin function\&. "
.ti -1c
.RI "#define \fBELEKTRA_PLUGIN_STATUS_SUCCESS\fP   1"
.br
.RI "Everything went fine\&. "
.ti -1c
.RI "#define \fBELEKTRA_PLUGIN_STATUS_NO_UPDATE\fP   0"
.br
.RI "Everything went fine and the function \fBdid not\fP update the given keyset/configuration\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBplugin_t\fP { \fBELEKTRA_PLUGIN_OPEN\fP =1, \fBELEKTRA_PLUGIN_CLOSE\fP =1<<1, \fBELEKTRA_PLUGIN_GET\fP =1<<2, \fBELEKTRA_PLUGIN_SET\fP =1<<3, \fBELEKTRA_PLUGIN_ERROR\fP =1<<4, \fBELEKTRA_PLUGIN_END\fP =0 }
.RI "Switches to denote the backend methods\&. ""
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "Plugin * \fBelektraPluginExport\fP (const char *pluginName,\&.\&.\&.)"
.br
.RI "Allows one to Export Methods for a Plugin\&. "
.ti -1c
.RI "KeySet * \fBelektraPluginGetConfig\fP (Plugin *handle)"
.br
.RI "Returns the configuration of that plugin\&. "
.ti -1c
.RI "void \fBelektraPluginSetData\fP (Plugin *plugin, void *handle)"
.br
.RI "Store a pointer to any plugin related data\&. "
.ti -1c
.RI "void * \fBelektraPluginGetData\fP (Plugin *plugin)"
.br
.RI "Get a pointer to any plugin related data stored before\&. "
.in -1c
.SH "Detailed Description"
.PP 
Methods for plugin programing\&. 


.PP
\fBCopyright:\fP
.RS 4
BSD License (see LICENSE\&.md or https://www.libelektra.org) 
.RE
.PP

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBplugin_t\fP"

.PP
Switches to denote the backend methods\&. Used in calls to \fBelektraPluginExport()\fP\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIELEKTRA_PLUGIN_OPEN \fP\fP
Next arg is backend for \fBkdbOpen()\fP 
.TP
\fB\fIELEKTRA_PLUGIN_CLOSE \fP\fP
Next arg is backend for \fBkdbClose()\fP 
.TP
\fB\fIELEKTRA_PLUGIN_GET \fP\fP
Next arg is backend for \fBkdbGet()\fP 
.TP
\fB\fIELEKTRA_PLUGIN_SET \fP\fP
Next arg is backend for \fBkdbSet()\fP 
.TP
\fB\fIELEKTRA_PLUGIN_ERROR \fP\fP
Next arg is backend for kdbError() 
.TP
\fB\fIELEKTRA_PLUGIN_END \fP\fP
End of arguments 
.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
