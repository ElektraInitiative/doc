.TH "backendparser.hpp" 3elektra "Tue May 26 2020" "Version 0.9.2" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
backendparser.hpp \- Implements ways to parse backends\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <algorithm>\fP
.br
\fC#include <initializer_list>\fP
.br
\fC#include <memory>\fP
.br
\fC#include <sstream>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <pluginspec\&.hpp>\fP
.br
\fC#include <kdb\&.hpp>\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBkdb\fP"
.br
.RI "This is the main namespace for the C++ binding and libraries\&. "
.ti -1c
.RI " \fBkdb::tools\fP"
.br
.RI "This namespace is for the libtool library\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBkdb::KeySet\fP \fBkdb::tools::parsePluginArguments\fP (std::string const &pluginArguments, std::string const &basepath)"
.br
.RI "Parse a string containing information to create a \fBKeySet\fP\&. "
.ti -1c
.RI "PluginSpecVector \fBkdb::tools::parseArguments\fP (std::string const &cmdline)"
.br
.RI "Parse a complete commandline\&. "
.ti -1c
.RI "void \fBkdb::tools::detail::processArgument\fP (PluginSpecVector &arguments, size_t &counter, std::string argument)"
.br
.RI "Process a single argument and add it to PluginSpecVector\&. "
.ti -1c
.RI "void \fBkdb::tools::detail::fixArguments\fP (PluginSpecVector &arguments)"
.br
.RI "Fix refnames after parsing\&. "
.ti -1c
.RI "template<typename Iterator > PluginSpecVector \fBkdb::tools::parseArguments\fP (Iterator first, Iterator last)"
.br
.RI "Parse a complete commandline that is already tokenized in pluginname pluginconfig\&. "
.in -1c
.SH "Detailed Description"
.PP 
Implements ways to parse backends\&. 


.PP
\fBCopyright\fP
.RS 4
BSD License (see LICENSE\&.md or https://www.libelektra.org) 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
