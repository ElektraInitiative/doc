.TH "kdb" 3 "Sat Dec 21 2013" "Version 0.8.4" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kdb \- 
.PP
See examples/cpp_example_userexception\&.cpp for how to use USER_DEFINED_EXEPTIONS\&.  

.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "class \fBKDB\fP"
.br
.RI "\fIOpens the session with the \fBKey\fP database\&.   \fP"
.ti -1c
.RI "class \fBKey\fP"
.br
.RI "\fIA Key is the essential class that encapsulates key \fBname \fP, \fBvalue \fP and \fBmetainfo \fP\&.  \fP"
.ti -1c
.RI "class \fBKeySet\fP"
.br
.RI "\fIA keyset holds together a set of keys\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, \fBkdb::Key\fP const &k)"
.br
.RI "\fIStream a the name of a key\&. \fP"
.ti -1c
.RI "std::istream & \fBoperator>>\fP (std::istream &is, \fBkdb::Key\fP &k)"
.br
.RI "\fIReads a line with a keys name\&. \fP"
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, \fBkdb::KeySet\fP const &cks)"
.br
.RI "\fIOutputs line per line the keynames\&. \fP"
.ti -1c
.RI "std::istream & \fBoperator>>\fP (std::istream &is, \fBkdb::KeySet\fP &ks)"
.br
.RI "\fIReads line per line key names and appends those keys to ks\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
See examples/cpp_example_userexception\&.cpp for how to use USER_DEFINED_EXEPTIONS\&. 

See examples/cpp_example_userio\&.cpp for how to use USER_DEFINED_IO\&. 
.SH "Function Documentation"
.PP 
.SS "std::ostream& kdb::operator<< (std::ostream &os, \fBkdb::Key\fP const &k)\fC [inline]\fP"

.PP
Stream a the name of a key\&. If you also want to stream the value, use the plugin framework\&.
.PP
\fBParameters:\fP
.RS 4
\fIos\fP the stream to write to 
.br
\fIk\fP the key which name should be streamed
.RE
.PP
\fBReturns:\fP
.RS 4
the stream 
.RE
.PP

.SS "std::ostream& kdb::operator<< (std::ostream &os, \fBkdb::KeySet\fP const &cks)\fC [inline]\fP"

.PP
Outputs line per line the keynames\&. To output values you should use the plugin framework\&.
.PP
\fBParameters:\fP
.RS 4
\fIos\fP the stream to write to 
.br
\fIcks\fP the keyset which should be streamed
.RE
.PP
\fBReturns:\fP
.RS 4
the stream 
.RE
.PP

.SS "std::istream& kdb::operator>> (std::istream &is, \fBkdb::Key\fP &k)\fC [inline]\fP"

.PP
Reads a line with a keys name\&. \fBParameters:\fP
.RS 4
\fIis\fP the stream to read from 
.br
\fIk\fP the key whose name will be set
.RE
.PP
\fBReturns:\fP
.RS 4
the stream 
.RE
.PP

.SS "std::istream& kdb::operator>> (std::istream &is, \fBkdb::KeySet\fP &ks)\fC [inline]\fP"

.PP
Reads line per line key names and appends those keys to ks\&. To input values you need to use the plugin framework\&.
.PP
\fBParameters:\fP
.RS 4
\fIis\fP the stream to read from 
.br
\fIks\fP the keyset to append to
.RE
.PP
\fBReturns:\fP
.RS 4
the stream 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
