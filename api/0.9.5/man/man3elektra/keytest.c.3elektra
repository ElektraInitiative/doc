.TH "keytest.c" 3elektra "Mon Apr 12 2021" "Version 0.9.5" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
keytest.c \- Methods for making tests\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'kdb\&.h'\fP
.br
\fC#include 'kdbinternal\&.h'\fP
.br
\fC#include 'kdbprivate\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBkeyNeedSync\fP (const Key *key)"
.br
.RI "Test if a key needs to be synced to backend storage\&. "
.ti -1c
.RI "int \fBkeyIsBelow\fP (const Key *key, const Key *check)"
.br
.RI "Check if the key check is below the key key or not\&. "
.ti -1c
.RI "int \fBkeyIsBelowOrSame\fP (const Key *key, const Key *check)"
.br
.RI "Check if a key is below or same\&. "
.ti -1c
.RI "int \fBkeyIsDirectlyBelow\fP (const Key *key, const Key *check)"
.br
.RI "Check whether the key \fCcheck\fP is directly below the key \fCkey\fP\&. "
.ti -1c
.RI "int \fBkeyIsBinary\fP (const Key *key)"
.br
.RI "Check if a key is binary type\&. "
.ti -1c
.RI "int \fBkeyIsString\fP (const Key *key)"
.br
.RI "Check if a key is string type\&. "
.ti -1c
.RI "int \fBkeyCompareMeta\fP (const Key *k1, const Key *k2)"
.br
.RI "Compares metadata of two keys\&. "
.in -1c
.SH "Detailed Description"
.PP 
Methods for making tests\&. 


.PP
\fBCopyright:\fP
.RS 4
BSD License (see LICENSE\&.md or https://www.libelektra.org) 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int keyCompareMeta (const Key * k1, const Key * k2)"

.PP
Compares metadata of two keys\&. 
.PP
\fBReturn values:\fP
.RS 4
\fIKEY_META\fP if there is a difference 
.br
\fI0\fP if metadata is identical 
.RE
.PP

.SS "int keyIsBelowOrSame (const Key * key, const Key * check)"

.PP
Check if a key is below or same\&. 
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP the key object to work with 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBkeyIsBelow()\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
