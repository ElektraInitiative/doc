.TH "autotoc_md402" 3elektra "Tue Nov 26 2019" "Version 0.9.1" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
autotoc_md402 \- Plugin: mini 

.IP "\(bu" 2
infos = Information about the mini plugin is in keys below
.IP "\(bu" 2
infos/author = René Schwaiger sanssecours@me.com
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/needs = ccode
.IP "\(bu" 2
infos/provides = storage/ini
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = getstorage setstorage
.IP "\(bu" 2
infos/status = maintained shelltest unittest nodep limited
.IP "\(bu" 2
infos/metadata =
.IP "\(bu" 2
infos/description = A minimal plugin for simple INI files
.PP
.SH "mINI"
.PP
The “maybe this is not INI” plugin (\fCmini\fP) is a very simple storage plugin loosely based on the \fCINI\fP file format\&. Since this plugin \fBdoes not support sections\fP it might be more appropriate to say that it is based on the \fC\&.properties\fP format, used in many Java applications\&.
.SS "Examples"
.SS "Basic Usage"
The following example shows basic usage of the \fCmini\fP plugin\&.
.PP
``\fC @section autotoc_md405 Mount mini plugin to\fPuser/tests/mini` sudo kdb mount mini\&.ini user/tests/mini mini
.SH "Add two key value pairs to the database"
.PP
kdb set user/tests/mini/key value #> Create a new key user/tests/mini/key with string 'value' kdb set user/tests/mini/mi/mi/mr beaker #> Create a new key user/tests/mini/mi/mi/mr with string 'beaker'
.SH "Export our current configuration"
.PP
kdb export user/tests/mini mini #> key=value #> mi/mi/mr=beaker
.SH "Manually add some values"
.PP
echo '🔑 = 🦄' >> \fCkdb file user/tests/mini\fP echo 'level1/level2 = 👾' >> \fCkdb file user/tests/mini\fP
.SH "Now <tt>user/tests/mini</tt> contains four key value pairs"
.PP
kdb ls user/tests/mini #> user/tests/mini/key #> user/tests/mini/level1/level2 #> user/tests/mini/mi/mi/mr #> user/tests/mini/🔑
.SH "Let us check if <tt>user/tests/mini/🔑</tt> contains the correct value"
.PP
kdb get 'user/tests/mini/🔑' #> 🦄
.SH "Undo modifications to the key database"
.PP
kdb rm -r user/tests/mini sudo kdb umount user/tests/mini 
.PP
.nf
### Escaping

As with most configuration file formats, some characters carry special meaning\&. In the case of the `mini` plugin that character are

1\&. the `=` sign, which separates keys from values and
2\&. `#` and `;`, the characters that denote a comment\&.

In case of **key values** you do not need to care about the special meaning of these characters most of the time, since the plugin handles escaping and unescaping of them for you\&. Since mINI use the backslash character (`\`) to escape values, the backspace character will be escaped too (`\\`)\&. The following example shows the escaping behavior\&.

.fi
.PP
 sudo kdb mount mini\&.ini user/tests/mini mini
.SH "Store a value containing special characters"
.PP
kdb set user/tests/mini/key ';#=\\' #> Create a new key user/tests/mini/key with string ';#=\\'
.SH "The actual file contains escaped version of the characters"
.PP
kdb file user/tests/mini | xargs cat #> key=\\;#=\\
.SH "However, if you retrieve the value you do not have to care"
.PP
.SH "about the escaped characters"
.PP
kdb get user/tests/mini/key #> ;#=\\
.SH "If we do not escape the <tt>;</tt> and <tt>#</tt> characters, then they"
.PP
.SH "donate a comment\&."
.PP
echo 'background = #0F0F0F ; Background color' >> \fCkdb file user/tests/mini\fP echo 'foreground = #FFFFFF # Foreground color' >> \fCkdb file user/tests/mini\fP kdb get user/tests/mini/background #> #0F0F0F kdb get user/tests/mini/foreground #> #FFFFFF
.SH "Undo modifications to the key database"
.PP
kdb rm -r user/tests/mini sudo kdb umount user/tests/mini 
.PP
.nf
In the case of **key names** you **must not use any of the characters mentioned above** (`;`, `#` and `=`) at all\&. Otherwise the behavior of the plugin will be **undefined**\&.

## Limitations

This plugin only supports simple key-value based properties files without sections\&. mINI also does not support metadata\&. If you want a more feature complete plugin, then please take a look at the [ini plugin](@ref src_plugins_ini_README_md)\&. The example below shows some of the limitations of the plugin\&.

.fi
.PP
 sudo kdb mount mini\&.ini user/tests/mini mini
.SH "The plugin does not support sections or multi-line values"
.PP
echo '[section]' >> \fCkdb file user/tests/mini\fP printf 'key='multi\\nline'' >> \fCkdb file user/tests/mini\fP
.SH "mINI only reads the first line of the value with the name <tt>key</tt>, since"
.PP
.SH "the plugin assigns no special meaning to double or single quotes\&."
.PP
kdb ls user/tests/mini 2> stderr\&.txt #> user/tests/mini/key
.SH "As we can see in the first two line of the standard error output below,"
.PP
.SH "mINI will inform us about lines it was unable to parse\&."
.PP
cat stderr\&.txt | grep -oE 'Line [[:digit:]]+\&.*' | sed 's/^[[:space:]]*//' #> Line 1: '[section]' is not a valid key value pair #> Line 3: 'line"' is not a valid key value pair
.SH "Unlike the <tt>ini</tt> and <tt>ni</tt> plugin, mINI does not support metadata\&."
.PP
kdb meta-ls user/tests/mini 
.SH "RET: 1"
.PP
.SH "The value of <tt>key</tt> also contains the double quote symbol, since mINI does"
.PP
.SH "not assign special meaning to quote characters\&."
.PP
kdb get user/tests/mini/key #> "multi
.SH "Undo modifications"
.PP
rm stderr\&.txt kdb rm -r user/tests/mini sudo kdb umount user/tests/mini ``` 
