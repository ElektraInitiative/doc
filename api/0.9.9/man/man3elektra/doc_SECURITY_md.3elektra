.TH "doc_SECURITY_md" 3elektra "Thu Mar 10 2022" "Version 0.9.9" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_SECURITY_md \- Security 
 Security is a very important point in libraries\&. In most use cases there is nearly no point of danger in using Elektra\&. But some a very security related, especially when you use a daemon or some kind of distributed configuration\&.
.SH "Access Permissions"
.PP
We only use access permissions from the kernel, we do not add an additional layer (or daemon)\&. So configuration file access is as secure as with direct access to configuration files\&.
.SH "Namespaces"
.PP
Elektra by default guarantees that configuration from specific namespaces come from respective paths in the file system:
.PP
.IP "\(bu" 2
\fCdir\fP-namespace: from current working directory
.IP "\(bu" 2
\fCuser\fP-namespace: from users home directory
.IP "\(bu" 2
\fCsystem\fP or \fCspec\fP-namespace: no restrictions
.PP
.SH "Environment Variables"
.PP
Environment variables are usually avoided, but instead Elektra itself is used to configure Elektra\&. The core is not allowed to use any environment variables\&.
.PP
For some plugins, however, Environment variables are used for better integration in systems\&. This might be a security risk\&.
.SH "Compiler Options"
.PP
Can be changed using standard CMake ways\&. Some hints:
.PP
http://wiki.debian.org/Hardening
.SH "Memory Leaks"
.PP
We use Valgrind (\fC--tool=memcheck\fP) and ASAN (clang+gcc) to make sure that Elektra does not suffer memory leaks and incorrect memory handling\&. 
