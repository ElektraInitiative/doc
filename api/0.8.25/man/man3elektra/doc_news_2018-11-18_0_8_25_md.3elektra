.TH "doc_news_2018-11-18_0_8_25_md" 3elektra "Sun Nov 18 2018" "Version 0.8.25" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_news_2018-11-18_0_8_25_md0\&.8\&.25 Release 
 \- This release did not happen yet but hopefully will happen today\&.
.PP
.IP "\(bu" 2
guid: 472392e0-cc4f-4826-a0a9-2764d90c5f89
.IP "\(bu" 2
author: Markus Raab
.IP "\(bu" 2
pubDate: Sun, 18 Nov 2018 14:30:34 +0100
.IP "\(bu" 2
shortDesc: mmapstorage, faster lookup
.PP
.PP
We are proud to release Elektra 0\&.8\&.25\&.
.PP
.SS "What is Elektra?"
.PP
Elektra serves as a universal and secure framework to access configuration settings in a global, hierarchical key database\&. For more information, visit \fChttps://libelektra\&.org\fP\&.
.PP
For a small demo see here:
.PP
\fC\fP.PP
You can also read the news \fCon our website\fP
.PP
.SS "Highlight"
.PP
This release is dedicated to drastically improve the speed of Elektra\&. Two non-trivial features facilitate most of the improvement:
.PP
.IP "\(bu" 2
mmap storage for very fast retrieval of configuration
.IP "\(bu" 2
Hybrid Search Algorithm for \fCksLookup (\&.\&.\&.)\fP for very fast access of configuration
.PP
.PP
.SS "mmap storage"
.PP
We added a new, binary and fast storage plugin called \fC\fCmmapstorage\fP\fP\&. It leverages the \fCmmap()\fP syscall and supports full Elektra semantics\&. We provide two compile variants: \fCmmapstorage\fP and \fCmmapstorage_crc\fP\&. The \fCmmapstorage_crc\fP variant enables CRC32 checksums for critical data, while the \fCmmapstorage\fP variant omits the checksum for maximum performance\&.
.PP
We ran a synthetic benchmark with 257 iterations using 40k keys in a keyset, and compared the performance to the \fCdump\fP storage plugin\&.
.PP
Median write time in microseconds:
.PP
Plugin Time  \fCdump\fP 71079 \fCmmapstorage\fP 2964 \fCmmapstorage_crc\fP 7644 Median read time in microseconds:
.PP
Plugin Time  \fCdump\fP 82737 \fCmmapstorage\fP 1145 \fCmmapstorage_crc\fP 5744 In our benchmark, the \fCmmapstorage\fP plugin writes more than 23x faster, and reads more than 72x faster than the \fCdump\fP storage plugin\&.
.PP
For this release the plugin is marked as experimental, even though it is already used as default storage plugin in a build job on our \fCbuild server\fP\&.
.PP
Thanks to Mihael Pranjić for this improvement\&.
.PP
.SS "Hybrid Search Algorithm for \fCksLookup (\&.\&.\&.)\fP"
.PP
The hybrid search algorithm is now implemented, this concludes the extension of the \fCksLookup (\&.\&.\&.)\fP search with the \fCorder preserving minimal perfect hash map (OPMPHM)\fP\&. The hybrid search combines the best properties of the binary search and the \fCOPMPHM\fP\&. The hybrid search decides dynamically which search algorithm to use\&.
.PP
Because of the automatic decision, usually nothing needs to be done by API users to take advantage of this improvement\&. Advanced API user, however, can overrule the hybrid search by passing \fCKDB_O_OPMPHM\fP or \fCKDB_O_BINSEARCH\fP to \fCksLookup (\&.\&.\&.)\fP\&. The constants are defined in \fCkdbproposal\&.h\fP\&. For low-memory systems the building of the hash map can be disabled altogether at build-time by disabling the CMake variable \fCENABLE_OPTIMIZATIONS\fP (by default enabled now)\&.
.PP
The implemented randomized \fCOPMPHM\fP algorithm is in 99\&.5% of the measured random cases optimal\&. However the randomization property of the algorithm leaves an uncertainty\&.
.PP
The results made with random cases had shown that the hybrid search is, except for small keyset sizes, almost always faster compared to the standalone binary search\&. The performance increase strongly depended on the measured hardware\&. In the random cases where the hybrid search is faster, on average ~8\&.53% to ~20\&.92% of time was saved\&. The implemented hybrid search works only above a keyset size of \fC599\fP to exclude the small keyset sizes\&.
.PP
Thanks to Kurt Micheli for this improvement\&.
.PP
.SS "Plugins"
.PP
The following section lists news about the \fCplugins\fP we updated in this release\&.
.PP
.SS "Directory Value"
.PP
We improved the performance of the \fCdirectoryvalue plugin\fP\&. *(René Schwaiger)* This plugin is used for configuration file formats that do not support that directories contain values, like it is the case in JSON\&. A program manipulating a 13 MB JSON file which first did not succeed within 10 hours is now finished in 44 seconds\&.
.PP
.SS "Process"
.PP
There is a new, experimental plugin called \fCprocess\fP\&. This plugin utilizes the pluginprocess library in order to execute arbitrary other plugins in an own process, acting as a proxy itself\&. Therefore it is not required to explicitly change a plugin's implementation if it shall be executed in an own process\&. This plugin is not completely finished yet, as currently there is no way for it to mimic the proxied plugin's contract in Elektra\&. It can be used with simple plugins like \fCdump\fP however, check the limitations in the readme for more details\&. *(Armin Wurzinger)*
.PP
.SS "FSTab"
.PP
The detection of the \fCmntent\fP functions now also works correctly, if you use the compiler switch \fC-Werror\fP\&. *(René Schwaiger)*
.PP
.SS "passwd"
.PP
We fixed an issue with the passwd plugin not properly setting compile flags\&. This resolves a problem with undefined functions when building with musl\&. *(Lukas Winkler)*
.PP
.SS "gpgme"
.PP
The experimental \fCgpgme plugin\fP was brought into existence to provide cryptographic functions using GnuGP via the \fClibgpgme\fP library\&. *(Peter Nirschl)*
.PP
.SS "network"
.PP
The \fCnetwork\fP plugin now also allows for non-numerical hosts (i\&.e\&. 'localhost') to be set and tries to resolve it via DNS\&. *(Michael Zronek)*
.PP
.SS "YAMBi"
.PP
This new plugin parses a subset of YAML using a parser generated by \fCBison\fP\&. *(René Schwaiger)*
.PP
.SS "YAML CPP"
.PP
The build system now disables the plugin automatically, if you use a GCC compiler (\fC6\&.x\fP or earlier) and enable the option \fCENABLE_ASAN\fP\&. We updated the behavior, since otherwise the plugin will report memory leaks at runtime\&. *(René Schwaiger)*
.PP
.SS "Yan LR"
.PP
A new plugin parsing YAML files using Yan LR\&.
.PP
.IP "\(bu" 2
The plugin does not modify the (original) parent key\&. As a consequence, setting values at the root of a mountpoint:
.PP
.PP
.PP
.nf
sudo kdb mount config\&.yaml user/tests/yambi yambi
kdb set user/tests/yanlr 'Mount Point Value'
kdb get user/tests/yanlr
#> Mount Point Value
.fi
.PP
.PP
now works correctly\&. *(René Schwaiger)*
.IP "\(bu" 2
We now use C++ code to test the plugin\&. *(René Schwaiger)*
.IP "\(bu" 2
The CMake code of the plugin now also recognizes \fCantlr\fP as ANTLR executable, if \fCantlr4\fP is not available\&. *(René Schwaiger)*
.IP "\(bu" 2
The build system now disables the unit test for the plugin, if you use GCC (\fC6\&.x\fP or earlier) to translate Elektra\&. We introduced this behavior, since the code generated by ANTLR (\fCYAML\&.h\fP) seems to contain a double free that causes a segmentation fault on systems that use the GNU C library\&. *(René Schwaiger)*
.IP "\(bu" 2
The build system now disables the plugin automatically, if you use a GCC compiler (\fC6\&.x\fP or earlier) and enable the option \fCENABLE_ASAN\fP\&. *(René Schwaiger)*
.PP
.PP
.SS "YAwn"
.PP
This new plugin parses a subset of YAML using the Earley Parser library \fCYAEP\fP\&. *(René Schwaiger)*
.PP
.SS "Reference"
.PP
This new plugin can be used to validate that the value of a key is a reference to another key\&. *(Klemens Böswirth)*
.PP
.SS "Libraries"
.PP
The text below summarizes updates to the \fCC (and C++)-based libraries\fP of Elektra\&.
.PP
.SS "Compatibility"
.PP
As always, the ABI and API of kdb\&.h is fully compatible, i\&.e\&. programs compiled against an older 0\&.8 version of Elektra will continue to work (ABI) and you will be able to recompile programs without errors (API)\&.
.PP
This is the last release for which we have built Jessie packages: 
.PP
.nf
    deb     [trusted=yes] https://debian-stable.libelektra.org/elektra-stable/ jessie main
    deb-src [trusted=yes] https://debian-stable.libelektra.org/elektra-stable/ jessie main

.fi
.PP
.PP
Obviously, we will continue to update the stretch package: 
.PP
.nf
    deb     [trusted=yes] https://debian-stretch-repo.libelektra.org/ stretch main
    deb-src [trusted=yes] https://debian-stretch-repo.libelektra.org/ stretch main

.fi
.PP
.PP
.SS "Package Maintainer"
.PP
Following plugins got added:
.PP
.IP "\(bu" 2
libelektra-gpgme\&.so
.IP "\(bu" 2
libelektra-mmapstorage_crc\&.so
.IP "\(bu" 2
libelektra-mmapstorage\&.so
.IP "\(bu" 2
libelektra-process\&.so
.IP "\(bu" 2
libelektra-reference\&.so
.IP "\(bu" 2
libelektra-yambi\&.so
.PP
.PP
A new library got added (should be packaged privately for now):
.PP
.IP "\(bu" 2
libelektra-globbing\&.so
.PP
.PP
.SS "Core"
.PP
Optimize elektraKsFilter to not duplicate keys *(Markus Raab)*
.PP
.SS "Globbing"
.PP
A new library which can be used to match keys against globbing patterns was introduced\&. *(Klemens Böswirth)*
.PP
The API is still experimental, so it should not be used externally for now\&.
.PP
.SS "Ease"
.PP
\fClibease\fP provides the function \fCelektraArrayValidateBaseNameString\fP, which can be used to validate that a given string is an Elektra array name\&. *(Klemens Böswirth)*
.PP
.SS "Bindings"
.PP
Bindings allow you to utilize Elektra using \fCvarious programming languages\fP\&. This section keeps you up to date with the multi-language support provided by Elektra\&.
.PP
.SS "Ruby"
.PP
Do not use private Elektra headers for Ruby bindings as preparation for a Ruby \fClibelektra\fP gem\&. *(Bernhard Denner)*
.PP
.SS "Tools"
.PP
.IP "\(bu" 2
Added benchmarks for storage plugins\&. The currently benchmarked plugins are \fCdump\fP and \fCmmapstorage\fP\&. *(Mihael Pranjić)*
.IP "\(bu" 2
Avoid raw pointers in KDB tools\&. *(Markus Raab)*
.IP "\(bu" 2
Improved error text of KDB tool \fCcp\fP\&. *(Markus Raab)*
.IP "\(bu" 2
Document hidden feature of KDB tool \fCmount\fP\&. *(Markus Raab)*
.IP "\(bu" 2
Add more tags to the KDB tools to be used with \fCkdb find-tools\fP\&. *(Markus Raab)*
.PP
.PP
.SS "Scripts"
.PP
.IP "\(bu" 2
We now require \fC\fCclang-format\fP\fP 6\&.0 for formatting C and C++ code\&. *(René Schwaiger)*
.IP "\(bu" 2
The command \fC\fCreformat-source\fP\fP now displays information about the installed version of \fCclang-format\fP, if it is unable to locate a supported version of the tool\&. *(René Schwaiger)*
.IP "\(bu" 2
We now also check the POSIX compatibility of our scripts with \fC\fCshfmt\fP\fP\&. *(René Schwaiger)*
.IP "\(bu" 2
The new command [\fCreformat-shfmt\fP][https://master.libelektra.org/scripts/reformat-shfmt] reformats Shell scripts using the tool \fC\fCshfmt\fP\fP\&. *(René Schwaiger)*
.PP
.PP
.SS "Documentation"
.PP
.IP "\(bu" 2
We fixed some minor spelling mistakes in the documentation\&. *(René Schwaiger)*
.IP "\(bu" 2
Improved the plugins documentation\&. *(Michael Zronek)*
.IP "\(bu" 2
The ReadMe now includes two badges that show the latest released version of Elektra and the status of the Travis build\&. *(René Schwaiger)*
.IP "\(bu" 2
Fixed documenation error on Ruby plugin Readme\&. *(Bernhard Denner)*
.IP "\(bu" 2
Go into more detail in \fBhttps:\fP//master\&.libelektra\&.org/doc/BUILDSERVER\&.md 'BUILDSERVER\&.md'\&. *(Lukas Winkler)*
.PP
.PP
.SS "Tests"
.PP
.IP "\(bu" 2
Fix potential parallel execution of maven tests, which write to KDB\&. *(Markus Raab)*
.IP "\(bu" 2
The unit test for the \fC\fCdbus\fP plugin\fP does not leak memory anymore, if it fails on macOS\&. *(Thomas Wahringer)*
.IP "\(bu" 2
The tests \fCtestkdb_allplugins\fP and \fCtestscr_check_kdb_internal_check\fP do not test a plugin on an ASAN enabled build anymore, if you specify the status tag \fCmemleak\fP in the plugin contract\&. *(René Schwaiger)*
.IP "\(bu" 2
The \fBhttps:\fP//master\&.libelektra\&.org/doc/TESTING\&.md 'CFramework' macro \fCcompare_key\fP now also checks if the meta values of keys are equal\&. *(René Schwaiger)*
.IP "\(bu" 2
The test \fCtestscr_check_bashisms\fP does not print warnings about skipped files anymore\&. *(René Schwaiger)*
.IP "\(bu" 2
We added a \fCMarkdown Shell Recorder\fP test for the \fC\fCshell\fP plugin\fP\&. *(René Schwaiger)*
.IP "\(bu" 2
Added many storage plugin tests\&. Most tests use the keyset, key name and value APIs\&. Currently, the tests are only active for \fCdump\fP and \fCmmapstorage\fP\&. *(Mihael Pranjić)*
.IP "\(bu" 2
The test \fCtestcpp_contextual_basic\fP now compiles without warnings, if we use Clang 7 as compiler\&. *(René Schwaiger)*
.IP "\(bu" 2
crypto, fcrypt and gpgme properly shut down the gpg-agent after the unit test is done\&. See #1973 \&. *(Peter Nirschl)*
.IP "\(bu" 2
minor refactoring of the unit tests for crypto, fcrypt, gpgme: moved shared code to separate module in order to avoid code duplication\&. *(Peter Nirschl)*
.IP "\(bu" 2
The CMake targets for plugin tests (\fCtestmod_[plugin]\fP) now depend on the respective CMake targets for the plugins themselves (\fCelektra-[plugin]\fP)\&. *(Klemens Böswirth)*
.IP "\(bu" 2
Fixed bug in CMake plugin tests, if only \fCBUILD_FULL\fP but not \fCBUILD_SHARED\fP is used\&. *(Klemens Böswirth)*
.IP "\(bu" 2
The test \fC\fCtestscr_check_formatting\fP\fP now also checks the formatting of Shell code\&. *(René Schwaiger)*
.IP "\(bu" 2
We pumped version numbers in XML-test files\&. *(Markus Raab)*
.IP "\(bu" 2
We fixed a crash in the unit test of the \fCJNA\fP binding\&. *(René Schwaiger)*
.IP "\(bu" 2
The command \fBhttps:\fP//master\&.libelektra\&.org/tests/README\&.md '`kdb run_all`' now only prints the output of tests that failed\&. To print the full output of all test, please use the option \fC-v\fP\&. *(René Schwaiger)*
.IP "\(bu" 2
The \fCShell Recorder\fP does not use the non-POSIX grep option \fC--text\fP any more\&. *(René Schwaiger)*
.IP "\(bu" 2
The test suite now uses \fCGoogle Test\fP \fC1\&.8\&.1\fP\&. *(René Schwaiger)*
.PP
.PP
.SS "Build"
.PP
.SS "CMake"
.PP
.IP "\(bu" 2
We improved the detection of Python 2 and Python 3 in the CMake code of the Python bindings/plugins\&. *(René Schwaiger)*
.IP "\(bu" 2
We restructured the code of the \fCCMake module\fP we use to detect Haskell tools \&. *(René Schwaiger)*
.IP "\(bu" 2
Building the Haskell binding should now work again\&. *(René Schwaiger)*
.IP "\(bu" 2
The CMake configuration step now displays less debug messages about found libraries\&. *(René Schwaiger)*
.IP "\(bu" 2
Provide a wrapper around \fCcheck_symbol_exists\fP that handles issues with \fC-Werror -Wpedantic\fP\&. *(Lukas Winkler)*
.IP "\(bu" 2
The argument \fCINCLUDE_SYSTEM_DIRECTORIES\fP of the function \fCadd_plugin\fP now supports multiple include directories\&. *(René Schwaiger)*
.IP "\(bu" 2
We reformatted all CMake source files with cmake-format 0\&.4\&.3\&. *(René Schwaiger)*
.IP "\(bu" 2
Generating coverage data (\fCENABLE_COVERAGE=ON\fP) should now also work on macOS\&. *(René Schwaiger)*
.IP "\(bu" 2
You can use the new target \fCrun_checkshell\fP to run all shell checks (\fCtestscr_check\&.*\fP)\&. *(René Schwaiger)*
.IP "\(bu" 2
The new target \fCrun_nocheckshell\fP runs all tests except for shell checks\&. *(René Schwaiger)*
.IP "\(bu" 2
The target \fCrun_all\fP now runs tests that do not modify the key database in parallel\&. *(René Schwaiger)*
.IP "\(bu" 2
Fix CMake inclusion logic for GLib/Gi *(Markus Raab)*
.PP
.PP
.SS "Docker"
.PP
.IP "\(bu" 2
The Docker image for Debian stretch now contains all (optional) dependencies for Elektra\&. *(René Schwaiger)*
.IP "\(bu" 2
The docker images used by our build system are now available to download from our systems without authentication\&. Try it out and list available images via \fCdocker run --rm anoxis/registry-cli -r https://hub-public.libelektra.org\fP\&. You can search for images using \fC--images-like\fP, for example: \fCdocker run --rm anoxis/registry-cli -r https://hub-public.libelektra.org --images-like alpine\fP\&. Afterwards pull your desired image as you would do from any public registry, for example: \fCdocker pull hub-public\&.libelektra\&.org/build-elektra-alpine:201811-37597a34fed4988639cdaf4d6a2c54754d09918586f53389e4fde5fd3b3a7180\fP\&. *(Lukas Winkler)*
.PP
.PP
.SS "Vagrant"
.PP
.IP "\(bu" 2
Added Vagrantfile for Ubuntu artful 32-bit\&. *(Mihael Pranjić)*
.PP
.PP
.SS "Infrastructure"
.PP
.SS "Jenkins"
.PP
.IP "\(bu" 2
We enabled tests that write to the hard disk on the build job \fCalpine\fP\&. *(René Schwaiger)*
.IP "\(bu" 2
The build jobs now print less non-relevant output\&. *(René Schwaiger)*
.IP "\(bu" 2
Enable \fC-Werror\fP in \fCdebian-stable-full\fP\&. *(Lukas Winkler)*
.IP "\(bu" 2
We added the compiler switch \fC-Werror\fP to the build jobs:
.IP "  \(bu" 4
\fCalpine\fP,
.IP "  \(bu" 4
\fCdebian-stable-full-i386\fP,
.IP "  \(bu" 4
\fCdebian-stable-full-mmap-asan\fP,
.IP "  \(bu" 4
\fCdebian-stable-full-mmap\fP,
.IP "  \(bu" 4
\fCdebian-stable-full-optimizations-off\fP,
.IP "  \(bu" 4
\fCdebian-stable-full-xdg\fP,
.IP "  \(bu" 4
\fCdebian-stable-minimal\fP,
.IP "  \(bu" 4
\fCdebian-stable-multiconf\fP,
.IP "  \(bu" 4
\fCdebian-unstable-clang-asan\fP,
.IP "  \(bu" 4
\fCdebian-unstable-full-clang\fP,
.IP "  \(bu" 4
\fCdebian-unstable-full\fP,
.IP "  \(bu" 4
\fCubuntu-xenial\fP, and
.IP "  \(bu" 4
\fCdebian-stable-asan\fP\&. *(René Schwaiger)*
.PP

.IP "\(bu" 2
Build Artifacts for all PR's to detect issues before merging *(Lukas Winkler)*
.IP "\(bu" 2
Stricter removal of temporary docker images on docker nodes *(Lukas Winkler)*
.IP "\(bu" 2
Added jenkins build jobs \fCdebian-stable-full-mmap\fP and \fCdebian-stable-full-mmap-asan\fP with \fCmmapstorage\fP as the default storage\&. *(Mihael Pranjić)*
.IP "\(bu" 2
We added basic support for coverage analysis via \fCCoveralls\fP\&. *(René Schwaiger)*
.PP
.PP
.SS "Travis"
.PP
.IP "\(bu" 2
Travis now also checks the code for memory leaks in the build job \fC🍏 Clang ASAN\fP\&. *(René Schwaiger)*
.IP "\(bu" 2
The Travis build jobs \fC🍏 Clang ASAN\fP and \fC🐧 GCC ASAN\fP now only translates a minimal set of plugins, since we had various timeout problems with these jobs before\&. We explicitly excluded plugins, to make sure that the build jobs still test newly added plugins\&. *(René Schwaiger)*
.IP "\(bu" 2
Added travis build job \fC🍏 mmap\fP on macOS with \fCmmapstorage\fP as the default storage\&. *(Mihael Pranjić)*
.IP "\(bu" 2
Travis now prints the CMake configuration for each build job\&. *(René Schwaiger)*
.IP "\(bu" 2
We now test Elektra using the latest version of Xcode (\fC10\&.0\fP)\&. *(René Schwaiger)*
.IP "\(bu" 2
We added the build job \fC🍏 Check Shell\fP, which only runs shell checks such as \fCtestscr_check_oclint\fP\&. This update allows us to remove the shell checks from the jobs \fC🍏 MMap\fP and \fC🍏 Clang\fP, which sometimes hit the \fCtimeout limit for public repositories\fP before\&. *(René Schwaiger)*
.IP "\(bu" 2
All Travis build jobs now use the compiler switch \fC-Werror\fP\&. *(René Schwaiger)*
.IP "\(bu" 2
The new job \fC🍏 FULL\fP and the build job \fC🐧 FULL\fP build Elektra using the CMake options \fCBUILD_FULL=ON\fP and \fCBUILD_SHARED=OFF\fP\&. *(René Schwaiger)*
.IP "\(bu" 2
The \fCscript\fP stage of the build jobs print less non-relevant output\&. Usually the commands in this stage should now only print verbose output if a test fails\&. *(René Schwaiger)*
.PP
.PP
.SS "Website"
.PP
The website is generated from the repository, so all information about plugins, bindings and tools are always up to date\&.
.PP
.SS "Outlook"
.PP
We are currently working on following topics:
.PP
.IP "\(bu" 2
Global mmap cache: This feature will enable Elektra to return configuration without parsing configuration files or executing other plugins as long as the configuration files are not changed\&. *(Mihael Pranjić)*
.IP "\(bu" 2
Finish high-level API\&. *(Klemens Böswirth)*
.IP "\(bu" 2
Validation improvements\&. *(Michael Zronek)*
.IP "\(bu" 2
Improve YAML plugins\&. *(René Schwaiger)*
.PP
.PP
.SS "Statistics"
.PP
Following authors made this release possible:
.PP
.IP "\(bu" 2
1 commit: Thomas Wahringer thomas.wahringer@libelektra.org
.IP "\(bu" 2
2 commits: Bernhard Denner bernhard.denner@gmail.com
.IP "\(bu" 2
7 commits: Kurt Micheli e1026558@student.tuwien.ac.at
.IP "\(bu" 2
12 commits: Michael Zronek michael.zronek@gmail.com
.IP "\(bu" 2
33 commits: Lukas Winkler derwinlu+git@gmail.com
.IP "\(bu" 2
28 commits: Klemens Böswirth k.boeswirth+git@gmail.com
.IP "\(bu" 2
30 commits: Armin Wurzinger e1528532@student.tuwien.ac.at
.IP "\(bu" 2
38 commits: Peter Nirschl peter.nirschl@gmail.com
.IP "\(bu" 2
100 commits: Markus Raab markus@libelektra.org
.IP "\(bu" 2
180 commits: Mihael Pranjic mpranj@limun.org
.IP "\(bu" 2
418 commits: René Schwaiger sanssecours@me.com
.PP
.PP
849 commits, 581 files changed, 18503 insertions(+), 3192 deletions(-)
.PP
We welcome new contributors!
.PP
.SS "Finished Thesis"
.PP
.IP "\(bu" 2
\fCDaniel Bugl\fP, see also \fCthe web demo\fP\&.
.IP "\(bu" 2
\fCThomas Wahringer\fP\&.
.IP "\(bu" 2
\fCKurt Micheli\fP
.IP "\(bu" 2
\fCArmin Wurzinger\fP
.PP
.PP
.SS "Get It!"
.PP
You can download the release from \fChere\fP or \fCGitHub\fP
.PP
The \fChashsums are:\fP
.PP
<<\fCscripts/generate-hashsums\fP>>
.PP
The release tarball is also available signed by Markus Raab using GnuPG from \fChere\fP or \fCGitHub\fP
.PP
Already built API-Docu can be found \fChere\fP or \fCGitHub\fP\&.
.PP
.SS "Stay tuned!"
.PP
Subscribe to the \fCRSS feed\fP to always get the release notifications\&.
.PP
If you also want to participate, or for any questions and comments please contact us via the issue tracker \fCon GitHub\fP\&.
.PP
\fCPermalink to this NEWS entry\fP
.PP
For more information, see \fChttps://libelektra\&.org\fP
.PP
Best regards, \fCElektra Initiative\fP 
