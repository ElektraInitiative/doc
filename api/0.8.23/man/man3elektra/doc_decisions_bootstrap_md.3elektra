.TH "doc_decisions_bootstrap_md" 3elektra "Sun May 13 2018" "Version 0.8.23" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_decisions_bootstrap_mdBootstrap 
 \- 
.SS "Problem"
.PP
Currently the default backend (default\&.ecf) will also be used for bootstrapping\&. There are two problems with this approach:
.PP
.IP "1." 4
Thus the default backend first will be read with parentKey \fCsystem/elektra\fP and later with parentKey \fCsystem\fP, it needs to store absolute paths and thus won't work with the current INI plugin
.IP "2." 4
When \fCsystem\fP is large without mountpoints, everything is reread twice during bootstrapping\&.
.PP
.PP
.SS "Constraints"
.PP
.IP "\(bu" 2
be compatible to mountpoints stored in \fCdefaults\&.ecf\fP
.IP "\(bu" 2
nice migration phase
.IP "\(bu" 2
new setups should never bother about the compatibility mode
.PP
.PP
.SS "Assumptions"
.PP
.IP "\(bu" 2
Bootstrap should be fast and not unnecessarily read large files
.PP
.PP
.SS "Considered Alternatives"
.PP
.IP "\(bu" 2
Implement a hack so that \fCsystem/elektra\fP is actually read as \fCsystem\fP\&. (Will not solve problem 2\&.)
.IP "  \(bu" 4
Its a hack\&.
.IP "  \(bu" 4
Its confusing and does not play well with persistent data with relative key names\&.
.PP

.IP "\(bu" 2
Split up without compatibility mode: would need to migrate all mountpoints by exporting (with old version!) and then importing (with new version!)
.IP "  \(bu" 4
I consider this too error prone, people might easily forget to export with the old version and then discard their mountpoints unintentional\&.
.PP

.PP
.PP
.SS "Decision"
.PP
Split up the concepts of default (\fCdefault\&.ecf\fP) and bootstrap (\fCelektra\&.ecf\fP) backend\&. During bootstrap only \fCelektra\&.ecf\fP is read\&. The default backend reading \fCdefault\&.ecf\fP is only relevant as long as no root backend is mounted\&.
.PP
Algorithm:
.PP
.IP "1." 4
try to get system/elektra using the file elektra\&.ecf (KDB_DB_INIT)
.IP "2." 4
if it works, mount the init backend to system/elektra (non-fallback mode)
.IP "3." 4
if it fails (== 0 or == -1), try default\&.ecf as fallback
.IP "4." 4
if the fallback works (i\&.e\&. keys are present in system/elektra), mount the default backend to system/elektra (fallback mode)
.PP
.PP
.SS "Rationale"
.PP
.IP "\(bu" 2
Solves both problems
.IP "\(bu" 2
Is fully compatible with any existing setup
.IP "\(bu" 2
People can decide if and how to migrate
.PP
.PP
.SS "Implications"
.PP
.IP "\(bu" 2
Fallback mode should be removed with 1\&.0
.IP "\(bu" 2
added scripts/upgrade-bootstrap
.PP
.PP
.SS "Related decisions"
.PP
.SS "Notes"
.PP
to upgrade to new system, either:
.PP
.IP "\(bu" 2
touch /etc/kdb/elektra\&.ecf (loses old mountpoints)
.IP "\(bu" 2
or do kdb export system/elektra/mountpoints, kdb rm -r system/elektra/mountpoints, kdb import system/elektra/mountpoints 
.PP

