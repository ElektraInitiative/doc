.TH "md_src_plugins_noresolver_README" 3elektra "Sat Jul 10 2021" "Version 0.9.7" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_noresolver_README \- Plugin: noresolver 

.IP "\(bu" 2
infos = Information about the noresolver plugin is in keys below
.IP "\(bu" 2
infos/author = Markus Raab elektra@libelektra.org
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/provides = resolver
.IP "\(bu" 2
infos/needs =
.IP "\(bu" 2
infos/placements = rollback getresolver setresolver
.IP "\(bu" 2
infos/status = maintained nodep libc configurable discouraged
.IP "\(bu" 2
infos/description = resolver dummy that always succeeds
.PP
.SH "Introduction"
.PP
\fCnoresolver\fP is designed for non-file-based storage plugins like \fBuname\fP\&. It is a trivial resolver that:
.PP
.IP "\(bu" 2
does not resolve file names but forwards them as given to the storage plugin
.IP "\(bu" 2
does not provide any consistency guarantees but storage plugins directly write to the config files
.PP
.SH "Explanation"
.PP
Returns success on every call and can be used as resolver\&.
.PP
It also exports a function checks if a filename is valid\&. It returns 1 for a relative path and 0 for an absolute path (always successfully)\&.
.PP
The path passed to the storage plugin via the parent key is exactly the value that was set during mounting\&. This plugin \fIdoes not\fP resolve any paths\&. If a relative path was set while mounting, storage plugins may treat it as relative to the current working directory\&. 
