.TH "doc_tutorials_install-config-files_md" 3elektra "Mon Jul 11 2022" "Version 0.9.10" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_tutorials_install-config-files_md \- How-To: install configuration files 
 The \fCinstall-config-file\fP tool makes using Elektra for a configuration file easier\&. Please refer to its man page for details on its syntax\&.
.PP
It is especially useful in the context of package upgrades\&. In this case
.PP
.IP "\(bu" 2
\fCtheir\fP is the current version of the maintainer's copy of a configuration file,
.IP "\(bu" 2
\fCbase\fP is the previous version of the maintainer's copy of the configuration file\&.
.IP "\(bu" 2
\fCour\fP is the user's copy of the configuration file, derived from \fCbase\fP
.PP
.PP
First of all, we create a small example configuration file\&. To do so, we first create a temporary file and store its location in Elektra\&.
.PP
.PP
.nf
kdb set user:/tests/tempfiles/firstFile $(mktemp)
echo -e "keyA=a\nkeyB=b\nkeyC=c" > `kdb get user:/tests/tempfiles/firstFile`
.fi
.PP
.PP
The following call to \fCkdb install-config-file\fP will mount it at \fCsystem:/tests/installing\fP and additionally create a copy of it\&. The copy will be required for a three-way merge later on\&.
.PP
.PP
.nf
kdb install-config-file system:/tests/installing `kdb get user:/tests/tempfiles/firstFile` mini
.fi
.PP
.PP
We can now safely make changes to our configuration\&.
.PP
.PP
.nf
kdb set system:/tests/installing/keyB X
.fi
.PP
.PP
Let's assume that we've downloaded a different version of this file from the internet and placed it into the directory \fC/tmp/new\fP\&. At this point we can use \fCkdb install-config-file\fP to merge the changes of this downloaded version into the configuration that we currently store in Elektra\&.
.PP
Note the slash \fC/\fP in the beginning of the second parameter of the call to \fCkdb install-config-file\fP\&. This tool uses \fCkdb mount\fP and in consequence also the resolver\&. You have to enter the paths accordingly\&. Read the tutorials on mounting and namespaces if you are not sure what this means\&.
.PP
.PP
.nf
kdb set user:/tests/tempfiles/secondFile $(echo $(mktemp -d)/$(basename $(kdb get user:/tests/tempfiles/firstFile)))
echo -e "keyA=a\nkeyB=b\nkeyC=Y" > `kdb get user:/tests/tempfiles/secondFile`
kdb install-config-file system:/tests/installing $(kdb get user:/tests/tempfiles/secondFile) mini
.fi
.PP
.PP
We can check that this worked by calling
.PP
.PP
.nf
kdb get system:/tests/installing/keyB
#> X
kdb get system:/tests/installing/keyC
#> Y
.fi
.PP
.PP
Finally, we use the following commands to clean up our tutorial\&.
.PP
.PP
.nf
kdb umount system:/tests/installing
rm -rf $(kdb get user:/tests/tempfiles/firstFile)
rm -rf $(kdb get user:/tests/tempfiles/secondFile)
kdb rm -rf user:/tests/tempfiles
kdb rm -rf user:/elektra/merge/preserve
.fi
.PP
 
