.TH "kdbvalue.hpp" 3elektra "Tue Nov 22 2016" "Version 0.8.19" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kdbvalue.hpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include <kdbconfig\&.h>\fP
.br
\fC#include <algorithm>\fP
.br
\fC#include <cassert>\fP
.br
\fC#include <fstream>\fP
.br
\fC#include <functional>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <kdbmeta\&.h>\fP
.br
\fC#include <map>\fP
.br
\fC#include <memory>\fP
.br
\fC#include <set>\fP
.br
\fC#include <stdexcept>\fP
.br
\fC#include <string>\fP
.br
\fC#include <unordered_map>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <kdbproposal\&.h>\fP
.br
\fC#include <keyset\&.hpp>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "class \fBkdb::none_t\fP"
.br
.RI "\fIThis type is being used as bottom type that always fails\&. \fP"
.ti -1c
.RI "class \fBkdb::Layer\fP"
.br
.RI "\fIBase class for all layers\&. \fP"
.ti -1c
.RI "class \fBkdb::Wrapped\fP"
.br
.RI "\fIEverything implementing this interface can be used as layer\&. \fP"
.ti -1c
.RI "class \fBkdb::ValueObserver\fP"
.br
.RI "\fIBase class for values to be observed\&. \fP"
.ti -1c
.RI "struct \fBkdb::Command\fP"
.br
.RI "\fIUsed by contexts for callbacks (to run code using a mutex)\&. \fP"
.ti -1c
.RI "class \fBkdb::DefaultGetPolicy\fP"
.br
.RI "\fIImplements lookup with spec\&. \fP"
.ti -1c
.RI "class \fBkdb::DefaultSetPolicy\fP"
.br
.RI "\fIImplements creating user/ key when key is not found\&. \fP"
.ti -1c
.RI "class \fBkdb::GetPolicyIs< Policy >\fP"
.br
.RI "\fINeeded by the user to set one of the policies\&. \fP"
.ti -1c
.RI "class \fBkdb::SetPolicyIs< Policy >\fP"
.br
.RI "\fINeeded by the user to set one of the policies\&. \fP"
.ti -1c
.RI "class \fBkdb::ContextPolicyIs< Policy >\fP"
.br
.RI "\fINeeded by the user to set one of the policies\&. \fP"
.ti -1c
.RI "class \fBkdb::WritePolicyIs< Policy >\fP"
.br
.RI "\fINeeded by the user to set one of the policies\&. \fP"
.ti -1c
.RI "class \fBkdb::ObserverPolicyIs< Policy >\fP"
.br
.RI "\fINeeded by the user to set one of the policies\&. \fP"
.ti -1c
.RI "class \fBkdb::LockPolicyIs< Policy >\fP"
.br
.RI "\fINeeded by the user to set one of the policies\&. \fP"
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBkdb\fP"
.br
.RI "\fIThis is the main namespace for the C++ binding and libraries\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBkdb::operator<\fP (ValueObserver const &lhs, ValueObserver const &rhs)"
.br
.RI "\fINeeded to put a \fBValueObserver\fP in a map\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBCopyright:\fP
.RS 4
BSD License (see doc/LICENSE\&.md or http://www.libelektra.org) 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
