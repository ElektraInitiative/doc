.TH "doc_contrib_api_reviews_core_keyGetBinary_md" 3elektra "Thu Mar 16 2023" "Version 0.9.14" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_contrib_api_reviews_core_keyGetBinary_md \- keyGetBinary 

.IP "\(bu" 2
start = 2021-03-07 17:15
.IP "\(bu" 2
end = 2021-03-07 17:30
.IP "\(bu" 2
reviewer = Stefan Hanreich stefanhani@gmail.com
.PP
.SH "Signature"
.PP
\fCssize_t \fBkeyGetBinary(const Key *key, void *returnedBinary, size_t maxSize)\fP\fP
.SH "Checklist"
.PP
.SS "Doxygen"
(bullet points are in order of appearance)
.PP
.IP "\(bu" 2
[ ] First line explains briefly what the function does 
.br
.IP "  \(bu" 4
[ ] as binary data
.PP

.IP "\(bu" 2
[ ] Simple example or snippet how to use the function 
.br
.IP "  \(bu" 4
[ ] move up
.PP

.IP "\(bu" 2
[ ] Longer description of function containing common use cases 
.br
.IP "  \(bu" 4
[ ] merge reference to string functions with \fC@see\fP 
.br

.IP "  \(bu" 4
[ ] how exactly is empty defined for binary?
.PP

.IP "\(bu" 2
[x] Description of functions reads nicely
.IP "\(bu" 2
[ ] \fC@pre\fP 
.br
.IP "  \(bu" 4
[x] add
.PP

.IP "\(bu" 2
[ ] \fC@post\fP 
.br
.IP "  \(bu" 4
[x] add
.PP

.IP "\(bu" 2
[ ] \fC@invariant\fP 
.br
.IP "  \(bu" 4
[x] add
.PP

.IP "\(bu" 2
[x] \fC@param\fP for every parameter
.IP "\(bu" 2
[ ] \fC@return\fP / \fC@retval\fP 
.br
.IP "  \(bu" 4
[ ] merge lines for maxSize errors
.PP

.IP "\(bu" 2
[ ] \fC@since\fP 
.br
.IP "  \(bu" 4
[ ] add
.PP

.IP "\(bu" 2
[x] \fC@ingroup\fP
.IP "\(bu" 2
[ ] \fC@see\fP 
.br
.IP "  \(bu" 4
[ ] split first line
.PP

.PP
.SS "Naming"
.IP "\(bu" 2
Abbreviations used in function names must be defined in the \fBGlossary\fP
.IP "\(bu" 2
[x] Function names should neither be too long, nor too short
.IP "\(bu" 2
[x] Function name should be clear and unambiguous
.IP "\(bu" 2
Abbreviations used in parameter names must be defined in the \fBGlossary\fP
.IP "\(bu" 2
[x] Parameter names should neither be too long, nor too short
.IP "\(bu" 2
[x] Parameter names should be clear and unambiguous
.PP
.SS "Compatibility"
(only in PRs)
.PP
.IP "\(bu" 2
\fBSymbol versioning\fP is correct for breaking changes
.IP "\(bu" 2
ABI/API changes are forward-compatible (breaking backwards-compatibility to add additional symbols is fine)
.PP
.SS "Parameter & Return Types"
.IP "\(bu" 2
Function parameters should use enum types instead of boolean types wherever sensible
.IP "\(bu" 2
[x] Wherever possible, function parameters should be \fCconst\fP
.IP "\(bu" 2
[x] Wherever possible, return types should be \fCconst\fP
.IP "\(bu" 2
[x] Functions should have the least amount of parameters feasible
.PP
.SS "Structural Clarity"
.IP "\(bu" 2
[x] Functions should do exactly one thing
.IP "\(bu" 2
[x] Function name has the appropriate prefix
.IP "\(bu" 2
[x] Order of signatures in kdb\&.h\&.in is the same as Doxygen
.IP "\(bu" 2
[x] No functions with similar purpose exist
.PP
.SS "Memory Management"
.IP "\(bu" 2
[x] Memory Management should be handled by the function wherever possible
.PP
.SS "Extensibility"
.IP "\(bu" 2
[x] Function is easily extensible, e\&.g\&., with flags
.IP "\(bu" 2
[x] Documentation does not impose limits, that would hinder further extensions
.PP
.SS "Tests"
.IP "\(bu" 2
[ ] Function code is fully covered by tests 
.br
.IP "  \(bu" 4
[x] L417 
.br

.IP "  \(bu" 4
[x] L422 
.br

.IP "  \(bu" 4
[x] L427
.PP

.IP "\(bu" 2
[ ] All possible error states are covered by tests 
.br
.IP "  \(bu" 4
[x] add test for key with string value 
.br

.IP "  \(bu" 4
[x] L422 seems to be in the tests - check 
.br

.IP "  \(bu" 4
[x] L427 seems to be in the tests - check
.PP

.IP "\(bu" 2
All possible enum values are covered by tests
.IP "\(bu" 2
[x] No inconsistencies between tests and documentation
.PP
.SH "Summary"
.PP
'Clear' binary array on error, to mirror behavior from string? What to fill it with, though? Zeroes?
.SH "Other Issues discovered (unrelated to function)"
.PP

