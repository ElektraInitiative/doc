.TH "kdb::tools::PluginSpec" 3elektra "Mon Jun 7 2021" "Version 0.9.6" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kdb::tools::PluginSpec \- Specifies a plugin by its name and configuration\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <pluginspec\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPluginSpec\fP (std::string pluginName, \fBKeySet\fP pluginConfig=\fBKeySet\fP())"
.br
.RI "Construct a plugin spec with a given module name\&. "
.ti -1c
.RI "\fBPluginSpec\fP (std::string pluginName, std::string refName, \fBKeySet\fP pluginConfig=\fBKeySet\fP())"
.br
.RI "Construct a plugin spec with a given module and ref name\&. "
.ti -1c
.RI "\fBPluginSpec\fP (std::string pluginName, size_t refNumber, \fBKeySet\fP pluginConfig=\fBKeySet\fP())"
.br
.RI "Construct a plugin spec with a given module name and ref number\&. "
.ti -1c
.RI "std::string \fBgetFullName\fP () const"
.br
.ti -1c
.RI "std::string \fBgetRefName\fP () const"
.br
.ti -1c
.RI "bool \fBisRefNumber\fP () const"
.br
.RI "Checks if reference name contains only numbers\&. "
.ti -1c
.RI "std::string \fBgetName\fP () const"
.br
.ti -1c
.RI "\fBKeySet\fP \fBgetConfig\fP () const"
.br
.ti -1c
.RI "void \fBsetFullName\fP (std::string const &name)"
.br
.RI "Set the full name with # or only the name\&. "
.ti -1c
.RI "void \fBsetRefName\fP (std::string const &name)"
.br
.RI "Set the reference name of the plugin\&. "
.ti -1c
.RI "void \fBsetRefNumber\fP (size_t number)"
.br
.RI "Set a number for automatic references during parsing\&. "
.ti -1c
.RI "void \fBsetName\fP (std::string const &name)"
.br
.RI "Set the module name of the plugin\&. "
.ti -1c
.RI "void \fBappendConfig\fP (\fBKeySet\fP config)"
.br
.RI "Append to config\&. "
.ti -1c
.RI "void \fBsetConfig\fP (\fBKeySet\fP config)"
.br
.RI "Set plugin config\&. "
.ti -1c
.RI "void \fBvalidate\fP (std::string const &str) const"
.br
.RI "Check if str starts with a-z and then only has chars a-z, 0-9 or underscore (_) "
.in -1c
.SH "Detailed Description"
.PP 
Specifies a plugin by its name and configuration\&. 


.PP
\fBInvariant\fP
.RS 4
name is valid (nonempty, starts with a-z, then a-z_0-9) 
.PP
refname is valid (same as above or a size_t number) 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "kdb::tools::PluginSpec::PluginSpec (std::string pluginName, \fBKeySet\fP pluginConfig = \fC\fBKeySet\fP ()\fP)\fC [explicit]\fP"

.PP
Construct a plugin spec with a given module name\&. 
.PP
\fBParameters\fP
.RS 4
\fIpluginName\fP the fullname (modulename # refname) 
.br
\fIpluginConfig\fP the plugins config
.RE
.PP
\fBExceptions\fP
.RS 4
\fIBadPluginName\fP if name not a-z
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetFullName()\fP 
.RE
.PP

.SS "kdb::tools::PluginSpec::PluginSpec (std::string pluginName, std::string refName, \fBKeySet\fP pluginConfig = \fC\fBKeySet\fP ()\fP)\fC [explicit]\fP"

.PP
Construct a plugin spec with a given module and ref name\&. 
.PP
\fBParameters\fP
.RS 4
\fIpluginName\fP the module this plugin is instantiated from 
.br
\fIrefName\fP for uniqueness for more plugins from one module 
.br
\fIpluginConfig\fP the plugins config
.RE
.PP
\fBExceptions\fP
.RS 4
\fIBadPluginName\fP if name not a-z
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetName()\fP 
.PP
\fBsetRefName()\fP 
.RE
.PP

.SS "kdb::tools::PluginSpec::PluginSpec (std::string pluginName, size_t refNumber, \fBKeySet\fP pluginConfig = \fC\fBKeySet\fP ()\fP)\fC [explicit]\fP"

.PP
Construct a plugin spec with a given module name and ref number\&. 
.PP
\fBParameters\fP
.RS 4
\fIpluginName\fP the module this plugin is instantiated from 
.br
\fIrefNumber\fP for uniqueness for more plugins from one module 
.br
\fIpluginConfig\fP the plugins config
.RE
.PP
\fBExceptions\fP
.RS 4
\fIBadPluginName\fP if name not a-z
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetName()\fP 
.PP
\fBsetRefName()\fP 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void kdb::tools::PluginSpec::appendConfig (\fBKeySet\fP c)"

.PP
Append to config\&. 
.PP
\fBParameters\fP
.RS 4
\fIc\fP config to append 
.RE
.PP

.SS "\fBKeySet\fP kdb::tools::PluginSpec::getConfig () const"

.PP
\fBReturns\fP
.RS 4
the config 
.RE
.PP

.SS "std::string kdb::tools::PluginSpec::getFullName () const"

.PP
\fBNote\fP
.RS 4
if no reference name is given its equal to the module name
.RE
.PP
\fBReturns\fP
.RS 4
the module name, then #, and then the reference name 
.RE
.PP

.SS "std::string kdb::tools::PluginSpec::getName () const"

.PP
\fBReturns\fP
.RS 4
the module name 
.RE
.PP

.SS "std::string kdb::tools::PluginSpec::getRefName () const"

.PP
\fBReturns\fP
.RS 4
the reference name 
.RE
.PP

.SS "bool kdb::tools::PluginSpec::isRefNumber () const"

.PP
Checks if reference name contains only numbers\&. 
.PP
\fBReturn values\fP
.RS 4
\fItrue\fP if only numbers 
.br
\fItrue\fP if a refname was given 
.RE
.PP

.SS "void kdb::tools::PluginSpec::setConfig (\fBKeySet\fP c)"

.PP
Set plugin config\&. 
.PP
\fBParameters\fP
.RS 4
\fIc\fP new config to be used as plugin config 
.RE
.PP

.SS "void kdb::tools::PluginSpec::setFullName (std::string const & n)"

.PP
Set the full name with # or only the name\&. 
.PP
\fBExceptions\fP
.RS 4
\fIBadPluginName\fP if name not a-z (no change then)
.RE
.PP
\fBParameters\fP
.RS 4
\fIn\fP the string to set 
.RE
.PP

.SS "void kdb::tools::PluginSpec::setName (std::string const & n)"

.PP
Set the module name of the plugin\&. 
.PP
\fBExceptions\fP
.RS 4
\fIBadPluginName\fP if name not a-z (no change then)
.RE
.PP
\fBParameters\fP
.RS 4
\fIn\fP the string to set 
.RE
.PP

.SS "void kdb::tools::PluginSpec::setRefName (std::string const & n)"

.PP
Set the reference name of the plugin\&. 
.PP
\fBExceptions\fP
.RS 4
\fIBadPluginName\fP if name not a-z (no change then)
.RE
.PP
Makes different plugins based from the same module unique\&.
.PP
\fBParameters\fP
.RS 4
\fIn\fP the string to set 
.RE
.PP

.SS "void kdb::tools::PluginSpec::setRefNumber (size_t refnumber)"

.PP
Set a number for automatic references during parsing\&. 
.PP
\fBParameters\fP
.RS 4
\fIrefnumber\fP the number to set 
.RE
.PP

.SS "void kdb::tools::PluginSpec::validate (std::string const & n) const"

.PP
Check if str starts with a-z and then only has chars a-z, 0-9 or underscore (_) 
.PP
\fBParameters\fP
.RS 4
\fIn\fP the string to check 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
