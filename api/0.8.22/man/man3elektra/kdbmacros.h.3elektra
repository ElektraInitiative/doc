.TH "kdbmacros.h" 3elektra "Tue Feb 27 2018" "Version 0.8.22" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kdbmacros.h \- Macros by Elektra\&.  

.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBELEKTRA_QUOTE\fP(x)   #x"
.br
.RI "Surround a value with double quotes\&. "
.ti -1c
.RI "#define \fBELEKTRA_STRINGIFY\fP(x)   \fBELEKTRA_QUOTE\fP (x)"
.br
.RI "Surround a \fBmacro value\fP with double quotes\&. "
.ti -1c
.RI "#define \fBELEKTRA_SET_ERROR_READ_ONLY\fP(info,  returned,  error)"
.br
.RI "Sets error 84 if info != returned\&. "
.in -1c
.SH "Detailed Description"
.PP 
Macros by Elektra\&. 

Macros start with ELEKTRA_ and are uppercase\&.
.PP
\fBCopyright:\fP
.RS 4
BSD License (see LICENSE\&.md or https://www.libelektra.org) 
.RE
.PP

.SH "Macro Definition Documentation"
.PP 
.SS "#define ELEKTRA_SET_ERROR_READ_ONLY(info, returned, error)"
\fBValue:\fP
.PP
.nf
do                                                                                                                                 \
        {                                                                                                                                  \
                Key * k;                                                                                                                   \
                ksRewind (info);                                                                                                           \
                ksRewind (returned);                                                                                                       \
                while ((k = ksNext (returned)))                                                                                            \
                {                                                                                                                          \
                        Key * c = ksNext (info);                                                                                           \
                        if (!c)                                                                                                            \
                        {                                                                                                                  \
                                ELEKTRA_SET_ERRORF (84, error, "the key %s (value %s) was added", keyName (k), keyString (k));             \
                                ksDel (info);                                                                                              \
                                return -1;                                                                                                 \
                        }                                                                                                                  \
                        if (strcmp (keyName (k), keyName (c)) || strcmp (keyString (k), keyString (c)))                                    \
                        {                                                                                                                  \
                                ELEKTRA_SET_ERRORF (84, error, "the key %s (expected %s) was modified to %s (expected %s)", keyName (k),   \
                                                    keyName (c), keyString (k), keyString (c));                                            \
                                ksDel (info);                                                                                              \
                                return -1;                                                                                                 \
                        }                                                                                                                  \
                }                                                                                                                          \
                if ((k = ksNext (info)) != 0)                                                                                              \
                {                                                                                                                          \
                        ELEKTRA_SET_ERRORF (84, error, "the key %s (value %s) was removed", keyName (k), keyString (k));                   \
                        ksDel (info);                                                                                                      \
                        return -1;                                                                                                         \
                }                                                                                                                          \
                ksDel (info);                                                                                                              \
        } while (0)
.fi
.PP
Sets error 84 if info != returned\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinfo\fP how the info is now (freshly received) 
.br
\fIreturned\fP how the info passed from user is 
.br
\fIerror\fP key to set error to
.RE
.PP
\fBReturns:\fP
.RS 4
with -1 on error 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
