.TH "keytest.c" 3elektra "Tue Jun 14 2016" "Version 0.8.17" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
keytest.c \- 
.PP
Methods for making tests\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'kdb\&.h'\fP
.br
\fC#include 'kdbinternal\&.h'\fP
.br
\fC#include 'kdbprivate\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBkeyNeedSync\fP (const Key *key)"
.br
.RI "\fITest if a key needs to be synced to backend storage\&. \fP"
.ti -1c
.RI "int \fBkeyIsSystem\fP (const Key *key)"
.br
.RI "\fICheck whether a key is under the \fCsystem\fP namespace or not\&. \fP"
.ti -1c
.RI "int \fBkeyIsUser\fP (const Key *key)"
.br
.RI "\fICheck whether a key is under the \fCuser\fP namespace or not\&. \fP"
.ti -1c
.RI "int \fBkeyIsBelow\fP (const Key *key, const Key *check)"
.br
.RI "\fICheck if the key check is below the key key or not\&. \fP"
.ti -1c
.RI "int \fBkeyIsBelowOrSame\fP (const Key *key, const Key *check)"
.br
.RI "\fICheck if a key is below or same or not\&. \fP"
.ti -1c
.RI "int \fBkeyIsDirectBelow\fP (const Key *key, const Key *check)"
.br
.RI "\fICheck if the key check is direct below the key key or not\&. \fP"
.ti -1c
.RI "int \fBkeyRel\fP (const Key *key, const Key *check)"
.br
.RI "\fIInformation about the relation in the hierarchy between two keys\&. \fP"
.ti -1c
.RI "int \fBkeyIsInactive\fP (const Key *key)"
.br
.RI "\fICheck whether a key is inactive\&. \fP"
.ti -1c
.RI "int \fBkeyIsBinary\fP (const Key *key)"
.br
.RI "\fICheck if a key is binary type\&. \fP"
.ti -1c
.RI "int \fBkeyIsString\fP (const Key *key)"
.br
.RI "\fICheck if a key is string type\&. \fP"
.ti -1c
.RI "int \fBkeyCompareMeta\fP (const Key *k1, const Key *k2)"
.br
.RI "\fICompares metadata of two keys\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Methods for making tests\&. 


.PP
\fBCopyright:\fP
.RS 4
BSD License (see doc/COPYING or http://www.libelektra.org) 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int keyCompareMeta (const Key *k1, const Key *k2)"

.PP
Compares metadata of two keys\&. 
.PP
\fBReturn values:\fP
.RS 4
\fIKEY_META\fP if there is a difference 
.br
\fI0\fP if meta data is identical 
.RE
.PP

.SS "int keyIsBelowOrSame (const Key *key, const Key *check)"

.PP
Check if a key is below or same or not\&. 
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP the key object to work with 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBkeyIsBelow()\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
