.TH "doc_decisions_null_md" 3elektra "Sun Jul 10 2022" "Version 0.9.10" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_decisions_null_md \- Null 
 
.SH "Problem"
.PP
Null keys do not have a semantic and make API more difficult\&.
.SH "Constraints"
.PP
.SH "Assumptions"
.PP
.SH "Considered Alternatives"
.PP
.IP "\(bu" 2
remove null keys, i\&.e\&. keyValue always returns a string (e\&.g\&. empty string on new keys)
.PP
.SH "Decision"
.PP
Null keys get clear semantics: they are for representing keys that do not have a value, i\&.e\&., only represent structure in configuration files\&.
.PP
For example, an INI \fCsection\fP is a null key:
.PP
.PP
.nf
[section]
key = value
.fi
.PP
.PP
For example, in other config formats there might be keys without any value\&. Here \fCkey1\fP would be a null-key and thus is different to the value of \fCkey2\fP, i\&.e\&., an empty string:
.PP
.PP
.nf
key1
key2 = ""
.fi
.PP
.SH "Rationale"
.PP
.SH "Implications"
.PP
.SH "Related Decisions"
.PP
.IP "\(bu" 2
\fBKey Name\fP
.PP
.SH "Notes"
.PP

