.TH "getenv.cpp" 3elektra "Fri Apr 29 2016" "Version 0.8.16" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
getenv.cpp \- 
.PP
Source for the getenv library\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <kdbconfig\&.h>\fP
.br
\fC#include <kdbgetenv\&.h>\fP
.br
\fC#include <kdbcontext\&.hpp>\fP
.br
\fC#include <kdbhelper\&.h>\fP
.br
\fC#include <dlfcn\&.h>\fP
.br
\fC#include <libgen\&.h>\fP
.br
\fC#include <signal\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <chrono>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <sstream>\fP
.br
\fC#include <string>\fP
.br
\fC#include 'readme_elektrify-getenv\&.c'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBckdb::elektraLockMutex\fP ()"
.br
.RI "\fILock the internally used mutex to access elektraRepo, elektraConfig or elektraParentKey\&. \fP"
.ti -1c
.RI "void \fBckdb::elektraUnlockMutex\fP ()"
.br
.RI "\fIUnlock the internally used mutex\&. \fP"
.ti -1c
.RI "void \fBckdb::elektraOpen\fP (int *argc, char **argv)"
.br
.RI "\fIInitializes Global Elektra Repo+Config\&. \fP"
.ti -1c
.RI "void \fBckdb::elektraClose\fP ()"
.br
.RI "\fICloses and frees Repo+Config\&. \fP"
.ti -1c
.RI "char * \fBckdb::elektraGetEnv\fP (const char *cname, gfcn origGetenv)"
.br
.RI "\fIUses Elektra to get from environment\&. \fP"
.ti -1c
.RI "char * \fBckdb::elektraBootstrapGetEnv\fP (const char *name)"
.br
.RI "\fISearch in environ, should be identical to getenv\&. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "Key * \fBckdb::elektraParentKey\fP"
.br
.RI "\fIThe parentKey used to access elektraRepo\&. \fP"
.ti -1c
.RI "KeySet * \fBckdb::elektraConfig\fP"
.br
.RI "\fIThe config of the application\&. \fP"
.ti -1c
.RI "KDB * \fBckdb::elektraRepo\fP"
.br
.RI "\fIThe KDB repository to be used to fetch configuration\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Source for the getenv library\&. 


.PP
\fBNote:\fP
.RS 4
there are two necessary bootstrap phases:
.RE
.PP
1\&.) bootstrapping in pre-main phase when no allocation is possible 2\&.) bootstrapping when elektra modules use getenv()
.PP
\fBCopyright:\fP
.RS 4
BSD License (see doc/COPYING or http://www.libelektra.org) 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
