.TH "kdb::tools::SpecReader" 3elektra "Wed Oct 5 2022" "Version 0.9.11" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kdb::tools::SpecReader \- Highlevel interface to build a backend from specification\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <specreader\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "Backends \fBgetBackends\fP ()"
.br
.ti -1c
.RI "void \fBreadSpecification\fP (\fBKeySet\fP const &ks)"
.br
.RI "Reads in a specification\&. "
.ti -1c
.RI "void \fBcheckKey\fP (const \fBKey\fP key)"
.br
.RI "Perform some sanity-checks for keys\&. "
.in -1c
.SH "Detailed Description"
.PP 
Highlevel interface to build a backend from specification\&. 
.SH "Member Function Documentation"
.PP 
.SS "void kdb::tools::SpecReader::checkKey (const \fBKey\fP key)"

.PP
Perform some sanity-checks for keys\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP The key to check\&. 
.RE
.PP
\fBExceptions\fP
.RS 4
\fICommandAbortException\fP If a sanity-check fails\&. 
.RE
.PP

.SS "Backends kdb::tools::SpecReader::getBackends ()\fC [inline]\fP"

.PP
\fBReturns\fP
.RS 4
backends without resolved needs
.RE
.PP
\fBSee also\fP
.RS 4
resolveNeeds() 
.RE
.PP

.SS "void kdb::tools::SpecReader::readSpecification (\fBKeySet\fP const & ks)"

.PP
Reads in a specification\&. Adds plugins using \fBBackendBuilder\fP during that\&.
.PP
\fBParameters\fP
.RS 4
\fIks\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
