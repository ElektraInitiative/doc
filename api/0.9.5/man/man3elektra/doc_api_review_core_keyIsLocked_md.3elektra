.TH "doc_api_review_core_keyIsLocked_md" 3elektra "Mon Apr 12 2021" "Version 0.9.5" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_api_review_core_keyIsLocked_mdkeyIsLocked 
 \- 
.IP "\(bu" 2
start = 2021-02-21 22:15
.IP "\(bu" 2
end = 2021-02-21 22:40
.IP "\(bu" 2
reviewer = Stefan Hanreich stefanhani@gmail.com
.PP
.PP
\fCint keyIsLocked (const Key * key, elektraLockFlags what)\fP
.PP
(bullet points are in order of appearance)
.PP
.IP "\(bu" 2
[x] First line explains briefly what the function does
.IP "\(bu" 2
[ ] Simple example or snippet how to use the function - [ ] add
.IP "\(bu" 2
[ ] Longer description of function containing common use cases - [ ] add better description or reference to \fCkeyLocked()\fP
.IP "\(bu" 2
[x] Description of functions reads nicely
.IP "\(bu" 2
[ ] \fC@pre\fP
.IP "  \(bu" 4
[ ] \fCkey\fP is a valid key
.IP "  \(bu" 4
[ ] \fCwhat\fP contains valid elektraLockFlags
.PP

.IP "\(bu" 2
[ ] \fC@post\fP
.IP "  \(bu" 4
[ ] \fCkey\fP stays unchanged
.PP

.IP "\(bu" 2
[ ] \fC@invariant\fP
.IP "  \(bu" 4
[ ] \fCkey\fP stays a valid key
.PP

.IP "\(bu" 2
[ ] \fC@param\fP for every parameter
.IP "  \(bu" 4
[ ] add
.PP

.IP "\(bu" 2
[ ] \fC@return\fP / \fC@retval\fP
.IP "  \(bu" 4
[ ] change default case to \fC@return\fP
.PP

.IP "\(bu" 2
[ ] \fC@since\fP
.IP "  \(bu" 4
[ ] add
.PP

.IP "\(bu" 2
[x] `\fC\fP
.IP "\(bu" 2
\fC[ ]\fP
.PP
\fBSee also:\fP
.RS 4
`
.IP "  \(bu" 4
[ ] move to bottom
.PP
.RE
.PP

.PP
.PP
.IP "\(bu" 2
Abbreviations used in function names must be defined in the \fBGlossary\fP
.IP "\(bu" 2
[x] Function names should neither be too long, nor too short
.IP "\(bu" 2
[x] Function name should be clear and unambiguous
.IP "\(bu" 2
Abbreviations used in parameter names must be defined in the \fBGlossary\fP
.IP "\(bu" 2
[x] Parameter names should neither be too long, nor too short
.IP "\(bu" 2
[ ] Parameter names should be clear and unambiguous
.IP "  \(bu" 4
[ ] rename what to flags?
.PP

.PP
.PP
(only in PRs)
.PP
.IP "\(bu" 2
\fBSymbol versioning\fP is correct for breaking changes
.IP "\(bu" 2
ABI/API changes are forward-compatible (breaking backwards-compatibility to add additional symbols is fine)
.PP
.PP
.IP "\(bu" 2
[x] Function parameters should use enum types instead of boolean types wherever sensible
.IP "\(bu" 2
[x] Wherever possible, function parameters should be \fCconst\fP
.IP "\(bu" 2
[x] Wherever possible, return types should be \fCconst\fP
.IP "\(bu" 2
[x] Functions should have the least amount of parameters feasible
.PP
.PP
.IP "\(bu" 2
[x] Functions should do exactly one thing
.IP "\(bu" 2
[x] Function name has the appropriate prefix
.IP "\(bu" 2
[ ] Order of signatures in kdb\&.h\&.in is the same as Doxygen
.IP "  \(bu" 4
[ ] move below \fC\fBkeyGetRef()\fP\fP-family of functions
.PP

.IP "\(bu" 2
[x] No functions with similar purpose exist
.PP
.PP
.IP "\(bu" 2
Memory Management should be handled by the function wherever possible
.PP
.PP
.IP "\(bu" 2
[x] Function is easily extensible, e\&.g\&., with flags
.IP "\(bu" 2
[x] Documentation does not impose limits, that would hinder further extensions
.PP
.PP
.IP "\(bu" 2
[x] Function code is fully covered by tests
.IP "\(bu" 2
[ ] All possible error states are covered by tests
.IP "  \(bu" 4
[ ] test for null pointer return value
.PP

.IP "\(bu" 2
[x] All possible enum values are covered by tests
.IP "\(bu" 2
[x] No inconsistencies between tests and documentation
.PP

