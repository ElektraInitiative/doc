.TH "org.libelektra.KeySet" 3elektra "Tue Aug 6 2019" "Version 0.9.0" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
org.libelektra.KeySet \- A keyset holds together a set of keys\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits Iterable< Key >\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBrelease\fP ()"
.br
.RI "Clean-up method to release keyset reference\&. "
.ti -1c
.RI "java\&.util\&.Iterator< \fBKey\fP > \fBiterator\fP ()"
.br
.RI "Iterable interface function\&. "
.ti -1c
.RI "String \fBtoString\fP ()"
.br
.RI "Basic java function that represents object as String\&. "
.ti -1c
.RI "\fBKeySet\fP \fBdup\fP ()"
.br
.RI "Duplicates the key set\&. "
.ti -1c
.RI "int \fBcopy\fP (final \fBKeySet\fP other)"
.br
.RI "Copies key references from other key set\&. "
.ti -1c
.RI "int \fBneedsSync\fP ()"
.br
.RI "Helper function to check if synchronization is necessary\&. "
.ti -1c
.RI "int \fBlength\fP ()"
.br
.RI "Helper function that returns key set size\&. "
.ti -1c
.RI "int \fBappend\fP (final \fBKey\fP k)"
.br
.RI "Helper function to append key to key set\&. "
.ti -1c
.RI "int \fBappend\fP (final \fBKeySet\fP ks)"
.br
.RI "Helper function that appends keys of key set\&. "
.ti -1c
.RI "\fBKeySet\fP \fBcut\fP (final \fBKey\fP cutpoint)"
.br
.RI "Helper function that creates new key set with help of a cut point\&. "
.ti -1c
.RI "\fBKey\fP \fBpop\fP ()"
.br
.RI "Helper function that returns key from key set and also removes it from the set\&. "
.ti -1c
.RI "\fBKey\fP \fBcurrent\fP ()"
.br
.RI "Helper function that returns current key from the key set\&. "
.ti -1c
.RI "\fBKey\fP \fBnext\fP ()"
.br
.RI "Helper function that returns the next key in the key set\&. "
.ti -1c
.RI "int \fBrewind\fP ()"
.br
.RI "Helper function that rewinds the current key set\&. "
.ti -1c
.RI "\fBKey\fP \fBhead\fP ()"
.br
.RI "Helper function that gets the key set head\&. "
.ti -1c
.RI "\fBKey\fP \fBtail\fP ()"
.br
.RI "Helper function that gets the key set tail\&. "
.ti -1c
.RI "int \fBgetCursor\fP ()"
.br
.RI "Helper function that gets the current cursor of the key set\&. "
.ti -1c
.RI "int \fBsetCursor\fP (final int cursor)"
.br
.RI "Helper function that sets the current cursor of the key set\&. "
.ti -1c
.RI "\fBKey\fP \fBat\fP (final int cursor)"
.br
.RI "Helper function that gets the \fBKey\fP at the given cursor position\&. "
.ti -1c
.RI "\fBKey\fP \fBlookup\fP (final \fBKey\fP find, final int options)"
.br
.RI "Helper function to search for a key in the key set\&. "
.ti -1c
.RI "\fBKey\fP \fBlookup\fP (final \fBKey\fP find)"
.br
.RI "Helper function to search for a key in the key set\&. "
.ti -1c
.RI "\fBKey\fP \fBlookup\fP (final String find, final int options)"
.br
.RI "Helper function to search for a key in the key set\&. "
.ti -1c
.RI "\fBKey\fP \fBlookup\fP (final String find)"
.br
.RI "Helper function to search for a key in the key set\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBKeySet\fP \fBcreate\fP ()"
.br
.RI "Basic constructor for key set\&. "
.ti -1c
.RI "static \fBKeySet\fP \fBcreate\fP (final int alloc, final Key\&.\&.\&. args)"
.br
.RI "Basic constructor for key set\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBKeySet\fP (final long p)"
.br
.RI "Helper constructor for duplication by pointer in long format\&. "
.ti -1c
.RI "\fBKeySet\fP (final Pointer p)"
.br
.RI "Helper constructor for duplication by pointer\&. "
.ti -1c
.RI "void \fBfinalize\fP ()  throws Throwable "
.br
.RI "Clean-up method to inform underlying c-library about the release of the keyset reference\&. "
.ti -1c
.RI "Pointer \fBget\fP ()"
.br
.RI "Native pointer used by JNA\&. "
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static \fBKeySet\fP \fBcreate\fP (final int alloc, final Object\&.\&.\&. args)"
.br
.RI "Basic constructor for key set\&. "
.in -1c
.SH "Detailed Description"
.PP 
A keyset holds together a set of keys\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "org\&.libelektra\&.KeySet\&.KeySet (final long p)\fC [inline]\fP, \fC [protected]\fP"

.PP
Helper constructor for duplication by pointer in long format\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP Pointer to another \fBKeySet\fP in long format 
.RE
.PP

.SS "org\&.libelektra\&.KeySet\&.KeySet (final Pointer p)\fC [inline]\fP, \fC [protected]\fP"

.PP
Helper constructor for duplication by pointer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP Pointer to another \fBKeySet\fP 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "int org\&.libelektra\&.KeySet\&.append (final \fBKey\fP k)\fC [inline]\fP"

.PP
Helper function to append key to key set\&. Does nothing if null is provided\&.
.PP
\fBParameters:\fP
.RS 4
\fIk\fP \fBKey\fP to append 
.RE
.PP
\fBReturns:\fP
.RS 4
Index of key in key set; starting from 1, -1 if null was provided 
.RE
.PP

.SS "int org\&.libelektra\&.KeySet\&.append (final \fBKeySet\fP ks)\fC [inline]\fP"

.PP
Helper function that appends keys of key set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIks\fP \fBKey\fP set to append 
.RE
.PP
\fBReturns:\fP
.RS 4
Highest new index of key in key set; starting from 1, -1 if null was provided 
.RE
.PP

.SS "\fBKey\fP org\&.libelektra\&.KeySet\&.at (final int cursor)\fC [inline]\fP"

.PP
Helper function that gets the \fBKey\fP at the given cursor position\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcursor\fP Cursor position used to fetch key; starting from 0 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBKey\fP at given cursor position 
.RE
.PP

.SS "int org\&.libelektra\&.KeySet\&.copy (final \fBKeySet\fP other)\fC [inline]\fP"

.PP
Copies key references from other key set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIother\fP \fBKey\fP set that is used as source 
.RE
.PP
\fBReturns:\fP
.RS 4
1 in case of success, 0 if source was NULL and dest (this) was cleared successfully, -1 in case of an error (null pointer) 
.RE
.PP

.SS "static \fBKeySet\fP org\&.libelektra\&.KeySet\&.create (final int alloc, final Object\&.\&.\&. args)\fC [inline]\fP, \fC [static]\fP, \fC [protected]\fP"

.PP
Basic constructor for key set\&. Example: \fBKeySet\fP keySet = \fBKeySet\&.create\fP(10, \fBKey\&.create\fP('A'), \fBKey\&.create\fP('B'));
.PP
\fBParameters:\fP
.RS 4
\fIalloc\fP Length of key set (key count) to be allocated 
.br
\fIargs\fP List of initial arguments for the key set\&. Example:
.br
 new \fBKey\fP(\&.\&.\&.), new \fBKey\fP(\&.\&.\&.), existing_key_reference, KeySet\&.KS_END 
.RE
.PP
\fBReturns:\fP
.RS 4
New key set with the given initial data 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcreate()\fP 
.RE
.PP

.SS "static \fBKeySet\fP org\&.libelektra\&.KeySet\&.create ()\fC [inline]\fP, \fC [static]\fP"

.PP
Basic constructor for key set\&. 
.PP
\fBReturns:\fP
.RS 4
New key set 
.RE
.PP

.SS "static \fBKeySet\fP org\&.libelektra\&.KeySet\&.create (final int alloc, final Key\&.\&.\&. args)\fC [inline]\fP, \fC [static]\fP"

.PP
Basic constructor for key set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIalloc\fP Length of key set (key count) to be allocated 
.br
\fIargs\fP List of initial keys for the key set\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
New key set with the given initial data 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBcreate()\fP 
.RE
.PP

.SS "\fBKey\fP org\&.libelektra\&.KeySet\&.current ()\fC [inline]\fP"

.PP
Helper function that returns current key from the key set\&. 
.PP
\fBReturns:\fP
.RS 4
Current \fBKey\fP in iteration 
.RE
.PP

.SS "\fBKeySet\fP org\&.libelektra\&.KeySet\&.cut (final \fBKey\fP cutpoint)\fC [inline]\fP"

.PP
Helper function that creates new key set with help of a cut point\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcutpoint\fP \fBKey\fP that is used as cutting point 
.RE
.PP
\fBReturns:\fP
.RS 4
New \fBKeySet\fP containing all keys until the cutting point, this if null was provided 
.RE
.PP

.SS "\fBKeySet\fP org\&.libelektra\&.KeySet\&.dup ()\fC [inline]\fP"

.PP
Duplicates the key set\&. 
.PP
\fBReturns:\fP
.RS 4
New \fBKeySet\fP containing the same key references as this object does 
.RE
.PP

.SS "Pointer org\&.libelektra\&.KeySet\&.get ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Native pointer used by JNA\&. 
.PP
\fBReturns:\fP
.RS 4
Native pointer object used for this key set 
.RE
.PP

.SS "int org\&.libelektra\&.KeySet\&.getCursor ()\fC [inline]\fP"

.PP
Helper function that gets the current cursor of the key set\&. 
.PP
\fBReturns:\fP
.RS 4
Cursor position as integer; initially -1, incremented by \fBnext()\fP 
.RE
.PP

.SS "\fBKey\fP org\&.libelektra\&.KeySet\&.head ()\fC [inline]\fP"

.PP
Helper function that gets the key set head\&. 
.PP
\fBReturns:\fP
.RS 4
First element of the key set 
.RE
.PP

.SS "java\&.util\&.Iterator<\fBKey\fP> org\&.libelektra\&.KeySet\&.iterator ()\fC [inline]\fP"

.PP
Iterable interface function\&. 
.PP
\fBReturns:\fP
.RS 4
Custom \fBKeySetIterator\fP 
.RE
.PP

.SS "int org\&.libelektra\&.KeySet\&.length ()\fC [inline]\fP"

.PP
Helper function that returns key set size\&. 
.PP
\fBReturns:\fP
.RS 4
Size of key set (number of possible keys) 
.RE
.PP

.SS "\fBKey\fP org\&.libelektra\&.KeySet\&.lookup (final \fBKey\fP find, final int options)\fC [inline]\fP"

.PP
Helper function to search for a key in the key set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfind\fP \fBKey\fP used in search 
.br
\fIoptions\fP Custom search options; concatenation of flags 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBKey\fP if search successful, null otherwise 
.RE
.PP

.SS "\fBKey\fP org\&.libelektra\&.KeySet\&.lookup (final \fBKey\fP find)\fC [inline]\fP"

.PP
Helper function to search for a key in the key set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfind\fP \fBKey\fP used in search 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBKey\fP if search successful, null otherwise 
.RE
.PP

.SS "\fBKey\fP org\&.libelektra\&.KeySet\&.lookup (final String find, final int options)\fC [inline]\fP"

.PP
Helper function to search for a key in the key set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfind\fP \fBKey\fP name used in search 
.br
\fIoptions\fP Custom search options; concatenation of flags 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBKey\fP if search successful, null otherwise 
.RE
.PP

.SS "\fBKey\fP org\&.libelektra\&.KeySet\&.lookup (final String find)\fC [inline]\fP"

.PP
Helper function to search for a key in the key set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfind\fP \fBKey\fP name used in search 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBKey\fP if search successful, null otherwise 
.RE
.PP

.SS "int org\&.libelektra\&.KeySet\&.needsSync ()\fC [inline]\fP"

.PP
Helper function to check if synchronization is necessary\&. 
.PP
\fBReturns:\fP
.RS 4
1 if sync is necessary, 0 if no sync is necessary, -1 in case of an error (null key) 
.RE
.PP

.SS "\fBKey\fP org\&.libelektra\&.KeySet\&.next ()\fC [inline]\fP"

.PP
Helper function that returns the next key in the key set\&. 
.PP
\fBReturns:\fP
.RS 4
Next \fBKey\fP in key set 
.RE
.PP

.SS "\fBKey\fP org\&.libelektra\&.KeySet\&.pop ()\fC [inline]\fP"

.PP
Helper function that returns key from key set and also removes it from the set\&. 
.PP
\fBReturns:\fP
.RS 4
First \fBKey\fP in the set 
.RE
.PP

.SS "int org\&.libelektra\&.KeySet\&.rewind ()\fC [inline]\fP"

.PP
Helper function that rewinds the current key set\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.SS "int org\&.libelektra\&.KeySet\&.setCursor (final int cursor)\fC [inline]\fP"

.PP
Helper function that sets the current cursor of the key set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcursor\fP Cursor position as integer 
.RE
.PP
\fBReturns:\fP
.RS 4
1 in case of success 
.RE
.PP

.SS "\fBKey\fP org\&.libelektra\&.KeySet\&.tail ()\fC [inline]\fP"

.PP
Helper function that gets the key set tail\&. 
.PP
\fBReturns:\fP
.RS 4
Last element of the key set 
.RE
.PP

.SS "String org\&.libelektra\&.KeySet\&.toString ()\fC [inline]\fP"

.PP
Basic java function that represents object as String\&. 
.br
 Iterates though all keys in this key set and appends their representation to the output\&. Uses the \fBtoString()\fP function of the \fBKey\fP objects\&.
.PP
\fBReturns:\fP
.RS 4
List of key-value pairs contained in this key set 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
