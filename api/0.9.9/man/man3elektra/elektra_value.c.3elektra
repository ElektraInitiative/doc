.TH "elektra_value.c" 3elektra "Thu Mar 10 2022" "Version 0.9.9" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
elektra_value.c \- Elektra High Level API\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'elektra\&.h'\fP
.br
\fC#include 'elektra/conversion\&.h'\fP
.br
\fC#include 'kdbease\&.h'\fP
.br
\fC#include 'kdbhelper\&.h'\fP
.br
\fC#include 'kdbprivate\&.h'\fP
.br
\fC#include <string\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "Key * \fBelektraFindKey\fP (Elektra *elektra, const char *name, KDBType type)"
.br
.RI "Helper function for code generation\&. "
.ti -1c
.RI "const char * \fBelektraFindReference\fP (Elektra *elektra, const char *name)"
.br
.RI "Resolves the reference stored in a key\&. "
.ti -1c
.RI "KDBType \fBelektraGetType\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Reads the type metadata of a given key\&. "
.ti -1c
.RI "const char * \fBelektraGetRawString\fP (Elektra *elektra, const char *name)"
.br
.RI "Get the raw string value of a key\&. "
.ti -1c
.RI "void \fBelektraSetRawString\fP (Elektra *elektra, const char *name, const char *value, KDBType type, ElektraError **error)"
.br
.RI "Set the raw string value of a key\&. "
.ti -1c
.RI "const char * \fBelektraGetString\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets a string value\&. "
.ti -1c
.RI "kdb_boolean_t \fBelektraGetBoolean\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets a boolean value\&. "
.ti -1c
.RI "kdb_char_t \fBelektraGetChar\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets a char value\&. "
.ti -1c
.RI "kdb_octet_t \fBelektraGetOctet\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets an octet value\&. "
.ti -1c
.RI "kdb_short_t \fBelektraGetShort\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets a short value\&. "
.ti -1c
.RI "kdb_unsigned_short_t \fBelektraGetUnsignedShort\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets a unsigned short value\&. "
.ti -1c
.RI "kdb_long_t \fBelektraGetLong\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets a long value\&. "
.ti -1c
.RI "kdb_unsigned_long_t \fBelektraGetUnsignedLong\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets a unsigned long value\&. "
.ti -1c
.RI "kdb_long_long_t \fBelektraGetLongLong\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets a long long value\&. "
.ti -1c
.RI "kdb_unsigned_long_long_t \fBelektraGetUnsignedLongLong\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets a long long value\&. "
.ti -1c
.RI "kdb_float_t \fBelektraGetFloat\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets a float value\&. "
.ti -1c
.RI "kdb_double_t \fBelektraGetDouble\fP (Elektra *elektra, const char *keyname)"
.br
.RI "Gets a double value\&. "
.ti -1c
.RI "void \fBelektraSetString\fP (Elektra *elektra, const char *keyname, const char *value, ElektraError **error)"
.br
.RI "Sets a string value\&. "
.ti -1c
.RI "void \fBelektraSetBoolean\fP (Elektra *elektra, const char *keyname, kdb_boolean_t value, ElektraError **error)"
.br
.RI "Sets a boolean value\&. "
.ti -1c
.RI "void \fBelektraSetChar\fP (Elektra *elektra, const char *keyname, kdb_char_t value, ElektraError **error)"
.br
.RI "Sets a char value\&. "
.ti -1c
.RI "void \fBelektraSetOctet\fP (Elektra *elektra, const char *keyname, kdb_octet_t value, ElektraError **error)"
.br
.RI "Sets an octet value\&. "
.ti -1c
.RI "void \fBelektraSetShort\fP (Elektra *elektra, const char *keyname, kdb_short_t value, ElektraError **error)"
.br
.RI "Sets a short value\&. "
.ti -1c
.RI "void \fBelektraSetUnsignedShort\fP (Elektra *elektra, const char *keyname, kdb_unsigned_short_t value, ElektraError **error)"
.br
.RI "Sets a unsigned short value\&. "
.ti -1c
.RI "void \fBelektraSetLong\fP (Elektra *elektra, const char *keyname, kdb_long_t value, ElektraError **error)"
.br
.RI "Sets a long value\&. "
.ti -1c
.RI "void \fBelektraSetUnsignedLong\fP (Elektra *elektra, const char *keyname, kdb_unsigned_long_t value, ElektraError **error)"
.br
.RI "Sets a unsigned long value\&. "
.ti -1c
.RI "void \fBelektraSetLongLong\fP (Elektra *elektra, const char *keyname, kdb_long_long_t value, ElektraError **error)"
.br
.RI "Sets a long long value\&. "
.ti -1c
.RI "void \fBelektraSetUnsignedLongLong\fP (Elektra *elektra, const char *keyname, kdb_unsigned_long_long_t value, ElektraError **error)"
.br
.RI "Sets a unsigned long long value\&. "
.ti -1c
.RI "void \fBelektraSetFloat\fP (Elektra *elektra, const char *keyname, kdb_float_t value, ElektraError **error)"
.br
.RI "Sets a float value\&. "
.ti -1c
.RI "void \fBelektraSetDouble\fP (Elektra *elektra, const char *keyname, kdb_double_t value, ElektraError **error)"
.br
.RI "Sets a double value\&. "
.in -1c
.SH "Detailed Description"
.PP 
Elektra High Level API\&. 


.PP
\fBCopyright\fP
.RS 4
BSD License (see doc/LICENSE\&.md or http://www.libelektra.org) 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
