.TH "doc_contrib_api_reviews_core_keyGetUnescapedNameSize_md" 3elektra "Tue May 23 2023" "Version 0.10.0" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_contrib_api_reviews_core_keyGetUnescapedNameSize_md \- keyGetUnescapedNameSize 

.IP "\(bu" 2
start = 2021-03-02 22:00
.IP "\(bu" 2
end = 2021-03-02 22:15
.IP "\(bu" 2
moderator = Stefan Hanreich stefanhani@gmail.com
.PP
.SH "Signature"
.PP
\fCssize_t \fBkeyGetUnescapedNameSize(const Key *key)\fP\fP
.SH "Checklist"
.PP
.SS "Doxygen"
(bullet points are in order of appearance)
.PP
.IP "\(bu" 2
[x] First line explains briefly what the function does
.IP "\(bu" 2
[ ] Simple example or snippet how to use the function 
.br
.IP "  \(bu" 4
[ ] add
.PP

.IP "\(bu" 2
[ ] Longer description of function containing common use cases
.IP "\(bu" 2
[ ] Description of functions reads nicely 
.br
.IP "  \(bu" 4
[ ] return -> Returns the size of the unescaped name, including \&.\&.\&.
.PP

.IP "\(bu" 2
[ ] \fC@pre\fP 
.br
.IP "  \(bu" 4
[ ] add
.PP

.IP "\(bu" 2
[ ] \fC@post\fP 
.br
.IP "  \(bu" 4
[ ] add
.PP

.IP "\(bu" 2
[ ] \fC@invariant\fP 
.br
.IP "  \(bu" 4
[ ] add
.PP

.IP "\(bu" 2
[x] \fC@param\fP for every parameter
.IP "\(bu" 2
[ ] \fC@return\fP / \fC@retval\fP 
.br
.IP "  \(bu" 4
[ ] add \fC@return\fP for base case
.PP

.IP "\(bu" 2
[ ] \fC@since\fP 
.br
.IP "  \(bu" 4
[ ] add
.PP

.IP "\(bu" 2
[ ] \fC@ingroup\fP 
.br
.IP "  \(bu" 4
[ ] add
.PP

.IP "\(bu" 2
[ ] \fC@see\fP 
.br
.IP "  \(bu" 4
[ ] add \fC\fBkeyGetNameSize()\fP\fP 
.br

.IP "  \(bu" 4
[ ] add \fC\fBkeyGetUnescapedName()\fP\fP
.PP

.PP
.SS "Naming"
.IP "\(bu" 2
Abbreviations used in function names must be defined in the \fBGlossary\fP
.IP "\(bu" 2
[x] Function names should neither be too long, nor too short
.IP "\(bu" 2
[x] Function name should be clear and unambiguous
.IP "\(bu" 2
Abbreviations used in parameter names must be defined in the \fBGlossary\fP
.IP "\(bu" 2
[x] Parameter names should neither be too long, nor too short
.IP "\(bu" 2
[x] Parameter names should be clear and unambiguous
.PP
.SS "Compatibility"
(only in PRs)
.PP
.IP "\(bu" 2
\fBSymbol versioning\fP is correct for breaking changes
.IP "\(bu" 2
ABI/API changes are forward-compatible (breaking backwards-compatibility to add additional symbols is fine)
.PP
.SS "Parameter & Return Types"
.IP "\(bu" 2
Function parameters should use enum types instead of boolean types wherever sensible
.IP "\(bu" 2
[x] Wherever possible, function parameters should be \fCconst\fP
.IP "\(bu" 2
[x] Wherever possible, return types should be \fCconst\fP
.IP "\(bu" 2
[x] Functions should have the least amount of parameters feasible
.PP
.SS "Structural Clarity"
.IP "\(bu" 2
[x] Functions should do exactly one thing
.IP "\(bu" 2
[x] Function name has the appropriate prefix
.IP "\(bu" 2
[ ] Order of signatures in kdb\&.h\&.in is the same as Doxygen 
.br
.IP "  \(bu" 4
[ ] Order is mixed up, needs to be lower in Doxygen
.PP

.IP "\(bu" 2
[x] No functions with similar purpose exist
.PP
.SS "Memory Management"
.IP "\(bu" 2
[x] Memory Management should be handled by the function wherever possible
.PP
.SS "Extensibility"
.IP "\(bu" 2
[x] Function is easily extensible, e\&.g\&., with flags
.IP "\(bu" 2
[x] Documentation does not impose limits, that would hinder further extensions
.PP
.SS "Tests"
.IP "\(bu" 2
[ ] Function code is fully covered by tests 
.br
.IP "  \(bu" 4
[x] no explicit calls in tests suite
.PP

.IP "\(bu" 2
[ ] All possible error states are covered by tests 
.br
.IP "  \(bu" 4
[x] no explicit calls in tests suite
.PP

.IP "\(bu" 2
All possible enum values are covered by tests
.IP "\(bu" 2
[ ] No inconsistencies between tests and documentation 
.br
.IP "  \(bu" 4
[x] no explicit calls in tests suite
.PP

.PP
.SH "Summary"
.PP
.SH "Other Issues discovered (unrelated to function)"
.PP

