.TH "org.libelektra.plugin.NativePlugin" 3elektra "Tue May 26 2020" "Version 0.9.2" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
org.libelektra.plugin.NativePlugin \- This class can be used to load native \fBElektra\fP Plugins to be used by Java directly\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBorg\&.libelektra\&.Plugin\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNativePlugin\fP (String pluginName, \fBKey\fP errorKey, \fBKeySet\fP modules)  throws InstallationException 	"
.br
.RI "Constructor for loading an elektra plugin\&. "
.ti -1c
.RI "\fBKeySet\fP \fBgetConfig\fP ()"
.br
.RI "Gets the config which was used to configure the plugin\&. "
.ti -1c
.RI "int \fBopen\fP (\fBKeySet\fP conf, \fBKey\fP errorKey)"
.br
.RI "Calls the open function of the plugin\&. "
.ti -1c
.RI "int \fBkdbOpen\fP (\fBKey\fP errorKey)"
.br
.RI "Opens the session with the KeyDatabase\&. "
.ti -1c
.RI "int \fBclose\fP (\fBKey\fP errorKey)"
.br
.RI "Closes the session with the \fBKey\fP database\&. "
.ti -1c
.RI "int \fBset\fP (\fBKeySet\fP keySet, \fBKey\fP errorKey)  throws KDBException 	"
.br
.RI "Lets the plugin transform the given \fBKeySet\fP\&. "
.ti -1c
.RI "int \fBget\fP (\fBKeySet\fP keySet, \fBKey\fP errorKey)  throws KDBException 	"
.br
.RI "Writes into the given \fBKeySet\fP in the parameter\&. "
.ti -1c
.RI "int \fBerror\fP (\fBKeySet\fP keySet, \fBKey\fP errorKey)"
.br
.RI "Called in case an error happened\&. "
.ti -1c
.RI "String \fBgetName\fP ()"
.br
.RI "Returns the plugin name\&. "
.in -1c
.SH "Detailed Description"
.PP 
This class can be used to load native \fBElektra\fP Plugins to be used by Java directly\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "org\&.libelektra\&.plugin\&.NativePlugin\&.NativePlugin (String pluginName, \fBKey\fP errorKey, \fBKeySet\fP modules) throws InstallationException\fC [inline]\fP"

.PP
Constructor for loading an elektra plugin\&. 
.PP
\fBParameters\fP
.RS 4
\fIpluginName\fP The plugin name 
.br
\fIerrorKey\fP The errorKey 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIInstallationException\fP if the plugin does not exist 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "int org\&.libelektra\&.plugin\&.NativePlugin\&.close (\fBKey\fP errorKey)\fC [inline]\fP"

.PP
Closes the session with the \fBKey\fP database\&. 
.PP
\fBParameters\fP
.RS 4
\fIerrorKey\fP must be a valid key, e\&.g\&. created with \fBKey\&.create()\fP 
.RE
.PP
\fBReturn values\fP
.RS 4
\fI0\fP if success or -1 otherwise 
.RE
.PP

.PP
Implements \fBorg\&.libelektra\&.Plugin\fP\&.
.SS "int org\&.libelektra\&.plugin\&.NativePlugin\&.error (\fBKeySet\fP keySet, \fBKey\fP errorKey)\fC [inline]\fP"

.PP
Called in case an error happened\&. 
.PP
\fBParameters\fP
.RS 4
\fIkeySet\fP The affected \fBKeySet\fP 
.br
\fIerrorKey\fP ust be a valid key, e\&.g\&. created with \fBKey\&.create()\fP and contains error information 
.RE
.PP
\fBReturn values\fP
.RS 4
\fI0\fP if success or -1 otherwise 
.RE
.PP

.PP
Implements \fBorg\&.libelektra\&.Plugin\fP\&.
.SS "int org\&.libelektra\&.plugin\&.NativePlugin\&.get (\fBKeySet\fP keySet, \fBKey\fP errorKey) throws \fBKDBException\fP\fC [inline]\fP"

.PP
Writes into the given \fBKeySet\fP in the parameter\&. 
.PP
\fBParameters\fP
.RS 4
\fIkeySet\fP The \fBKeySet\fP you want returned 
.br
\fIerrorKey\fP must be a valid key, e\&.g\&. created with \fBKey\&.create()\fP 
.RE
.PP
\fBReturn values\fP
.RS 4
\fI0\fP if success or -1 otherwise 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIKDBException\fP if return value was -1 
.RE
.PP

.PP
Implements \fBorg\&.libelektra\&.Plugin\fP\&.
.SS "\fBKeySet\fP org\&.libelektra\&.plugin\&.NativePlugin\&.getConfig ()\fC [inline]\fP"

.PP
Gets the config which was used to configure the plugin\&. 
.PP
\fBReturns\fP
.RS 4
A \fBKeySet\fP containing the configuration of the plugin 
.RE
.PP

.PP
Implements \fBorg\&.libelektra\&.Plugin\fP\&.
.SS "String org\&.libelektra\&.plugin\&.NativePlugin\&.getName ()\fC [inline]\fP"

.PP
Returns the plugin name\&. 
.PP
\fBReturns\fP
.RS 4
plugin name 
.RE
.PP

.PP
Implements \fBorg\&.libelektra\&.Plugin\fP\&.
.SS "int org\&.libelektra\&.plugin\&.NativePlugin\&.kdbOpen (\fBKey\fP errorKey)\fC [inline]\fP"

.PP
Opens the session with the KeyDatabase\&. 
.PP
\fBParameters\fP
.RS 4
\fIerrorKey\fP must be a valid key, e\&.g\&. created with \fBKey\&.create()\fP 
.RE
.PP
\fBReturn values\fP
.RS 4
\fI0\fP if success or -1 otherwise 
.RE
.PP

.SS "int org\&.libelektra\&.plugin\&.NativePlugin\&.open (\fBKeySet\fP conf, \fBKey\fP errorKey)\fC [inline]\fP"

.PP
Calls the open function of the plugin\&. 
.PP
\fBParameters\fP
.RS 4
\fIconf\fP a configuration keyset 
.br
\fIerrorKey\fP a key 
.RE
.PP
\fBReturns\fP
.RS 4
the plugin's return value for open 
.RE
.PP

.PP
Implements \fBorg\&.libelektra\&.Plugin\fP\&.
.SS "int org\&.libelektra\&.plugin\&.NativePlugin\&.set (\fBKeySet\fP keySet, \fBKey\fP errorKey) throws \fBKDBException\fP\fC [inline]\fP"

.PP
Lets the plugin transform the given \fBKeySet\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIkeySet\fP The \fBKeySet\fP to transform 
.br
\fIerrorKey\fP must be a valid key, e\&.g\&. created with \fBKey\&.create()\fP 
.RE
.PP
\fBReturn values\fP
.RS 4
\fI0\fP if success or -1 otherwise 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIKDBException\fP if return value was -1 
.RE
.PP

.PP
Implements \fBorg\&.libelektra\&.Plugin\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
