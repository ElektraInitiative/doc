.TH "md_src_plugins_python_python_dns_README" 3elektra "Tue Mar 14 2023" "Version 0.9.13" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_python_python_dns_README \- Plugin: python 

.IP "\(bu" 2
infos = Information about the python plugin is in keys below
.IP "\(bu" 2
infos/author = Lukas Hartl git@lukashartl.at, Leonard Guelmino e1503940@student.tuwien.ac.at
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/provides = check
.IP "\(bu" 2
infos/status = maintained
.IP "\(bu" 2
infos/placements = postgetstorage presetstorage
.IP "\(bu" 2
infos/description = checks if name is resolvable
.PP
.SH "DNS Python plugin"
.PP
This filter plugin checks if a Key is a valid domain name, i\&.e\&. if the name can be resolved into an IPv4 address\&. The validation takes place whenever the \fCkdb set\fP method is called\&.
.SH "Usage"
.PP
The python plugin requires the configuration parameter \fBscript\fP holding the file path to the python script\&. The mount command looks like
.PP
.PP
.nf
sudo kdb mount file\&.ini /python ni python script=/path/to/dns_plugin\&.py
.fi
.PP
.PP
For the plugin to actually check a certain key, the \fCcheck/dns\fP metakey must be set\&.
.PP
.PP
.nf
sudo kdb meta-set spec:/python/my_hostname check/dns ''
.fi
.PP
.PP
Now each time the key is set, the filter plugin validates the given value\&.
.PP
.PP
.nf
kdb set user:/python/my_hostname www\&.libelektra\&.org
.fi
.PP
 
