.TH "elektra.c" 3elektra "Fri Oct 30 2020" "Version 0.9.3" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
elektra.c \- Elektra High Level API\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'elektra\&.h'\fP
.br
\fC#include 'elektra/conversion\&.h'\fP
.br
\fC#include 'elektra/types\&.h'\fP
.br
\fC#include 'kdberrors\&.h'\fP
.br
\fC#include 'kdbhelper\&.h'\fP
.br
\fC#include 'kdblogger\&.h'\fP
.br
\fC#include 'kdbprivate\&.h'\fP
.br
\fC#include <stdlib\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "Elektra * \fBelektraOpen\fP (const char *application, KeySet *defaults, KeySet *contract, ElektraError **error)"
.br
.RI "Initializes a new Elektra instance\&. "
.ti -1c
.RI "void \fBelektraFatalError\fP (Elektra *elektra, ElektraError *fatalError)"
.br
.RI "Promote an ElektraError to fatal and call the fatal error handler\&. "
.ti -1c
.RI "Key * \fBelektraHelpKey\fP (Elektra *elektra)"
.br
.RI "This function is only intended for use with code-generation\&. "
.ti -1c
.RI "void \fBelektraFatalErrorHandler\fP (Elektra *elektra, ElektraErrorHandler fatalErrorHandler)"
.br
.RI "Sets the fatal error handler that will be called, whenever a fatal error occurs\&. "
.ti -1c
.RI "void \fBelektraClose\fP (Elektra *elektra)"
.br
.RI "Releases all resources used by the given elektra instance\&. "
.in -1c
.SH "Detailed Description"
.PP 
Elektra High Level API\&. 


.PP
\fBCopyright:\fP
.RS 4
BSD License (see doc/LICENSE\&.md or http://www.libelektra.org) 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
