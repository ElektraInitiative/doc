.TH "kdbnotificationinternal.h" 3elektra "Sun May 13 2018" "Version 0.8.23" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kdbnotificationinternal.h \- Elektra-Notification structures and declarations for developing notification and transport plugins\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'kdb\&.h'\fP
.br
\fC#include 'kdbnotification\&.h'\fP
.br
\fC#include 'kdbplugin\&.h'\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef int(* \fBElektraNotificationPluginRegisterInt\fP) (Plugin *handle, Key *key, int *variable)"
.br
.RI "Subscribe for automatic updates to a given integer variable when the given key value is changed\&. "
.ti -1c
.RI "typedef int(* \fBElektraNotificationPluginRegisterCallback\fP) (Plugin *handle, Key *key, \fBElektraNotificationChangeCallback\fP callback)"
.br
.RI "Subscribe for updates via callback when a given key value is changed\&. "
.ti -1c
.RI "typedef struct _ElektraNotificationCallbackContext \fBElektraNotificationCallbackContext\fP"
.br
.RI "Context for notification callbacks\&. "
.ti -1c
.RI "typedef void(* \fBElektraNotificationCallback\fP) (Key *key, \fBElektraNotificationCallbackContext\fP *context)"
.br
.RI "Notify notification library of changes to a key\&. "
.ti -1c
.RI "typedef void(* \fBElektraNotificationOpenNotification\fP) (Plugin *handle, KeySet *parameters)"
.br
.RI "Initialize plugin's notification capabilities\&. "
.ti -1c
.RI "typedef void(* \fBElektraNotificationCloseNotification\fP) (Plugin *handle, KeySet *parameters)"
.br
.RI "Teardown plugin's notification capabilities\&. "
.in -1c
.SH "Detailed Description"
.PP 
Elektra-Notification structures and declarations for developing notification and transport plugins\&. 

Only used by elektra-notification library, notification plugins (e\&.g\&. internalnotification) and transport plugins\&.
.PP
\fBCopyright:\fP
.RS 4
BSD License (see LICENSE\&.md or https://www.libelektra.org) 
.RE
.PP

.SH "Typedef Documentation"
.PP 
.SS "typedef void(* ElektraNotificationCallback) (Key *key, \fBElektraNotificationCallbackContext\fP *context)"

.PP
Notify notification library of changes to a key\&. This callback is passed by \fCelektraNotificationOpen\fP to plugins exporting a \fCopenNotification\fP function\&.
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP changed key 
.br
\fIcontext\fP context passed by ElektraNotificationOpenNotification 
.RE
.PP

.SS "typedef void(* ElektraNotificationCloseNotification) (Plugin *handle, KeySet *parameters)"

.PP
Teardown plugin's notification capabilities\&. Exported as 'closeNotification' by transport plugins\&.
.PP
\fBParameters:\fP
.RS 4
\fIhandle\fP plugin handle 
.br
\fIparameters\fP unused 
.RE
.PP

.SS "typedef void(* ElektraNotificationOpenNotification) (Plugin *handle, KeySet *parameters)"

.PP
Initialize plugin's notification capabilities\&. Exported as 'openNotification' by transport plugins\&.
.PP
\fBParameters:\fP
.RS 4
\fIhandle\fP plugin handle 
.br
\fIparameters\fP contains the keys '/callback' (ElektraNotificationCallback * ) and '/context' (ElektraNotificationCallbackContext *)\&. 
.RE
.PP

.SS "typedef int(* ElektraNotificationPluginRegisterCallback) (Plugin *handle, Key *key, \fBElektraNotificationChangeCallback\fP callback)"

.PP
Subscribe for updates via callback when a given key value is changed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIhandle\fP plugin handle 
.br
\fIkey\fP key to watch for changes 
.br
\fIcallback\fP callback function
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI1\fP on success 
.br
\fI0\fP on failure 
.RE
.PP

.SS "typedef int(* ElektraNotificationPluginRegisterInt) (Plugin *handle, Key *key, int *variable)"

.PP
Subscribe for automatic updates to a given integer variable when the given key value is changed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIhandle\fP plugin handle 
.br
\fIkey\fP key to watch for changes 
.br
\fIvariable\fP integer variable
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI1\fP on success 
.br
\fI0\fP on failure 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
