.TH "md_src_plugins_filecheck_README" 3elektra "Mon Jun 7 2021" "Version 0.9.6" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_filecheck_README \- Plugin: filecheck 

.IP "\(bu" 2
infos = Information about the filecheck plugin is in keys below
.IP "\(bu" 2
infos/author = Thomas Waser thomas.waser@libelektra.org
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/provides =
.IP "\(bu" 2
infos/needs =
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = pregetstorage precommit
.IP "\(bu" 2
infos/status = maintained unittest tested libc configurable nodoc
.IP "\(bu" 2
infos/metadata =
.IP "\(bu" 2
infos/description = validates files (e\&.g\&. encoding)
.PP
.SH "Introduction"
.PP
The filecheck plugin validates files\&. It tests: encoding, lineendings, BOM, printable characters and null bytes\&.
.SH "Installation"
.PP
See \fBinstallation\fP\&. The package is called \fClibelektra5-extra\fP\&.
.SH "Configuration"
.PP
\fCcheck/lineending\fP \fCvalid/lineending\fP When the \fCcheck/lineending\fP key is present, the plugin checks the file for consistent line endings\&. If you want to validate for a specific line ending you can supply it with the \fCvalid/lineending\fP key\&. Valid values are: \fCCR\fP, \fCLF\fP, \fCCRLF\fP, \fCLFCR\fP\&.
.PP
\fCcheck/encoding\fP \fCvalid/encoding\fP When the \fCcheckEncoding\fP key is present, the plugin validates the file encoding supplied by the key \fCencoding\fP, or, if not present, defaults to \fCUTF-8\fP
.PP
\fCreject/null\fP When the \fCreject/null\fP key is present, the plugin rejects the file if a NULL-Byte is found\&.
.PP
\fCreject/bom\fP When the \fCreject/bom\fP key is present, the plugin rejects the file if any BOM markers are found\&.
.PP
\fCreject/unprintable\fP When the \fCreject/unprintable\fP key is preset, the plugin rejects the file if an unprintable character is present (except \fC\\r\fP and \fC\\n\fP)\&. 
