.TH "md_src_libs_README" 3elektra "Sat Sep 17 2016" "Version 0.8.18" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_libs_README \- elektra-libs(7) -- libs overview 
Since \fB0\&.8\&.15\fP \fBlibelektra\fP is split in following libraries:
.PP
Overview of Libraries
.PP
.SS "Loader"
.PP
\fBloader\fP contains source files that implement the plugin loader functionality\&. The files are linked to \fBlibelektra\fP\&.
.PP
.SS "Libease"
.PP
.PP
.nf
libelektra-ease.so
.fi
.PP
.PP
\fBlibease\fP contains data-structure operations on top of libcore which do not depend on internals\&. Applications and plugins can choose to not link against it if they want to stay minimal\&.
.PP
.SS "Libplugin"
.PP
.PP
.nf
libelektra-plugin.so
.fi
.PP
.PP
\fBlibplugin\fP contains elektraPlugin* symbols and plugins should link against it\&.
.PP
.SS "Libproposal"
.PP
.PP
.nf
libelektra-proposal.so
.fi
.PP
.PP
\fBlibproposal\fP contains functions that are proposed for libcore\&. Depends on internas of libcore and as such must always fit to the exact same version\&.
.PP
.SS "Libmeta"
.PP
.PP
.nf
libelektra-meta.so
.fi
.PP
.PP
\fClibmeta\fP contains meta data operations as described in \fCMETADATA\&.ini\fP\&. Will be code-generated in the future, so methods should be mechanical reflections of the contents in \fCMETADATA\&.ini\fP\&.
.PP
.SS "Libcore"
.PP
.PP
.nf
libelektra-core.so
<kdbhelper.h>
<kdb.h> (key* and ks*)
.fi
.PP
.PP
Contains the fundamental data-structures every participant of Elektra needs to link against\&. It should be the only part that access the internal data structures\&.
.PP
.SS "Libtools"
.PP
\fBlibtools\fP is a high-level C++ shared-code for tools\&. It includes:
.PP
.IP "\(bu" 2
plugin interface
.IP "\(bu" 2
backend interface
.IP "\(bu" 2
3-way merge 
.PP

