.TH "md_src_plugins_mozprefs_autoconfig_README" 3elektra "Sun Jul 10 2022" "Version 0.9.10" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_mozprefs_autoconfig_README \- Plugin: mozprefs 

.SH "Introduction"
.PP
This file explains how Firefox preferences can be manipulated at run-time using Elektraâ€™s intercept open and a custom autoconfig script\&.
.SH "Basics"
.PP
\fCkdb configure-firefox -s\fP will configure everything needed to get started\&.
.SS "Files"
.IP "\(bu" 2
\fC/usr/lib/firefox\fP / \fC/usr/lib/firefox-esr\fP
.IP "  \(bu" 4
\fCdefaults/pref/autoconfig\&.js\fP Loads \fCelektra\&.cfg\fP
.PP
``` pref('general\&.config\&.filename', 'elektra\&.cfg'); pref('general\&.config\&.obscure_value', 0); ```
.IP "  \(bu" 4
\fCelektra\&.cfg\fP Contains the autoconfig code
.PP

.IP "\(bu" 2
\fC~/\&.mozilla/firefox/<profile>/prefs\&.js\fP Contains the user preferences\&. The configure-firefox script will append the config for our autoconfig script:
.PP
.PP
.PP
.nf
user_pref("elektra\&.config\&.file", "/tmp/imnotreal\&.js");
user_pref("elektra\&.config\&.reload_trigger_port", 65432);
.fi
.PP
.PP
Every time the string \fCreload\fP is send to localhost:\fCelektra\&.config\&.reload_trigger_port\fP the autoconfig script will import the preferences from \fCelektra\&.config\&.file\fP 
.br
 \fCelektry\&.config\&.file\fP contains the name of the dummy file for \fCintercept open\fP\&. \fCopen\fP calls to this file will be intercepted and the content generated by \fCintercept open\fP
.SS "Setting Preferences"
.SS "Guided Setup"
Running \fCkdb configure-firefox -a\fP provides a guided setup for adding http_proxy and homepage preferences\&.
.PP
.PP
.nf
% kdb configure-firefox -a
Add new preferences
Config Setup:

1) Proxy
2) Homepage
0) Exit
1

Setting up HTTP Proxy
1) lock
2) default
3) user
0) Exit
1

Proxy Type
0) No Proxy
1) Manual Setup
2) PAC
4) Auto-detect
5) System Settings
1

Set string to 1
Host/IP: 127\&.0\&.0\&.1
Port: 8080
Setting lockPref HTTP Proxy to 127\&.0\&.0\&.1:8080
.fi
.PP
.SS "Manual Setup"
This example shows how to manually setup a preferences\&. It's equivalent to the example shown above in the \fCGuided setup\fP
.PP
.PP
.nf
kdb meta-set user:/prefs/lock/network/proxy/type type integer
kdb set user:/prefs/lock/network/proxy/type 1
kdb meta-set user:/prefs/lock/network/proxy/http type string
kdb set user:/prefs/lock/network/proxy/http 127\&.0\&.0\&.1
kdb meta-set user:/prefs/lock/network/proxy/http_port type integer
kdb set user:/prefs/lock/network/proxy/http_port 8080
.fi
.PP
.SS "Test Setup"
Running \fCkdb configure-firefox -t\fP will set up some test values\&.
.PP
.PP
.nf
kdb export /preload
#> [open]
#> \/tmp\/imnotreal\&.js =
#> \/tmp\/imnotreal\&.js/generate = user:/prefs
#> \/tmp\/imnotreal\&.js/generate/plugin = mozprefs

kdb export user:/prefs
#> [lock/a/lock]
#> 1 = lock1
#> 2 = lock2
#> [pref/a/default]
#> 1 = 1
#> 2 = 2
#> [user:/a/user]
#> f = false
#> t = true

kdb export user:/prefs mozprefs
#> lockPref("a\&.lock\&.1", "lock1");
#> lockPref("a\&.lock\&.2", "lock2");
#> pref("a\&.default\&.1", 1);
#> pref("a\&.default\&.2", 2);
#> user_pref("a\&.user\&.f", false);
#> user_pref("a\&.user\&.t", true);
.fi
.PP
.PP
.PP
.nf
kdb elektrify-open firefox-esr "about:config"
.fi
.PP
.PP
.PP
.PP
.nf
kdb meta-set user:/prefs/lock/a/lock/3 type boolean
kdb set user:/prefs/lock/a/lock/3 true
kdb export user:/prefs
#> [lock/a/lock]
#> 1 = lock1
#> 2 = lock2
#> 3 = true
#> [pref/a/default]
#> 1 = 1
#> 2 = 2
#> [user:/a/user]
#> f = false
#> t = true
.fi
.PP
.PP
.SH "Limitations"
.PP
Changing locked values doesn't work without restarting\&. 
