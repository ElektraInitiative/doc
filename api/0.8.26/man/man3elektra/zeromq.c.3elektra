.TH "zeromq.c" 3elektra "Tue Feb 26 2019" "Version 0.8.26" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
zeromq.c \- I/O Adapter for D-Bus\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <kdbassert\&.h>\fP
.br
\fC#include <kdbhelper\&.h>\fP
.br
\fC#include <kdbio/adapters/zeromq\&.h>\fP
.br
\fC#include <kdblogger\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBElektraIoAdapterZeroMqHandle\fP * \fBelektraIoAdapterZeroMqAttach\fP (void *socket, \fBElektraIoInterface\fP *ioBinding, \fBElektraIoAdapterZeroMqCallbackType\fP type, \fBElektraIoAdapterZeroMqCallback\fP callback, void *context)"
.br
.RI "Attach to ZeroMq socket\&. "
.ti -1c
.RI "void \fBelektraIoAdapterZeroMqSetContext\fP (\fBElektraIoAdapterZeroMqHandle\fP *handle, void *context)"
.br
.RI "Set the callback context for a ZeroMq adapter handle\&. "
.ti -1c
.RI "int \fBelektraIoAdapterZeroMqDetach\fP (\fBElektraIoAdapterZeroMqHandle\fP *handle)"
.br
.RI "Remove ZeroMq socket from I/O binding\&. "
.in -1c
.SH "Detailed Description"
.PP 
I/O Adapter for D-Bus\&. 


.PP
\fBCopyright:\fP
.RS 4
BSD License (see LICENSE\&.md or https://www.libelektra.org) 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "\fBElektraIoAdapterZeroMqHandle\fP* elektraIoAdapterZeroMqAttach (void * socket, \fBElektraIoInterface\fP * ioBinding, \fBElektraIoAdapterZeroMqCallbackType\fP type, \fBElektraIoAdapterZeroMqCallback\fP callback, void * context)"

.PP
Attach to ZeroMq socket\&. The callback is called whenever socket is readable or writable (depending on type) and data can be processed\&. The callback should not do blocking calls (e\&.g\&. use ZMQ_DONTWAIT for zmq_*recv())\&. Since ZeroMq guarantees that multipart messages arrive at once, data will be available\&. New adapter instances are enabled\&.
.PP
\fBParameters:\fP
.RS 4
\fIsocket\fP ZeroMq socket 
.br
\fIioBinding\fP I/O binding 
.br
\fItype\fP callback type (
.RE
.PP
\fBSee also:\fP
.RS 4
\fBElektraIoAdapterZeroMqCallbackType\fP) 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcallback\fP callback 
.br
\fIcontext\fP callback context (gets passed to callback) 
.RE
.PP
\fBReturns:\fP
.RS 4
handle to use with elektraIoZeroMqAdapterDetach() or NULL on error 
.RE
.PP

.SS "int elektraIoAdapterZeroMqDetach (\fBElektraIoAdapterZeroMqHandle\fP * handle)"

.PP
Remove ZeroMq socket from I/O binding\&. This function frees the passed handle\&.
.PP
\fBParameters:\fP
.RS 4
\fIhandle\fP adapter handle 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI1\fP on success 
.br
\fI0\fP on error 
.RE
.PP

.SS "void elektraIoAdapterZeroMqSetContext (\fBElektraIoAdapterZeroMqHandle\fP * handle, void * context)"

.PP
Set the callback context for a ZeroMq adapter handle\&. The previous context is replaced and not freed\&.
.PP
\fBParameters:\fP
.RS 4
\fIhandle\fP adapter handle 
.br
\fIcontext\fP new callback context 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
