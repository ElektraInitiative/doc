.TH "kdbnotificationinternal.h" 3elektra "Tue Mar 14 2023" "Version 0.9.13" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kdbnotificationinternal.h \- Elektra-Notification structures and declarations for developing notification and transport plugins\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'kdb\&.h'\fP
.br
\fC#include 'kdbnotification\&.h'\fP
.br
\fC#include 'kdbplugin\&.h'\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef int(* \fBElektraNotificationPluginRegisterCallback\fP) (Plugin *handle, Key *key, \fBElektraNotificationChangeCallback\fP callback, void *context)"
.br
.RI "Subscribe for updates via callback when a given key value is changed\&. "
.ti -1c
.RI "typedef int(* \fBElektraNotificationPluginRegisterCallbackSameOrBelow\fP) (Plugin *handle, Key *key, \fBElektraNotificationChangeCallback\fP callback, void *context)"
.br
.RI "Subscribe for updates via callback when a given key or a key below is changed\&. "
.ti -1c
.RI "typedef void(* \fBElektraNotificationSetConversionErrorCallback\fP) (Plugin *handle, \fBElektraNotificationConversionErrorCallback\fP callback, void *context)"
.br
.RI "Allow setting a callback that is called when a value conversion failed\&. "
.ti -1c
.RI "typedef struct _ElektraNotificationCallbackContext \fBElektraNotificationCallbackContext\fP"
.br
.RI "Context for notification callbacks\&. "
.ti -1c
.RI "typedef void(* \fBElektraNotificationCallback\fP) (Key *key, \fBElektraNotificationCallbackContext\fP *context)"
.br
.RI "Notify notification library of changes to a key\&. "
.ti -1c
.RI "typedef void(* \fBElektraNotificationKdbUpdate\fP) (KDB *kdb, Key *changedKey)"
.br
.RI "Used by notification plugins to get values from the key database\&. "
.in -1c
.SH "Detailed Description"
.PP 
Elektra-Notification structures and declarations for developing notification and transport plugins\&. 

Only available in Elektra's source\&.
.PP
Only used by elektra-notification library, notification plugins (e\&.g\&. internalnotification) and transport plugins\&.
.PP
\fBCopyright\fP
.RS 4
BSD License (see LICENSE\&.md or https://www.libelektra.org) 
.RE
.PP

.SH "Typedef Documentation"
.PP 
.SS "typedef void(* ElektraNotificationCallback) (Key *key, \fBElektraNotificationCallbackContext\fP *context)"

.PP
Notify notification library of changes to a key\&. This callback is provided by the \fCinternalnotification\fP plugin and for use by notification transport plugins\&.
.PP
\fBParameters\fP
.RS 4
\fIkey\fP changed key 
.br
\fIcontext\fP additional data 
.RE
.PP

.SS "typedef void(* ElektraNotificationKdbUpdate) (KDB *kdb, Key *changedKey)"

.PP
Used by notification plugins to get values from the key database\&. 
.PP
\fBParameters\fP
.RS 4
\fIkdb\fP kdb handle 
.br
\fIchangedKey\fP which key was updated 
.RE
.PP

.SS "typedef int(* ElektraNotificationPluginRegisterCallback) (Plugin *handle, Key *key, \fBElektraNotificationChangeCallback\fP callback, void *context)"

.PP
Subscribe for updates via callback when a given key value is changed\&. Exported as 'registerCallback' by notification plugins\&.
.PP
\fBParameters\fP
.RS 4
\fIhandle\fP plugin handle 
.br
\fIkey\fP key to watch for changes 
.br
\fIcallback\fP callback function 
.br
\fIcontext\fP user supplied context passed to callback function
.RE
.PP
\fBReturn values\fP
.RS 4
\fI1\fP on success 
.br
\fI0\fP on failure 
.RE
.PP

.SS "typedef int(* ElektraNotificationPluginRegisterCallbackSameOrBelow) (Plugin *handle, Key *key, \fBElektraNotificationChangeCallback\fP callback, void *context)"

.PP
Subscribe for updates via callback when a given key or a key below is changed\&. Exported as 'registerCallbackSameOrBelow' by notification plugins\&.
.PP
\fBParameters\fP
.RS 4
\fIhandle\fP plugin handle 
.br
\fIkey\fP key to watch for changes 
.br
\fIcallback\fP callback function 
.br
\fIcontext\fP user supplied context passed to callback function
.RE
.PP
\fBReturn values\fP
.RS 4
\fI1\fP on success 
.br
\fI0\fP on failure 
.RE
.PP

.SS "typedef void(* ElektraNotificationSetConversionErrorCallback) (Plugin *handle, \fBElektraNotificationConversionErrorCallback\fP callback, void *context)"

.PP
Allow setting a callback that is called when a value conversion failed\&. Exported as 'setConversionErrorCallback' notification plugins\&.
.PP
\fBParameters\fP
.RS 4
\fIkdb\fP kdb handle 
.br
\fIcallback\fP callback 
.br
\fIcontext\fP context 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
