.TH "org.libelektra.exception.KDBException" 3elektra "Tue Nov 26 2019" "Version 0.9.1" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
org.libelektra.exception.KDBException \- This exception wraps \fBElektra\fP errors into the corresponding Java Exceptions\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits Exception\&.
.PP
Inherited by org\&.libelektra\&.exception\&.ConflictingStateException, org\&.libelektra\&.exception\&.PermanentException, and org\&.libelektra\&.exception\&.ValidationException\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBKDBException\fP (final \fBKey\fP k)"
.br
.RI "\fBKDBException\fP which holds the errorKey\&. "
.ti -1c
.RI "\fBKey\fP \fBgetErrorKey\fP ()"
.br
.RI "Gets the errorKey from \fBElektra\fP\&. "
.ti -1c
.RI "String \fBgetErrorNumber\fP ()"
.br
.RI "Gets the errorNumber from \fBElektra\fP\&. "
.ti -1c
.RI "String \fBgetConfigFile\fP ()"
.br
.RI "Returns the affected configuration file of the error\&. "
.ti -1c
.RI "String \fBgetMountpoint\fP ()"
.br
.RI "Returns the mountpoint of the configuration\&. "
.ti -1c
.RI "String \fBgetDebugInformation\fP ()"
.br
.RI "Prints \fBElektra\fP specific debug information in the form of 'At: file:line'\&. "
.ti -1c
.RI "String \fBgetModule\fP ()"
.br
.RI "Returns the module which has thrown the error\&. "
.ti -1c
.RI "String \fBgetLocalizedMessage\fP ()"
.br
.ti -1c
.RI "String \fBgetReason\fP ()"
.br
.RI "Returns the error reason which is written to the \fCerror/reason\fP metakey of the errorkey\&. "
.ti -1c
.RI "String \fBgetMessage\fP ()"
.br
.RI "\fBgetMessage()\fP returns the thrown \fBElektra\fP error in the same format as it would be printed in the terminal "
.ti -1c
.RI "boolean \fBhasWarnings\fP ()"
.br
.RI "If an error occurred it may also has important warnings which caused the error\&. "
.ti -1c
.RI "Collection< WarningEntry > \fBgetWarnings\fP ()"
.br
.RI "Returns the warnings collection\&. "
.in -1c
.SH "Detailed Description"
.PP 
This exception wraps \fBElektra\fP errors into the corresponding Java Exceptions\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "org\&.libelektra\&.exception\&.KDBException\&.KDBException (final \fBKey\fP k)\fC [inline]\fP"

.PP
\fBKDBException\fP which holds the errorKey\&. 
.PP
\fBParameters:\fP
.RS 4
\fIk\fP The errorKey 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "String org\&.libelektra\&.exception\&.KDBException\&.getConfigFile ()\fC [inline]\fP"

.PP
Returns the affected configuration file of the error\&. It empty returns the parents \fBKey\fP name
.PP
\fBReturns:\fP
.RS 4
either the configuration file or if empty the parent key name 
.RE
.PP

.SS "String org\&.libelektra\&.exception\&.KDBException\&.getDebugInformation ()\fC [inline]\fP"

.PP
Prints \fBElektra\fP specific debug information in the form of 'At: file:line'\&. 
.PP
\fBReturns:\fP
.RS 4
\fBElektra\fP specific debug information in the form of 'At: file:line' 
.RE
.PP

.SS "\fBKey\fP org\&.libelektra\&.exception\&.KDBException\&.getErrorKey ()\fC [inline]\fP"

.PP
Gets the errorKey from \fBElektra\fP\&. 
.PP
\fBReturns:\fP
.RS 4
ErrorKey from \fBElektra\fP 
.RE
.PP

.SS "String org\&.libelektra\&.exception\&.KDBException\&.getErrorNumber ()\fC [inline]\fP"

.PP
Gets the errorNumber from \fBElektra\fP\&. 
.PP
\fBReturns:\fP
.RS 4
ErrorNumber from \fBElektra\fP 
.RE
.PP

.SS "String org\&.libelektra\&.exception\&.KDBException\&.getLocalizedMessage ()\fC [inline]\fP"

.PP
\fBSee also:\fP
.RS 4
this\&.getMessage() 
.RE
.PP

.SS "String org\&.libelektra\&.exception\&.KDBException\&.getMessage ()\fC [inline]\fP"

.PP
\fBgetMessage()\fP returns the thrown \fBElektra\fP error in the same format as it would be printed in the terminal 
.PP
\fBReturns:\fP
.RS 4
The complete error information in a String with configfile, moutpoint and debuginformation 
.RE
.PP

.SS "String org\&.libelektra\&.exception\&.KDBException\&.getModule ()\fC [inline]\fP"

.PP
Returns the module which has thrown the error\&. 
.PP
\fBReturns:\fP
.RS 4
the module which has thrown the error 
.RE
.PP

.SS "String org\&.libelektra\&.exception\&.KDBException\&.getMountpoint ()\fC [inline]\fP"

.PP
Returns the mountpoint of the configuration\&. 
.PP
\fBReturns:\fP
.RS 4
the mountpoint of the configuration 
.RE
.PP

.SS "String org\&.libelektra\&.exception\&.KDBException\&.getReason ()\fC [inline]\fP"

.PP
Returns the error reason which is written to the \fCerror/reason\fP metakey of the errorkey\&. 
.PP
\fBReturns:\fP
.RS 4
The reason for the error 
.RE
.PP

.SS "Collection<WarningEntry> org\&.libelektra\&.exception\&.KDBException\&.getWarnings ()\fC [inline]\fP"

.PP
Returns the warnings collection\&. 
.PP
\fBReturns:\fP
.RS 4
the warnings collection 
.RE
.PP

.SS "boolean org\&.libelektra\&.exception\&.KDBException\&.hasWarnings ()\fC [inline]\fP"

.PP
If an error occurred it may also has important warnings which caused the error\&. This method checks if they are available
.PP
\fBReturns:\fP
.RS 4
true if additional warnings were emitted 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
