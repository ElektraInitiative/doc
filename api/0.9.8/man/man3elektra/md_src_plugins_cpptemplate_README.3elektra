.TH "md_src_plugins_cpptemplate_README" 3elektra "Mon Oct 4 2021" "Version 0.9.8" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_cpptemplate_README \- Plugin: cpptemplate 

.IP "\(bu" 2
infos = Information about the cpptemplate plugin is in keys below
.IP "\(bu" 2
infos/author = Author Name elektra@libelektra.org
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/needs =
.IP "\(bu" 2
infos/provides = storage/info
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = getstorage
.IP "\(bu" 2
infos/status = maintained unittest nodep experimental nodoc concept
.IP "\(bu" 2
infos/metadata =
.IP "\(bu" 2
infos/description = A template for C++ based plugins
.PP
.SH "CPP Template"
.PP
.SS "Introduction"
Please use the script \fBcopy-template\fP to create a new C++ plugin based on this template:
.PP
.PP
.nf
scripts/dev/copy-template -p pluginname
.fi
.PP
.PP
\&. For more information please take a look \fBhere\fP
.SS "Installation"
See \fBinstallation\fP\&. The package is called \fClibelektra5-experimental\fP\&.
.SS "Example"
.PP
.nf
sudo kdb mount -R noresolver none user:/tests/cpptemplate cpptemplate some=thing config=value

# This example plugin adds configuration values at the mount point
kdb ls user:/tests/cpptemplate
#> user:/tests/cpptemplate/config
#> user:/tests/cpptemplate/path
#> user:/tests/cpptemplate/some

kdb get user:/tests/cpptemplate/config
#> value

kdb get user:/tests/cpptemplate/path
#> none

sudo kdb umount user:/tests/cpptemplate
.fi
.PP
 
