.TH "md_src_plugins_yawn_README" 3elektra "Tue Aug 6 2019" "Version 0.9.0" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_yawn_READMEPlugin: yawn 
 \- 
.IP "\(bu" 2
infos = Information about the yawn plugin is in keys below
.IP "\(bu" 2
infos/author = René Schwaiger sanssecours@me.com
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/needs = directoryvalue yamlsmith
.IP "\(bu" 2
infos/provides = storage/yaml
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = getstorage
.IP "\(bu" 2
infos/status = maintained unittest preview experimental unfinished nodoc concept discouraged
.IP "\(bu" 2
infos/metadata =
.IP "\(bu" 2
infos/description = This storage plugin uses an Earley parser to read YAML files
.PP
.SH "YAwn"
.PP
.SS "Introduction"
.PP
This plugin uses \fCYAEP\fP to parse \fCYAML\fP data\&.
.PP
.SS "Dependencies"
.PP
This plugin requires \fCYAEP\fP\&.
.PP
.SS "Examples"
.PP
.SS "Mappings"
.PP
.PP
.nf
# Mount plugin
sudo kdb mount config\&.yaml user/tests/yawn yawn

# Set and retrieve some basic values
kdb set user/tests/yawn 'is obviously a move introduced in Generation III of Pokemon' # Source: Bulbapedia
kdb set user/tests/yawn/ing 'is something similar'

kdb get user/tests/yawn/
#> is obviously a move introduced in Generation III of Pokemon
kdb get user/tests/yawn/ing
#> is something similar

kdb ls user/tests/yawn
#> user/tests/yawn
#> user/tests/yawn/ing

# Undo modifications
kdb rm -r user/tests/yawn
sudo kdb umount user/tests/yawn
.fi
.PP
.PP
.SS "Arrays"
.PP
.PP
.nf
# Mount plugin
sudo kdb mount config\&.yaml user/tests/yawn yawn

kdb set user/tests/yawn/movies
kdb set user/tests/yawn/movies/#0 'YAwn I: Time to Wake Up'
kdb set user/tests/yawn/movies/#1 'YAwn II: The Awakening'
kdb set user/tests/yawn/movies/#2 'YAwn III: The Sleepover'
kdb set user/tests/yawn/movies/#3 'YAwn IV: YAwn Again'

# Retrieve last array index
kdb getmeta user/tests/yawn/movies array
#> #3

kdb get user/tests/yawn/movies/#1
#> YAwn II: The Awakening

# Undo modifications
kdb rm -r user/tests/yawn
sudo kdb umount user/tests/yawn
.fi
.PP
.PP
.SS "Boolean Values"
.PP
``` 
.SH "Mount plugin"
.PP
.PP
sudo kdb mount config\&.yaml user/tests/yawn yawn
.PP
.SH "Manually add a boolean value to the database"
.PP
.PP
printf 'bool: true' > \fCkdb file user/tests/yawn\fP
.PP
.SH "Elektra stores boolean values as \fC0\fP and \fC1\fP"
.PP
.PP
kdb get user/tests/yawn/bool #> 1
.PP
.SH "Undo modifications to the key database"
.PP
.PP
kdb rm -r user/tests/yawn sudo kdb umount user/tests/yawn 
.PP
.nf
### Error Messages

.fi
.PP
 
.SH "Mount plugin"
.PP
.PP
sudo kdb mount config\&.yaml user/tests/yawn yawn
.PP
.SH "Manually add data containing syntax errors"
.PP
.PP
printf -- 'Brutus: 
.br
' > \fCkdb file user/tests/yawn\fP printf -- '- Burst
.br
' >> \fCkdb file user/tests/yawn\fP # Incorrect indentation printf -- ' Holon : Anamnesis' >> \fCkdb file user/tests/yawn\fP # Either incorrect indentation or line above should be removed
.PP
.SH "Try to retrieve data"
.PP
.PP
kdb ls user/tests/yawn 
.SH "RET: 5"
.PP
.PP
.SH "Let us look at the error message more closely\&."
.PP
.PP
.SH "Since the location of \fCconfig\&.yaml\fP depends on the current user and OS,"
.PP
.PP
.SH "we store the text before \fCconfig\&.yaml\fP as \fCuser/tests/error/prefix\fP\&."
.PP
.PP
kdb set user/tests/error '$(2>&1 kdb ls user/tests/yawn)' kdb set user/tests/error/prefix '$(kdb get user/tests/error | grep 'config\&.yaml' | head -1 | sed -E 's/(\&.*)config\&.yaml\&.*/\\1/')' 
.SH "We also store the length of the prefix, so we can remove it from every"
.PP
.PP
.SH "line of the error message\&."
.PP
.PP
kdb set user/tests/error/prefix/length '$(kdb get user/tests/error/prefix | wc -c | sed 's/[ ]*//g')'
.PP
.SH "Since we only want to look at the “reason” of the error, we"
.PP
.PP
.SH "remove the other part of the error message with \fChead\fP and \fCtail\fP\&."
.PP
.PP
kdb get user/tests/error | tail -n6 | cut -c'$(kdb get user/tests/error/prefix/length)'- #> config\&.yaml:2:1: Syntax error on input “-” #> - Burst #> ^ #> config\&.yaml:3:19: Syntax error on input “end of map” #> Holon : Anamnesis #> ^
.PP
.SH "Fix syntax errors"
.PP
.PP
printf -- 'Brutus: 
.br
' > \fCkdb file user/tests/yawn\fP printf -- ' - Burst
.br
' >> \fCkdb file user/tests/yawn\fP printf -- 'Holon : Anamnesis' >> \fCkdb file user/tests/yawn\fP kdb ls user/tests/yawn #> user/tests/yawn/Brutus #> user/tests/yawn/Brutus/#0 #> user/tests/yawn/Holon
.PP
.SH "Undo modifications"
.PP
.PP
kdb rm -r user/tests/error kdb rm -r user/tests/yawn sudo kdb umount user/tests/yawn ```
.PP
.SS "Limitations"
.PP
The plugin has the same limitations as \fBYAMBi \fP\&. 
