.TH "md_src_plugins_yanlr_README" 3elektra "Sun Nov 18 2018" "Version 0.8.25" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_yanlr_READMEPlugin: yanlr 
 \- 
.IP "\(bu" 2
infos = Information about the yanlr plugin is in keys below
.IP "\(bu" 2
infos/author = Ren√© Schwaiger sanssecours@me.com
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/needs = directoryvalue yamlsmith
.IP "\(bu" 2
infos/provides = storage/yaml
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = getstorage
.IP "\(bu" 2
infos/status = maintained unittest preview experimental unfinished nodoc concept discouraged
.IP "\(bu" 2
infos/metadata =
.IP "\(bu" 2
infos/description = This storage plugin use a parser generated by ANTLR to read YAML files
.PP
.SH "Yan LR"
.PP
.SS "Introduction"
.PP
This plugin uses ANTLR to generate a parser for the \fCYAML\fP serialization format\&. Apart from the hand written \fClexer\fP, all other parts of the plugin use standard ANTLR tools, such as
.PP
.IP "\(bu" 2
an ANTLR \fBparser grammar\fP,
.IP "\(bu" 2
a \fClistener\fP, that reacts to matches in the grammar building a key set, and
.IP "\(bu" 2
an \fCerror listener\fP that reacts to syntax errors
.PP
.PP
.SS "Examples"
.PP
.SS "Mappings"
.PP
``\fC <h1>Mount plugin to namespace\fPuser/tests/yanlr` sudo kdb mount config\&.yaml user/tests/yanlr yanlr
.PP
.SH "Manually add some mappings to the configuration file"
.PP
.PP
printf 'all : circles presuppose
.br
' > \fCkdb file user/tests/yanlr\fP printf 'hello : world
.br
' >> \fCkdb file user/tests/yanlr\fP
.PP
kdb ls /tests/yanlr #> user/tests/yanlr/all #> user/tests/yanlr/hello
.PP
kdb get user/tests/yanlr/all #> circles presuppose
.PP
.SH "Store value at root of mountpoint"
.PP
.PP
kdb set user/tests/yanlr 'Mount Eerie' kdb get user/tests/yanlr #> Mount Eerie
.PP
.SH "Add new key-value pairs"
.PP
.PP
.SH "Yan LR actually uses the YAML Smith plugin to write data"
.PP
.PP
kdb set /tests/yanlr/brand new kdb set /tests/yanlr/brand/new eyes kdb set /tests/yanlr/dance/gavin 'Dance!'
.PP
kdb ls /tests/yanlr #> user/tests/yanlr #> user/tests/yanlr/all #> user/tests/yanlr/brand #> user/tests/yanlr/brand/new #> user/tests/yanlr/dance/gavin #> user/tests/yanlr/hello
.PP
kdb get /tests/yanlr/hello #> world kdb get user/tests/yanlr/brand #> new kdb get /tests/yanlr/dance/gavin #> Dance!
.PP
.SH "Undo modifications to the key database"
.PP
.PP
kdb rm -r user/tests/yanlr sudo kdb umount user/tests/yanlr 
.PP
.nf
### Arrays

.fi
.PP
 
.SH "Mount plugin to cascading namespace \fC/tests/yanlr\fP"
.PP
.PP
sudo kdb mount config\&.yaml user/tests/yanlr yanlr
.PP
.SH "Manually add a sequences to the configuration file"
.PP
.PP
printf 'primes:
.br
' > \fCkdb file user/tests/yanlr\fP printf ' - two
.br
' >> \fCkdb file user/tests/yanlr\fP printf ' - three
.br
' >> \fCkdb file user/tests/yanlr\fP printf ' - five
.br
' >> \fCkdb file user/tests/yanlr\fP
.PP
kdb ls user/tests/yanlr #> user/tests/yanlr/primes #> user/tests/yanlr/primes/#0 #> user/tests/yanlr/primes/#1 #> user/tests/yanlr/primes/#2
.PP
kdb set user/tests/yanlr/primes/#3 seven
.PP
.SH "Retrieve index of last array element"
.PP
.PP
kdb getmeta user/tests/yanlr/primes array #> #3
.PP
.SH "Undo modifications to the key database"
.PP
.PP
kdb rm -r user/tests/yanlr sudo kdb umount user/tests/yanlr ```
.PP
.SS "Limitations"
.PP
.IP "\(bu" 2
The plugin does \fBnot support\fP
.IP "  \(bu" 4
plain scalars that span \fBmultiple lines\fP,
.IP "  \(bu" 4
\fBspecial characters\fP inside double quoted scalars,
.IP "  \(bu" 4
other \fBline endings\fP than \fC\\n\fP (Unix line endings),
.IP "  \(bu" 4
\fBblock scalars\fP,
.IP "  \(bu" 4
\fBflow collections\fP,
.IP "  \(bu" 4
\fBtags\fP,
.IP "  \(bu" 4
\fBanchors & aliases\fP,
.IP "  \(bu" 4
\fBmultiple documents\fP, and
.IP "  \(bu" 4
document \fBstart and end markers\fP
.PP

.IP "\(bu" 2
Yan LR does not provide write support for data\&. Please use the \fBYAML Smith\fP plugin for that purpose\&.
.PP
.PP
.SS "Comments"
.PP
The \fClexer\fP does currently tokenize comments\&. Consequently the \fBplugin grammar\fP of the plugin does also match comments\&. However, the \fClistener\fP does currently \fBignore comments\fP\&. 
