.TH "invoke.c" 3elektra "Fri Oct 30 2020" "Version 0.9.3" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
invoke.c \- Library for invoking exported plugin functions\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <kdbassert\&.h>\fP
.br
\fC#include <kdbinvoke\&.h>\fP
.br
\fC#include <kdbmodule\&.h>\fP
.br
\fC#include <kdbprivate\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "ElektraInvokeHandle * \fBelektraInvokeInitialize\fP (const char *elektraPluginName)"
.br
.ti -1c
.RI "ElektraInvokeHandle * \fBelektraInvokeOpen\fP (const char *elektraPluginName, KeySet *config, Key *errorKey)"
.br
.RI "Opens a new handle to invoke functions for a plugin\&. "
.ti -1c
.RI "const void * \fBelektraInvokeGetFunction\fP (ElektraInvokeHandle *handle, const char *elektraPluginFunctionName)"
.br
.RI "Get a function pointer\&. "
.ti -1c
.RI "KeySet * \fBelektraInvokeGetPluginConfig\fP (ElektraInvokeHandle *handle)"
.br
.RI "Get the configuration the plugin uses\&. "
.ti -1c
.RI "const char * \fBelektraInvokeGetPluginName\fP (ElektraInvokeHandle *handle)"
.br
.RI "Get the name of the plugin\&. "
.ti -1c
.RI "void * \fBelektraInvokeGetPluginData\fP (ElektraInvokeHandle *handle)"
.br
.RI "Get the data of the plugin\&. "
.ti -1c
.RI "KeySet * \fBelektraInvokeGetModules\fP (ElektraInvokeHandle *handle)"
.br
.RI "Get the modules used for invoking\&. "
.ti -1c
.RI "KeySet * \fBelektraInvokeGetExports\fP (ElektraInvokeHandle *handle)"
.br
.RI "Get the exports from the plugin\&. "
.ti -1c
.RI "int \fBelektraInvoke2Args\fP (ElektraInvokeHandle *handle, const char *elektraPluginFunctionName, KeySet *ks, Key *k)"
.br
.RI "A convenience function to call a function with two arguments\&. "
.ti -1c
.RI "void \fBelektraInvokeClose\fP (ElektraInvokeHandle *handle, Key *errorKey)"
.br
.RI "Closes all affairs with the handle\&. "
.ti -1c
.RI "int \fBelektraInvokeCallDeferable\fP (ElektraInvokeHandle *handle, const char *elektraPluginFunctionName, KeySet *parameters)"
.br
.RI "Invokes a deferable function on an invoke handle\&. "
.ti -1c
.RI "void \fBelektraInvokeExecuteDeferredCalls\fP (ElektraInvokeHandle *handle, ElektraDeferredCallList *list)"
.br
.RI "Execute deferred calls from list on given invoke handle\&. "
.ti -1c
.RI "int \fBelektraDeferredCall\fP (Plugin *handle, const char *elektraPluginFunctionName, KeySet *parameters)"
.br
.RI "Call a deferable function on a plugin handle\&. "
.ti -1c
.RI "int \fBelektraDeferredCallAdd\fP (ElektraDeferredCallList *list, const char *name, KeySet *parameters)"
.br
.RI "Add a new deferred call to the deferred call list\&. "
.ti -1c
.RI "ElektraDeferredCallList * \fBelektraDeferredCallCreateList\fP (void)"
.br
.RI "Create new deferred call list\&. "
.ti -1c
.RI "void \fBelektraDeferredCallDeleteList\fP (ElektraDeferredCallList *list)"
.br
.RI "Delete deferred call list\&. "
.ti -1c
.RI "void \fBelektraDeferredCallsExecute\fP (Plugin *plugin, ElektraDeferredCallList *list)"
.br
.RI "Execute deferred calls on given plugin\&. "
.in -1c
.SH "Detailed Description"
.PP 
Library for invoking exported plugin functions\&. 


.PP
\fBCopyright:\fP
.RS 4
BSD License (see LICENSE\&.md or https://www.libelektra.org) 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
