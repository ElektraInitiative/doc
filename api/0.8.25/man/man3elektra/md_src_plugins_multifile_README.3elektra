.TH "md_src_plugins_multifile_README" 3elektra "Sun Nov 18 2018" "Version 0.8.25" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_multifile_READMEPlugin: multifile 
 \- 
.IP "\(bu" 2
infos = Information about the multifile plugin is in keys below
.IP "\(bu" 2
infos/author = Thomas thomas.waser@libelektra.org
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/needs =
.IP "\(bu" 2
infos/provides = resolver storage
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = getresolver setresolver commit rollback getstorage setstorage
.IP "\(bu" 2
infos/status = maintained conformant compatible specific shelltest tested nodep configurable
.IP "\(bu" 2
infos/metadata =
.IP "\(bu" 2
infos/description = mounts multiple files within a directory
.PP
.PP
For some applications it is beneficially to have multiple configuration files\&. One way to achieve this, is to mount different files for the application\&.
.PP
In some situations we are not able to specify every configuration file with separate mounts because new configuration files might be created any time\&. Instead we want to include every configuration file matching a given pattern\&.
.PP
The multifile-resolver does so by calling resolver and storage plugins for each file matching a given pattern\&.
.PP
.SS "Plugin Configuration"
.PP
.IP "\(bu" 2
\fCrecursive\fP: If present, fts (3) will be used to traverse the directory tree and fnmatch to match \fCpattern\fP to the filename\&. If not present, glob (3) with \fCpattern\fP will be used on the directory
.IP "\(bu" 2
\fCpattern\fP: The pattern to be used to match configuration files\&.
.IP "\(bu" 2
\fCstorage\fP: The storage plugin to use\&.
.IP "\(bu" 2
\fCresolver\fP: The resolver plugin to use\&.
.IP "\(bu" 2
'child/<configname>': configuration passed to the child backends, \fCchild/\fP part gets removed\&.
.PP
.PP
.SS "Usage"
.PP
\fCkdb mount -R multifile -c storage='ini',pattern='*/*\&.ini',resolver='resolver' /path /mountpoint\fP
.PP
\fCkdb mount -R multifile -c storage='ini',pattern='*\&.ini',recursive=,resolver='resolver' /path /mountpoint\fP
.PP
.SS "Examples"
.PP
.PP
.nf
rm -rf ~/\&.config/multitest || $(exit 0)
mkdir -p ~/\&.config/multitest || $(exit 0)

cat > ~/\&.config/multitest/lo\&.ini << EOF \
[lo]\
addr = 127\&.0\&.0\&.1\
Link encap = Loopback\
EOF

cat > ~/\&.config/multitest/lan\&.ini << EOF \
[eth0]\
addr = 192\&.168\&.1\&.216\
Link encap = Ethernet\
EOF

cat > ~/\&.config/multitest/wlan\&.ini << EOF \
[wlan0]\
addr = 192\&.168\&.1\&.125\
Link encap = Ethernet\
EOF

sudo kdb mount -R multifile -c storage="ini",pattern="*\&.ini",resolver="resolver" multitest user/tests/multifile

kdb ls user/tests/multifile
#> user/tests/multifile/lan\&.ini/eth0
#> user/tests/multifile/lan\&.ini/eth0/Link encap
#> user/tests/multifile/lan\&.ini/eth0/addr
#> user/tests/multifile/lo\&.ini/lo
#> user/tests/multifile/lo\&.ini/lo/Link encap
#> user/tests/multifile/lo\&.ini/lo/addr
#> user/tests/multifile/wlan\&.ini/wlan0
#> user/tests/multifile/wlan\&.ini/wlan0/Link encap
#> user/tests/multifile/wlan\&.ini/wlan0/addr

kdb set user/tests/multifile/lan\&.ini/eth0/addr 10\&.0\&.0\&.2

kdb get user/tests/multifile/lan\&.ini/eth0/addr
#> 10\&.0\&.0\&.2

cat > ~/\&.config/multitest/test\&.ini << EOF \
[testsection]\
key = val\
EOF

kdb ls user/tests/multifile
#> user/tests/multifile/lan\&.ini/eth0
#> user/tests/multifile/lan\&.ini/eth0/Link encap
#> user/tests/multifile/lan\&.ini/eth0/addr
#> user/tests/multifile/lo\&.ini/lo
#> user/tests/multifile/lo\&.ini/lo/Link encap
#> user/tests/multifile/lo\&.ini/lo/addr
#> user/tests/multifile/test\&.ini/testsection
#> user/tests/multifile/test\&.ini/testsection/key
#> user/tests/multifile/wlan\&.ini/wlan0
#> user/tests/multifile/wlan\&.ini/wlan0/Link encap
#> user/tests/multifile/wlan\&.ini/wlan0/addr

kdb rm -r user/tests/multifile/test\&.ini

stat ~/\&.config/multifile/test\&.ini
# RET:1

sudo kdb umount user/tests/multifile
.fi
.PP
.PP
Recursive:
.PP
.PP
.nf
rm -rf ~/\&.config/multitest || $(exit 0)
mkdir -p ~/\&.config/multitest ~/\&.config/multitest/a/a1/a12 ~/\&.config/multitest/a/a2/a22 ~/\&.config/multitest/b/b1|| $(exit 0)

echo "a1key = a1val" > ~/\&.config/multitest/a/a1/a12/testa1\&.file
echo "a2key = a2val" > ~/\&.config/multitest/a/a2/a22/testa2\&.file
echo "b1key = b1val" > ~/\&.config/multitest/b/b1/testb1\&.file

sudo kdb mount -R multifile -c storage="ini",pattern="*\&.file",recursive=,resolver="resolver" multitest user/tests/multifile

kdb ls user/tests/multifile
#> user/tests/multifile/a/a1/a12/testa1\&.file/a1key
#> user/tests/multifile/a/a2/a22/testa2\&.file/a2key
#> user/tests/multifile/b/b1/testb1\&.file/b1key

rm -rf ~/\&.config/multitest

sudo kdb umount user/tests/multifile
.fi
.PP
.PP
.SS "Limitations"
.PP
.IP "\(bu" 2
You cannot get rid of the configuration file name\&. 
.PP

