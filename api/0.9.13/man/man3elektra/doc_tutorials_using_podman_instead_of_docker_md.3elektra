.TH "doc_tutorials_using_podman_instead_of_docker_md" 3elektra "Tue Mar 14 2023" "Version 0.9.13" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_tutorials_using_podman_instead_of_docker_md \- Introduction 
 Podman is an alternative container engine which does not require root privileges on the host OS\&.
.PP
Podman aims at being compatible with Docker and in most cases simply replacing \fCdocker\fP by \fCpodman\fP is enough\&.
.PP
However, there are some notable differences when running containers themselves as a user other than root\&.
.SH "Who Is This Guide For?"
.PP
Anyone who uses Podman to run their containers\&.
.SH "Prerequisites"
.PP
.IP "\(bu" 2
A working Podman installation
.PP
.SH "Basics"
.PP
To build the Debian bullseye container with Docker the command is
.PP
.PP
.nf
docker build \
  --tag "build-elektra-debian-bullseye" \
        --build-arg "JENKINS_USERID=$(id -u)" \
        --build-arg "JENKINS_GROUPID=$(id -g)" \
        --file "scripts/docker/debian/bullseye/Dockerfile" \
        scripts/docker/debian/bullseye/
.fi
.PP
.PP
Simply replacing \fCdocker\fP with \fCpodman\fP works in this case
.PP
.PP
.nf
podman build \
  --tag "build-elektra-debian-bullseye" \
        --build-arg "JENKINS_USERID=$(id -u)" \
        --build-arg "JENKINS_GROUPID=$(id -g)" \
        --file "scripts/docker/debian/bullseye/Dockerfile" \
        scripts/docker/debian/bullseye/
.fi
.PP
.SH "Running a container as a user other than root"
.PP
One area where Podman notably differs from Docker is when interacting with the filesystem of the host\&.
.PP
This is relevant when mounting directories of the host filesystem as volumes\&.
.PP
With Docker the container engine itself runs as a priviledged process and therefore the permissions in the host OS are not relevant\&.
.PP
With Podman the situation is more involved, as the container engine does not run with root priviledges\&.
.PP
For instance, the containers specified for building Elektra are configured such that the user inside the container is a non-root user\&.
.PP
If one wishes to mount the Elektra source directory from the host filesystem as a volume for the container, extra steps are necessary\&.
.PP
Inside the source directory, you can change the permissions to any user id with \fCpodman unshare chown $(id -u):$(id -u) -R \&.\fP\&. Keep in mind that this changes the \fIhost\fP filesystem\&. You can read more about this \fChere\fP\&.
.PP
After having changed the permissions, one can run the container
.PP
.PP
.nf
podman run \
   --user $(id -u) \
   --interactive \
   --tty \
   --rm \
   --volume "$PWD:/home/jenkins/workspace:Z" \
   --workdir "/home/jenkins/workspace" \
   build-elektra-debian-bullseye
.fi
.PP
.PP
Do not forget the \fC:Z\fP label\&. You can read more about the labels in the Podman \fCdocumentation\fP\&.
.PP
Alternatively, if you prefer to not change the permissions of the host filesystem, you can run the container as a root user\&. Note however, that the environment will differ from that used in continuous integration and the usual caveats concerning running processes as root apply:
.PP
.PP
.nf
podman run \
   --user "root" \
   --interactive \
   --tty \
   --rm \
   --volume "$PWD:/home/jenkins/workspace:Z" \
   --workdir "/home/jenkins/workspace" \
   build-elektra-debian-bullseye
.fi
.PP
 
