.TH "elektra_error.c" 3elektra "Tue Feb 26 2019" "Version 0.8.26" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
elektra_error.c \- Elektra error codes\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'elektra/conversion\&.h'\fP
.br
\fC#include 'elektra/error\&.h'\fP
.br
\fC#include 'kdberrors\&.h'\fP
.br
\fC#include 'kdbhelper\&.h'\fP
.br
\fC#include 'kdbprivate\&.h'\fP
.br
\fC#include <string\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "ElektraError * \fBelektraErrorCreate\fP (ElektraErrorCode code, const char *description, \fBElektraErrorSeverity\fP severity)"
.br
.RI "Creates a new ElektraError using the provided values\&. "
.ti -1c
.RI "ElektraErrorCode \fBelektraErrorCode\fP (const ElektraError *error)"
.br
.ti -1c
.RI "const char * \fBelektraErrorDescription\fP (const ElektraError *error)"
.br
.ti -1c
.RI "\fBElektraErrorSeverity\fP \fBelektraErrorSeverity\fP (const ElektraError *error)"
.br
.ti -1c
.RI "int \fBelektraKDBErrorCode\fP (const ElektraError *error)"
.br
.ti -1c
.RI "const char * \fBelektraKDBErrorDescription\fP (const ElektraError *error)"
.br
.ti -1c
.RI "\fBElektraErrorSeverity\fP \fBelektraKDBErrorSeverity\fP (const ElektraError *error)"
.br
.ti -1c
.RI "ElektraKDBErrorGroup \fBelektraKDBErrorGroup\fP (const ElektraError *error)"
.br
.ti -1c
.RI "ElektraKDBErrorModule \fBelektraKDBErrorModule\fP (const ElektraError *error)"
.br
.ti -1c
.RI "const char * \fBelektraKDBErrorReason\fP (const ElektraError *error)"
.br
.ti -1c
.RI "int \fBelektraKDBErrorWarningCount\fP (const ElektraError *error)"
.br
.ti -1c
.RI "ElektraError * \fBelektraKDBErrorGetWarning\fP (const ElektraError *error, int index)"
.br
.ti -1c
.RI "Key * \fBelektraKDBErrorKey\fP (const ElektraError *error)"
.br
.ti -1c
.RI "void \fBelektraErrorReset\fP (ElektraError **error)"
.br
.RI "Frees the memory used by the error and sets the referenced error variable to NULL\&. "
.in -1c
.SH "Detailed Description"
.PP 
Elektra error codes\&. 


.PP
\fBCopyright:\fP
.RS 4
BSD License (see doc/LICENSE\&.md or http://www.libelektra.org) 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "ElektraError* elektraErrorCreate (ElektraErrorCode code, const char * description, \fBElektraErrorSeverity\fP severity)"

.PP
Creates a new ElektraError using the provided values\&. The returned value will be allocated with \fBelektraCalloc()\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIcode\fP The error code of the error\&. 
.br
\fIdescription\fP The description of the error\&. 
.br
\fIseverity\fP The severity of the error\&. Only use ELEKTRA_ERROR_SEVERITY_FATAL, if the error will be raised with \fBelektraFatalError()\fP\&. 
.br
\fIgroup\fP The group to which this error belongs\&. 
.br
\fImodule\fP The module from which this error originates\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
A newly allocated ElektraError (free with \fBelektraFree()\fP)\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
