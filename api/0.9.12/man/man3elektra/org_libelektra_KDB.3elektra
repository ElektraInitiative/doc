.TH "org.libelektra.KDB" 3elektra "Fri Mar 3 2023" "Version 0.9.12" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
org.libelektra.KDB \- Represents a session with the Elektra key database\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits AutoCloseable\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBclose\fP ()  throws KDBException "
.br
.RI "Closes the \fBKDB\fP session and frees native resources associated with it\&. "
.ti -1c
.RI "void \fBclose\fP (\fBKey\fP warningsKey)  throws KDBException "
.br
.RI "Closes the \fBKDB\fP session and frees native resources associated with it\&. "
.ti -1c
.RI "\fBKeySet\fP \fBget\fP (\fBKey\fP parentKey)  throws KDBException "
.br
.RI "Fetches at least all keys that are sub-keys or children of sub-keys of the supplied parent key\&. "
.ti -1c
.RI "\fBKDB\fP \fBget\fP (\fBKeySet\fP keySet, \fBKey\fP parentKey)  throws KDBException "
.br
.RI "Fetches at least all keys that are sub-keys or children of sub-keys of the supplied parent key\&. "
.ti -1c
.RI "\fBKDB\fP \fBset\fP (\fBKeySet\fP keySet, \fBKey\fP parentKey)  throws KDBException "
.br
.RI "Will update changed keys of the given\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBKDB\fP \fBopen\fP ()  throws KDBException "
.br
.RI "Opens a new \fBKDB\fP session\&. "
.ti -1c
.RI "static \fBKDB\fP \fBopen\fP (\fBKeySet\fP contract)  throws KDBException "
.br
.RI "Opens \fBKDB\fP session using the specified\&. "
.ti -1c
.RI "static \fBKDB\fP \fBopen\fP (\fBKey\fP warningsKey)  throws KDBException "
.br
.RI "Opens a new \fBKDB\fP session\&. "
.ti -1c
.RI "static \fBKDB\fP \fBopen\fP (\fBKeySet\fP contract, \fBKey\fP warningsKey)  throws KDBException "
.br
.RI "Opens \fBKDB\fP session using the specified\&. "
.ti -1c
.RI "static \fBKeySet\fP \fBgoptsContract\fP (String[] args, String[] env, \fBKey\fP parentKey, \fBKeySet\fP goptsConfig)"
.br
.RI "Creates a contract \fBKeySet\fP for use with \fBKDB#open(KeySet)\fP that mounts and configures the\&. "
.ti -1c
.RI "static void \fBgoptsContract\fP (\fBKeySet\fP contract, String[] args, String[] env, \fBKey\fP parentKey, \fBKeySet\fP goptsConfig)"
.br
.RI "Writes a contract into a specified \fBKeySet\fP for use with \fBKDB#open(KeySet)\fP that mounts and configures the\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "Pointer \fBgetPointer\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Represents a session with the Elektra key database\&. 

@apiNote Close after usage, or simply use a try-with-resources statement 
.SH "Member Function Documentation"
.PP 
.SS "void org\&.libelektra\&.KDB\&.close () throws \fBKDBException\fP\fC [inline]\fP"

.PP
Closes the \fBKDB\fP session and frees native resources associated with it\&. 
.PP
\fBExceptions\fP
.RS 4
\fI\fBKDBException\fP\fP if opening the session fails - see specialization of \fBKDBException\fP 
.br
\fIKDBClosedException\fP if this session has already been closed 
.RE
.PP

.SS "void org\&.libelektra\&.KDB\&.close (\fBKey\fP warningsKey) throws \fBKDBException\fP\fC [inline]\fP"

.PP
Closes the \fBKDB\fP session and frees native resources associated with it\&. 
.PP
\fBParameters\fP
.RS 4
\fIwarningsKey\fP Used to store warnings, which may occur during closing the session, in this key's meta data 
.RE
.PP
\fBExceptions\fP
.RS 4
\fI\fBKDBException\fP\fP if opening the session fails - see specialization of \fBKDBException\fP 
.br
\fIKDBClosedException\fP if this session has already been closed 
.br
\fIIllegalStateException\fP if
.PP
.nf
parentKey 

.fi
.PP
 has already been released 
.br
\fIIllegalArgumentException\fP if
.PP
.nf
warningsKey 

.fi
.PP
 is
.PP
.nf
null 

.fi
.PP
 
.RE
.PP
\fBSee also\fP
.RS 4
\fBKey::create()\fP 
.RE
.PP

.SS "\fBKeySet\fP org\&.libelektra\&.KDB\&.get (\fBKey\fP parentKey) throws \fBKDBException\fP\fC [inline]\fP"

.PP
Fetches at least all keys that are sub-keys or children of sub-keys of the supplied parent key\&. Note: Resulting key set may contain more keys than requested
.PP
\fBParameters\fP
.RS 4
\fIparentKey\fP Root key which name is used to fetch keys below\&. This key is also used to store warnings, which may occur during the operation, in this key's meta data\&. 
.RE
.PP
\fBReturns\fP
.RS 4
New \fBKeySet\fP containing the fetched keys 
.RE
.PP
\fBExceptions\fP
.RS 4
\fI\fBKDBException\fP\fP if loading keys fails - see specialization of \fBKDBException\fP 
.br
\fIKDBClosedException\fP if this session has already been closed 
.br
\fIIllegalStateException\fP if
.PP
.nf
parentKey 

.fi
.PP
 has already been released 
.br
\fIIllegalArgumentException\fP 
.RE
.PP

.SS "\fBKDB\fP org\&.libelektra\&.KDB\&.get (\fBKeySet\fP keySet, \fBKey\fP parentKey) throws \fBKDBException\fP\fC [inline]\fP"

.PP
Fetches at least all keys that are sub-keys or children of sub-keys of the supplied parent key\&. Note: Resulting key set may contain more keys than requested
.PP
\fBParameters\fP
.RS 4
\fIkeySet\fP \fBKeySet\fP used to store the fetched keys 
.br
\fIparentKey\fP Root key which name is used to fetch keys below it\&. This key is also used to store warnings, which may occur during the operation, in this key's meta data\&. It is recommended to use the most specific
.PP
.nf
parentKey 

.fi
.PP
 possible\&. (e\&.g\&. using
.PP
.nf
system:/ 

.fi
.PP
 is rarely the most specific) 
.RE
.PP
\fBReturns\fP
.RS 4
This \fBKDB\fP session, enabling a fluent interface 
.RE
.PP
\fBExceptions\fP
.RS 4
\fI\fBKDBException\fP\fP if loading keys fails - see specialization of \fBKDBException\fP 
.br
\fIKDBClosedException\fP if this session has already been closed 
.br
\fIIllegalStateException\fP if
.PP
.nf
keySet 

.fi
.PP
 or
.PP
.nf
parentKey 

.fi
.PP
 has already been released 
.br
\fIIllegalArgumentException\fP if
.PP
.nf
keySet 

.fi
.PP
 or
.PP
.nf
parentKey 

.fi
.PP
 is
.PP
.nf
null 

.fi
.PP
 
.RE
.PP
\fBSee also\fP
.RS 4
\fBget(Key)\fP 
.RE
.PP

.SS "Pointer org\&.libelektra\&.KDB\&.getPointer ()\fC [inline]\fP, \fC [protected]\fP"

.PP
\fBReturns\fP
.RS 4
JNA pointer to the native pointer for this key set 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIKDBClosedException\fP if this \fBKDB\fP session has already been closed 
.RE
.PP

.SS "static void org\&.libelektra\&.KDB\&.goptsContract (\fBKeySet\fP contract, String[] args, String[] env, \fBKey\fP parentKey, \fBKeySet\fP goptsConfig)\fC [inline]\fP, \fC [static]\fP"

.PP
Writes a contract into a specified \fBKeySet\fP for use with \fBKDB#open(KeySet)\fP that mounts and configures the\&. 
.PP
.nf
gopts 

.fi
.PP
 plugin
.PP
\fBParameters\fP
.RS 4
\fIcontract\fP \fBKey\fP set to write the contract to 
.br
\fIargs\fP Arguments that will be converted into
.PP
.nf
argc 

.fi
.PP
 and
.PP
.nf
argv 

.fi
.PP
 for
.PP
.nf
gopts 

.fi
.PP
 
.br
\fIenv\fP Environment variables that
.PP
.nf
gopts 

.fi
.PP
 will use 
.br
\fIparentKey\fP Parent key that should be used by
.PP
.nf
gopts 

.fi
.PP
 \&. Only the key name is copied\&. The key can be deleted immediately after calling this function\&. 
.br
\fIgoptsConfig\fP Config used for mounting the
.PP
.nf
gopts 

.fi
.PP
 plugin 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIIllegalArgumentException\fP if any of the arguments are
.PP
.nf
null 

.fi
.PP
 
.br
\fIIllegalStateException\fP if
.PP
.nf
contract 

.fi
.PP
 ,
.PP
.nf
goptsConfig 

.fi
.PP
 or
.PP
.nf
parentKey 

.fi
.PP
 has already been released 
.br
\fIIllegalArgumentException\fP if any of the specified parameters is
.PP
.nf
null 

.fi
.PP
 
.RE
.PP

.SS "static \fBKeySet\fP org\&.libelektra\&.KDB\&.goptsContract (String[] args, String[] env, \fBKey\fP parentKey, \fBKeySet\fP goptsConfig)\fC [inline]\fP, \fC [static]\fP"

.PP
Creates a contract \fBKeySet\fP for use with \fBKDB#open(KeySet)\fP that mounts and configures the\&. 
.PP
.nf
gopts 

.fi
.PP
 plugin
.PP
\fBParameters\fP
.RS 4
\fIargs\fP Arguments that will be converted into
.PP
.nf
argc 

.fi
.PP
 and
.PP
.nf
argv 

.fi
.PP
 for
.PP
.nf
gopts 

.fi
.PP
 
.br
\fIenv\fP Environment variables that
.PP
.nf
gopts 

.fi
.PP
 will use 
.br
\fIparentKey\fP Parent key that should be used by
.PP
.nf
gopts 

.fi
.PP
 \&. Only the key name is copied\&. The key can be deleted immediately after calling this function\&. 
.br
\fIgoptsConfig\fP Config used for mounting the
.PP
.nf
gopts 

.fi
.PP
 plugin 
.RE
.PP
\fBReturns\fP
.RS 4
New \fBKeySet\fP containing the contract 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIIllegalArgumentException\fP if any of the arguments are
.PP
.nf
null 

.fi
.PP
 
.br
\fIIllegalStateException\fP if
.PP
.nf
goptsConfig 

.fi
.PP
 or
.PP
.nf
parentKey 

.fi
.PP
 has already been released 
.br
\fIIllegalArgumentException\fP if any of the specified parameters is
.PP
.nf
null 

.fi
.PP
 
.RE
.PP
\fBSee also\fP
.RS 4
\fBKeySet::release()\fP 
.RE
.PP

.SS "static \fBKDB\fP org\&.libelektra\&.KDB\&.open () throws \fBKDBException\fP\fC [inline]\fP, \fC [static]\fP"

.PP
Opens a new \fBKDB\fP session\&. 
.PP
\fBReturns\fP
.RS 4
New \fBKDB\fP session 
.RE
.PP
\fBExceptions\fP
.RS 4
\fI\fBKDBException\fP\fP if opening the session fails - see specialization of \fBKDBException\fP 
.RE
.PP

.SS "static \fBKDB\fP org\&.libelektra\&.KDB\&.open (\fBKey\fP warningsKey) throws \fBKDBException\fP\fC [inline]\fP, \fC [static]\fP"

.PP
Opens a new \fBKDB\fP session\&. 
.PP
\fBParameters\fP
.RS 4
\fIwarningsKey\fP Used to store warnings, which may occur during opening the session, in this key's meta data 
.RE
.PP
\fBReturns\fP
.RS 4
New \fBKDB\fP session 
.RE
.PP
\fBExceptions\fP
.RS 4
\fI\fBKDBException\fP\fP if opening the session fails - see specialization of \fBKDBException\fP 
.br
\fIIllegalStateException\fP if
.PP
.nf
warningsKey 

.fi
.PP
 has already been released 
.br
\fIIllegalArgumentException\fP if
.PP
.nf
warningsKey 

.fi
.PP
 is
.PP
.nf
null 

.fi
.PP
 
.RE
.PP
\fBSee also\fP
.RS 4
\fBKey::create()\fP 
.RE
.PP

.SS "static \fBKDB\fP org\&.libelektra\&.KDB\&.open (\fBKeySet\fP contract) throws \fBKDBException\fP\fC [inline]\fP, \fC [static]\fP"

.PP
Opens \fBKDB\fP session using the specified\&. 
.PP
.nf
contract 

.fi
.PP
.PP
\fBParameters\fP
.RS 4
\fIcontract\fP Contract configuring the
.PP
.nf
gopts 

.fi
.PP
 plugin 
.RE
.PP
\fBReturns\fP
.RS 4
New \fBKDB\fP session 
.RE
.PP
\fBExceptions\fP
.RS 4
\fI\fBKDBException\fP\fP if opening the session fails - see specialization of \fBKDBException\fP 
.br
\fIIllegalStateException\fP if
.PP
.nf
contract 

.fi
.PP
 has already been released 
.br
\fIIllegalArgumentException\fP if
.PP
.nf
contract 

.fi
.PP
 is
.PP
.nf
null 

.fi
.PP
 
.RE
.PP
\fBSee also\fP
.RS 4
\fBgoptsContract(String[], String[], Key, KeySet)\fP 
.PP
\fBgoptsContract(KeySet, String[], String[], Key, KeySet)\fP 
.RE
.PP

.SS "static \fBKDB\fP org\&.libelektra\&.KDB\&.open (\fBKeySet\fP contract, \fBKey\fP warningsKey) throws \fBKDBException\fP\fC [inline]\fP, \fC [static]\fP"

.PP
Opens \fBKDB\fP session using the specified\&. 
.PP
.nf
contract 

.fi
.PP
.PP
\fBParameters\fP
.RS 4
\fIcontract\fP Contract configuring the
.PP
.nf
gopts 

.fi
.PP
 plugin 
.br
\fIwarningsKey\fP Used to store warnings, which may occur during opening the session, in this key's meta data 
.RE
.PP
\fBReturns\fP
.RS 4
New \fBKDB\fP session 
.RE
.PP
\fBExceptions\fP
.RS 4
\fI\fBKDBException\fP\fP if opening the session fails - see specialization of \fBKDBException\fP 
.br
\fIIllegalStateException\fP if
.PP
.nf
contract 

.fi
.PP
 or
.PP
.nf
warningsKey 

.fi
.PP
 has already been released 
.br
\fIIllegalArgumentException\fP if
.PP
.nf
contract 

.fi
.PP
 or
.PP
.nf
warningsKey 

.fi
.PP
 is
.PP
.nf
null 

.fi
.PP
 
.RE
.PP
\fBSee also\fP
.RS 4
\fBKey::create()\fP 
.PP
\fBgoptsContract(String[], String[], Key, KeySet)\fP 
.PP
\fBgoptsContract(KeySet, String[], String[], Key, KeySet)\fP 
.RE
.PP

.SS "\fBKDB\fP org\&.libelektra\&.KDB\&.set (\fBKeySet\fP keySet, \fBKey\fP parentKey) throws \fBKDBException\fP\fC [inline]\fP"

.PP
Will update changed keys of the given\&. 
.PP
.nf
keySet 

.fi
.PP
 in the backend\&. \fBget(Key)\fP or \fBget(KeySet, Key)\fP has to be called before this function may be executed\&.
.PP
\fBParameters\fP
.RS 4
\fIkeySet\fP \fBKeySet\fP which contains keys to be updated in the backend 
.br
\fIparentKey\fP Specify which part of the given
.PP
.nf
keySet 

.fi
.PP
 is of interest for you\&. This key is also used to store warnings, which may occur during the operation, in this key's meta data\&. In general it is highly recommended, that you use the same
.PP
.nf
parentKey 

.fi
.PP
 used to fetch the
.PP
.nf
keySet 

.fi
.PP
 with \fBget(Key)\fP or \fBget(KeySet, Key)\fP\&. You promise to only modify or remove keys below this key\&. All others would be passed back as they were retrieved by
.PP
.nf
keySet 

.fi
.PP
 with \fBget(Key)\fP\&. Cascading keys (starting with 
.PP
.nf
/ 

.fi
.PP
 ) will set the path in all namespaces\&. A nameless key as created by {\fB} will commit all changes in the keySet  \&. This parameter is an optimization to only save keys of mountpoints affected by the specified parentKey  \&. This does not necessarily mean that only changes to keys below that parentKey  are saved\&.  This  KDB} session, enabling a fluent interface  KDBException if storing keys fails - see specialization of  KDBException}  KDBClosedException if this session has already been closed  IllegalStateException if keySet  or parentKey  has already been released  IllegalArgumentException if keySet  or parentKey  is null  \fP
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Elektra from the source code\&.
