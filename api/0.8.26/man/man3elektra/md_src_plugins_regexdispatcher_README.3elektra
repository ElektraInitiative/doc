.TH "md_src_plugins_regexdispatcher_README" 3elektra "Tue Feb 26 2019" "Version 0.8.26" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_regexdispatcher_READMEPlugin: regexdispatcher 
 \- 
.IP "\(bu" 2
infos = Information about the regexdispatcher plugin is in keys below
.IP "\(bu" 2
infos/author = Armin Wurzinger e1528532@libelektra.org
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/needs =
.IP "\(bu" 2
infos/provides =
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = presetstorage
.IP "\(bu" 2
infos/ordering = typechecker
.IP "\(bu" 2
infos/status = maintained experimental
.IP "\(bu" 2
infos/metadata = check/enum/# check/enum/multi check/range check/validation
.IP "\(bu" 2
infos/description = a plugin which generates regex-representations of specification keywords
.PP
.PP
A plugin which generates regex representations of specification keywords for the typechecker plugin before saving a configuration specification\&. For instance the regex for the metakey \fCcheck/enum/#\fP depends on the metakey's values, as the two definitions \fCcheck/enum/#1=A\fP and \fCcheck/enum/#2=B\fP would result in the regex \fCA|B\fP stored in the \fCelektra/spec/regex/check/enum\fP metakey that can be treated by the typechecker as a regex directly\&.
.PP
.SS "Usage"
.PP
In order to generate regex representations for different specification keywords, mount a configuration specification along with this plugin\&.
.PP
\fCkdb mount <specification> spec/<path> <storage plugin to read the specification> regexdispatcher typechecker\fP
.PP
.SS "Dependencies"
.PP
.IP "\(bu" 2
ghc >= 8\&.0\&.1 < 8\&.4
.IP "\(bu" 2
ghc-pkg, usually bundled with ghc
.IP "\(bu" 2
cabal, the haskell build system, usually bundled with ghc
.IP "\(bu" 2
augeas, which provides libfa utilized by this plugin
.PP
.PP
.SS "Supported Metakeys"
.PP
The following specification keywords are supported:
.PP
.IP "\(bu" 2
check/enum/# and check/enum/multi
.IP "\(bu" 2
check/range 
.PP

