.TH "doc_contrib_api_reviews_core_keyVNew_md" 3elektra "Fri Mar 3 2023" "Version 0.9.12" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_contrib_api_reviews_core_keyVNew_md \- keyVNew 

.IP "\(bu" 2
start = 2021-01-23 18:10
.IP "\(bu" 2
end = 2021-01-23 18:10
.IP "\(bu" 2
moderator = Stefan Hanreich stefanhani@gmail.com
.PP
.SH "Signature"
.PP
\fCKey *keyVNew(const char *keyname, va_list ap)\fP
.SH "Checklist"
.PP
.SS "Doxygen"
(bullet points are in order of appearance)
.PP
.IP "\(bu" 2
[ ] First line explains briefly what the function does
.IP "\(bu" 2
[ ] Simple example or snippet how to use the function
.IP "\(bu" 2
[ ] Longer description of function containing common use cases
.IP "\(bu" 2
[ ] Description of functions reads nicely
.IP "\(bu" 2
[ ] \fC@pre\fP
.IP "\(bu" 2
[ ] \fC@post\fP
.IP "\(bu" 2
[ ] \fC@invariant\fP
.IP "\(bu" 2
[ ] \fC@param\fP for every parameter
.IP "\(bu" 2
[ ] \fC@return\fP / \fC@retval\fP
.IP "\(bu" 2
[ ] \fC@since\fP
.IP "\(bu" 2
[ ] \fC@ingroup\fP
.IP "\(bu" 2
[ ] \fC@see\fP
.PP
.SS "Naming"
.IP "\(bu" 2
[ ] Abbreviations used in function names must be defined in the \fBGlossary\fP
.IP "\(bu" 2
[ ] Function names should neither be too long, nor too short
.IP "\(bu" 2
[ ] Function name should be clear and unambiguous
.IP "\(bu" 2
[ ] Abbreviations used in parameter names must be defined in the \fBGlossary\fP
.IP "\(bu" 2
[ ] Parameter names should neither be too long, nor too short
.IP "\(bu" 2
[ ] Parameter names should be clear and unambiguous
.PP
.SS "Compatibility"
(only in PRs)
.PP
.IP "\(bu" 2
[ ] \fBSymbol versioning\fP is correct for breaking changes
.IP "\(bu" 2
[ ] ABI/API changes are forward-compatible (breaking backwards-compatibility to add additional symbols is fine)
.PP
.SS "Parameter & Return Types"
.IP "\(bu" 2
[ ] Function parameters should use enum types instead of boolean types wherever sensible
.IP "\(bu" 2
[ ] Wherever possible, function parameters should be \fCconst\fP
.IP "\(bu" 2
[ ] Wherever possible, return types should be \fCconst\fP
.IP "\(bu" 2
[ ] Functions should have the least amount of parameters feasible
.PP
.SS "Structural Clarity"
.IP "\(bu" 2
[ ] Functions should do exactly one thing
.IP "\(bu" 2
[ ] Function name has the appropriate prefix
.IP "\(bu" 2
[ ] Order of signatures in kdb\&.h\&.in is the same as Doxygen
.IP "\(bu" 2
[ ] No functions with similar purpose exist
.PP
.SS "Memory Management"
.IP "\(bu" 2
[ ] Memory Management should be handled by the function wherever possible
.PP
.SS "Extensibility"
.IP "\(bu" 2
[ ] Function is easily extensible, e\&.g\&., with flags
.IP "\(bu" 2
[ ] Documentation does not impose limits, that would hinder further extensions
.PP
.SS "Tests"
.IP "\(bu" 2
[ ] Function code is fully covered by tests
.IP "\(bu" 2
[ ] All possible error states are covered by tests
.IP "\(bu" 2
[ ] All possible enum values are covered by tests
.IP "\(bu" 2
[ ] No inconsistencies between tests and documentation
.PP
.SH "Summary"
.PP
.SH "Other Issues discovered (unrelated to function)"
.PP

