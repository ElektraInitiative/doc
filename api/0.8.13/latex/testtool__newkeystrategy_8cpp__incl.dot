digraph "testtool_newkeystrategy.cpp"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="testtool_newkeystrategy.cpp",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="gtest/gtest.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="merging/newkeystrategy.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$newkeystrategy_8hpp.html",tooltip="A strategy which always takes the value from one side. "];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="merging/mergeconflictstrategy.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mergeconflictstrategy_8hpp.html",tooltip="Interface for a MergeConflictStrategy. "];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="merging/mergeresult.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mergeresult_8hpp.html",tooltip="Class modelling the result of a three way merge. "];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="merging/mergeconflict.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mergeconflict_8hpp.html",tooltip="Models a merge conflict. "];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="string",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node6 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="toolexcept.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$toolexcept_8hpp.html",tooltip="Implementation of all exceptions elektratools library might throw. "];
  Node8 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="stdexcept",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="memory",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="merging/mergetask.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mergetask_8hpp.html",tooltip="Models a merge task. "];
  Node11 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="kdb.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node1 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="mergetestutils.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mergetestutils_8cpp.html",tooltip="Implements a helper class for merge related tests. "];
  Node13 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="iostream",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node13 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node13 -> Node15 [color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="merging/threewaymerge.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$threewaymerge_8hpp.html",tooltip="Implements a way to build and deal with a backend. "];
  Node15 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node15 -> Node16 [color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="vector",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node15 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node15 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node15 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node15 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
}
