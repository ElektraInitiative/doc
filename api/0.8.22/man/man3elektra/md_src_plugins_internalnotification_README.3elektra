.TH "md_src_plugins_internalnotification_README" 3elektra "Tue Feb 27 2018" "Version 0.8.22" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_internalnotification_READMEPlugin: internalnotification 
 \- 
.IP "\(bu" 2
infos = Plugin for internal notification
.IP "\(bu" 2
infos/author = Thomas Wahringer waht@libelektra.org
.IP "\(bu" 2
infos/licence = BSD
.IP "\(bu" 2
infos/needs =
.IP "\(bu" 2
infos/provides =
.IP "\(bu" 2
infos/recommends =
.IP "\(bu" 2
infos/placements = postgetstorage postcommit
.IP "\(bu" 2
infos/status = global libc unittest concept unfinished experimental
.IP "\(bu" 2
infos/metadata =
.IP "\(bu" 2
infos/description = Plugin for internal notification
.PP
.PP
Allows applications to automatically update registered variables when the value of a specified key has changed\&.
.PP
It is recommended to use the notification wrapper (see \fCnotification tutorial\fP) instead of this plugin directly\&. The wrapper has a simple API and decouples applications from the actual plugin\&.
.PP
.SS "Exported Methods"
.PP
This plugin exports the following functions\&. The functions addresses are exported below \fCsystem/elektra/modules/internalnotification/exports/\fP\&.
.PP
All functions have a similar signature:
.PP
.PP
.nf
int registerX (Plugin * handle, Key * key, \&.\&.\&.);
.fi
.PP
.PP
If the given \fCkey\fP is contained in a KeySet on a kdbGet or kdbSet operation a action according to the function's description is executed\&. Cascading keys as \fCkey\fP names are also supported\&.
.PP
\fIParameters\fP
.PP
.IP "\(bu" 2
\fIhandle\fP The internal plugin \fChandle\fP is exported as \fCsystem/elektra/modules/internalnotification/exports/handle\fP\&.
.IP "\(bu" 2
\fIkey\fP Key to watch for changes\&.
.PP
.PP
Please note that the plugin API may change as this plugin is experimental\&.
.PP
.SS "int registerInt (Plugin * handle, Key * key, int * variable)"
.PP
The key's value is converted to integer and the registered variable is updated with the new value\&.
.PP
\fIAdditional Parameters\fP
.PP
.IP "\(bu" 2
\fIvariable\fP Pointer to the variable
.PP
.PP
.SS "int registerCallback (Plugin * handle, Key * key, ElektraNotificationChangeCallback callback)"
.PP
When the key changes the callback is called with the new key\&.
.PP
\fIAdditional Parameters\fP
.PP
.IP "\(bu" 2
\fIcallback\fP Callback function with the signature \fCvoid (*ElektraNotificationChangeCallback) (Key * key)\fP\&. 
.PP

