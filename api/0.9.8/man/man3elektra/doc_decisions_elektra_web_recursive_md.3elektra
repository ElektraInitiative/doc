.TH "doc_decisions_elektra_web_recursive_md" 3elektra "Mon Oct 4 2021" "Version 0.9.8" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_decisions_elektra_web_recursive_md \- Elektra Web recursive structure 
 
.SH "Problem"
.PP
After deciding how to remotely manage instances and groups of instances (clusters) with Elektra Web, there is still the issue of recursively nested clusters (clusters of clusters)\&.
.SH "Constraints"
.PP
.IP "\(bu" 2
We need to be able to manage single, as well as multiple instances\&.
.IP "\(bu" 2
We need to be able to group instances (into clusters) and manage them together\&.
.IP "\(bu" 2
We need to be able to group clusters and manage them together\&.
.PP
.SH "Assumptions"
.PP
.IP "\(bu" 2
Use one cluster daemon (clusterd) to manage all clusters and instances\&.
.PP
.SH "Considered Alternatives"
.PP
.IP "\(bu" 2
Allowing clusterd instances to add clusterd instances (instead of just elektrad instances)
.IP "\(bu" 2
Managing the hierarchy in a single clusterd instance
.PP
.SH "Decision"
.PP
Managing the hierarchy in a single clusterd instance\&.
.SH "Rationale"
.PP
Accessing clusterd instances from other clusterd instances would mean that there also needs to be some authentication between those, complicating the set up process\&. Furthermore, it would not be as easy to deal with conflicts, as the client might connect to a clusterd instance that belongs to another clusterd, in which case it would not be aware of the constraints of the parent clusterd instance\&.
.PP
There is also still the issue that using a daemon for each cluster would make it harder to create new clusters, because the user would have to manually set up a new daemon for each cluster\&.
.PP
Using one daemon to manage all instances and clusters, including sub-clusters is the easiest solution, that way the client simply connects to that daemon, which forwards requests to single instances or multiple instances at once\&. Furthermore, the cluster daemon could deal with conflicts easily as it is aware of the whole network\&. In this case, the cluster daemon can also serve the client, further simplifying the whole structure, because we don't need to host the client on a separate web server\&.
.SH "Implications"
.PP
.IP "\(bu" 2
There needs to be a single point of entry for the web client to connect to\&.
.PP
.SH "Related Decisions"
.PP
.IP "\(bu" 2
\fBElektra Web Structure decision\fP
.PP
.SH "Notes"
.PP

