.TH "md_src_plugins_mozprefs_autoconfig_README" 3elektra "Tue Nov 22 2016" "Version 0.8.19" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_src_plugins_mozprefs_autoconfig_README \- Plugin: mozprefs 
This file explains how Firefox preferences can be manipulated at runtime using Elektras intercept open and a custom autoconfig script\&.
.PP
.SS "Basics"
.PP
\fCkdb configure-firefox -s\fP will configure everything needed to get started\&.
.PP
.SS "Files"
.PP
.IP "\(bu" 2
\fC/usr/lib/firefox\fP / \fC/usr/lib/firefox-esr\fP
.IP "  \(bu" 4
\fCdefaults/pref/autoconfig\&.js\fP Loads \fCelektra\&.cfg\fP
.PP

.PP
.PP
.PP
.nf
 ```
 pref("general.config.filename", "elektra.cfg");
 pref("general.config.obscure_value", 0);
```
.fi
.PP
.IP "\(bu" 2
\fCelektra\&.cfg\fP Contains the autoconfig code
.PP
.PP
\fC~/\&.mozilla/firefox/<profile>/prefs\&.js\fP Contains the user preferences\&. The configure-firefox script will append the config for our autoconfig script:
.PP
``` user_pref('elektra\&.config\&.file', '/tmp/imnotreal\&.js'); user_pref('elektra\&.config\&.reload_trigger_port', 65432); ```
.PP
Every time the string \fCreload\fP is send to localhost:\fCelektra\&.config\&.reload_trigger_port\fP the autoconfig script will import the preferences from \fCelektra\&.config\&.file\fP
.PP
\fCelektry\&.config\&.file\fP contains the name of the dummy file for \fCintercept open\fP\&. \fCopen\fP calls to this file will be intercepted and the content generated by \fCintercept open\fP
.PP
.SS "Setting preferences"
.PP
.SS "Guided setup"
.PP
Running \fCkdb configure-firefox -a\fP provides a guided setup for adding http_proxy and homepage preferences\&.
.PP
``` % kdb configure-firefox -a Add new preferences Config Setup:
.PP
1) Proxy 2) Homepage 0) Exit 1
.PP
Setting up HTTP Proxy 1) lock 2) default 3) user 0) Exit 1
.PP
Proxy Type 0) No Proxy 1) Manual Setup 2) PAC 4) Auto-detect 5) System Settings 1
.PP
Set string to 1 Host/IP: 127\&.0\&.0\&.1 Port: 8080 Setting lockPref HTTP Proxy to 127\&.0\&.0\&.1:8080 ```
.PP
.SS "Manual setup"
.PP
This example shows how to manually setup a preferences\&. It's equivalent to the example shown above in the \fCGuided setup\fP ``` kdb setmeta user/prefs/lock/network/proxy/type type integer kdb set user/prefs/lock/network/proxy/type 1 kdb setmeta user/prefs/lock/network/proxy/http type string kdb set user/prefs/lock/network/proxy/http 127\&.0\&.0\&.1 kdb setmeta user/prefs/lock/network/proxy/http_port type integer kdb set user/prefs/lock/network/proxy/http_port 8080 ```
.PP
.SS "Test Setup"
.PP
Running \fCkdb configure-firefox -t\fP will set up some test values\&.
.PP
``` % kdb export /preload
.PP
[open] \\/tmp\\/imnotreal\&.js = \\/tmp\\/imnotreal\&.js/generate = user/prefs \\/tmp\\/imnotreal\&.js/generate/plugin = mozprefs
.PP
% kdb export user/prefs
.PP
[lock/a/lock] 1 = lock1 2 = lock2 [pref/a/default] 1 = 1 2 = 2 [user/a/user] f = false t = true
.PP
% kdb export user/prefs mozprefs
.PP
lockPref('a\&.lock\&.1', 'lock1'); lockPref('a\&.lock\&.2', 'lock2'); pref('a\&.default\&.1', 1); pref('a\&.default\&.2', 2); user_pref('a\&.user\&.f', false); user_pref('a\&.user\&.t', true); ```
.PP
``` % kdb elektrify-open firefox-esr 'about:config' ```
.PP
 ``` % kdb setmeta user/prefs/lock/a/lock/3 type boolean % kdb set user/prefs/lock/a/lock/3 true % kdb export user/prefs
.PP
[lock/a/lock] 1 = lock1 2 = lock2 3 = true [pref/a/default] 1 = 1 2 = 2 [user/a/user] f = false t = true ``` 
.PP
.SS "Limitations"
.PP
Changing locked values doesn't work without restarting\&. 
