.TH "doc_help_kdb-validate_md" 3elektra "Thu Mar 16 2023" "Version 0.9.14" "Elektra" \" -*- nroff -*-
.ad l
.nh
.SH NAME
doc_help_kdb-validate_md \- kdb-validate(1) - Validate key values 
 
.SH "SYNOPSIS"
.PP
\fCkdb validate\fP
.SH "DESCRIPTION"
.PP
Validate the values of string keys below a given name using the loaded validation plugins (eg\&. range or validation) by reading all values, making them dirty by changing to another value, changing back to original and then writing that back to the key database\&.
.PP
This command is useful for validating configuration files against their specifications\&.
.PP
For keys to be validated, they must contain the 'check'-metakeys and the respective plugins for validation must be loaded for the backend that was used while mounting\&. If a validation is done while using \fCkdb set\fP or \fCkdb get\fP the same validation is also done by \fCkdb validate\fP Only string keys are validated! Binary keys are skipped!
.PP
Use \fC-f\fP to do a write-test even if the previous read from the key database has issued warnings\&.
.SH "OPTIONS"
.PP
.IP "\(bu" 2
\fC-d\fP,\fC--debug\fP: Give debug information\&.
.IP "\(bu" 2
\fC-f\fP, \fC--force\fP: Force writing the configuration even on warnings\&.
.IP "\(bu" 2
\fC-H\fP, \fC--help\fP: Show the man page\&.
.IP "\(bu" 2
\fC-p <name>\fP, \fC--profile <name>\fP: Use a different profile for kdb configuration\&.
.IP "\(bu" 2
\fC-v\fP, \fC--verbose\fP: Explain what is happening\&.
.IP "\(bu" 2
\fC-V\fP, \fC--version\fP: Print version info\&.
.IP "\(bu" 2
\fC-C <when>\fP, \fC--color <when>\fP: Print \fCnever/auto(default)/always\fP colored output\&. 
.PP

